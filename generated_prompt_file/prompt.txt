
    你是软件测试方面首屈一指的专家，尤其擅长fuzz编译和构建问题的解决。通常是由fuzz配置文件与项目的文件内容不匹配导致的编译或构建问题。下面我将给你提供不同项目在oss-fuzz编译过程中的报错，请你根据报错信息和配置文件内容等信息对报错给出针对性的解决方案，尽可能的不去改动与问题不相关的文件内容，最终使该项目能够成功的进行编译和build。
    下面将给出wasmtime的Dockerfile、build.sh、default.options、project.yaml、文件树、报错日志内容。请你对文件树进行读取并分析给出的信息并且指出问题可能是由哪些文件内容引起的，是fuzz测试构建的核心文件如Dockerfile、build.sh或者是wasmtime项目中的文件，并尝试给出解决方案。


--- Configuration Files ---

### 内容来源: Dockerfile ###
# Copyright 2020 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

FROM gcr.io/oss-fuzz-base/base-builder-rust
RUN apt-get update && apt-get install -y make autoconf automake libtool curl \
  cmake python llvm-dev libclang-dev clang \
  libgmp-dev pkg-config

# Install a newer version of OCaml than provided by Ubuntu 16.04 (base version for this image)
RUN curl -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh -o install.sh && \
  echo | sh install.sh && \
  opam init --disable-sandboxing --yes --compiler=4.11.2 && \
  opam install ocamlbuild ocamlfind --yes && \
  CFLAGS= opam install zarith --yes

RUN git clone --depth 1 https://github.com/bytecodealliance/wasm-tools wasm-tools

RUN git clone --depth 1 https://github.com/bytecodealliance/regalloc2 regalloc2

RUN git clone --depth 1 https://github.com/bytecodealliance/wasmtime wasmtime
WORKDIR wasmtime
#RUN git submodule update --init --recursive

#RUN git clone --depth 1 https://github.com/bytecodealliance/wasmtime-libfuzzer-corpus wasmtime-libfuzzer-corpus

# The default toolchain used by OSS-Fuzz is too old to build Wasmtime at this
# time.
ENV RUSTUP_TOOLCHAIN nightly-2025-07-16

COPY build.sh *.options $SRC/

### 内容来源: build.sh ###
#!/bin/bash -eu
# Copyright 2020 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

# Commands migrated from Dockerfile to make CIFuzz work
# REF: https://github.com/google/oss-fuzz/issues/6755
git submodule update --init --recursive

# Note: This project creates Rust fuzz targets exclusively

build() {
  project=$1
  shift
  fuzzer_prefix=$1
  shift
  fuzz_targets=$1
  shift
  fuzz_target_path=$1
  shift
  PROJECT_DIR=$SRC/$project

  # ensure we get absolute paths for the coverage report
  cd $PROJECT_DIR
  crate_src_abspath=`cargo metadata --no-deps --format-version 1 | jq -r '.workspace_root'`
  while read i; do
    export RUSTFLAGS="$RUSTFLAGS --remap-path-prefix $i=$crate_src_abspath/$i"
  done <<< "$(find . -name "*.rs" | cut -d/ -f2 | uniq)"

  cd $PROJECT_DIR/fuzz && cargo fuzz build --sanitizer none --strip-dead-code -O --debug-assertions "$@"

  FUZZ_TARGET_OUTPUT_DIR=$PROJECT_DIR/$fuzz_target_path/x86_64-unknown-linux-gnu/release

  if [ "x$fuzz_targets" = "x" ]; then
      fuzz_targets=$PROJECT_DIR/fuzz/fuzz_targets/*.rs
  fi

  for f in $fuzz_targets; do
      src_name=$(basename ${f%.*})
      dst_name=$fuzzer_prefix$src_name
      cp $FUZZ_TARGET_OUTPUT_DIR/$src_name $OUT/$dst_name

      if [[ -f $SRC/$dst_name.options ]]; then
        cp $SRC/$dst_name.options $OUT/$dst_name.options
      else
        cp $SRC/default.options $OUT/$dst_name.options
      fi
  done
}

# Ensure OCaml environment is set up prior to Wasmtime build.
eval $(opam env)

build wasmtime "" "" target
build wasm-tools wasm-tools- "" target --features wasmtime
# build regalloc2 regalloc2- ion fuzz/target
build regalloc2 regalloc2- ion_checker fuzz/target
# In coverage builds copy the opam header files into the output so coverage can
# find the source files.
if [ "$SANITIZER" = "coverage" ]; then
  cp --recursive --dereference --no-preserve mode,ownership --parents \
    $HOME/.opam/4.11.2/lib/ocaml $OUT
fi

### 内容来源: default.options ###
[asan]
allow_user_segv_handler=1
handle_sigill=0
handle_segv=1
handle_sigfpe=1

### 内容来源: project.yaml ###
homepage: "https://wasmtime.dev/"
primary_contact: "tsc@bytecodealliance.org"
auto_ccs:
  - "fitzgen@gmail.com"
  - "alex@alexcrichton.com"
  - "till@tillschneidereit.net"
  - "cfallin@gmail.com"
  - "andrew.s.brown2@gmail.com"
  - "saule.cabrera@gmail.com"
  - "jeff.charles@shopify.com"
sanitizers:
  - address
fuzzing_engines:
  - libfuzzer
language: rust
main_repo: 'https://github.com/bytecodealliance/wasmtime'

# Ignore some ocaml files that show up, dependencies on crates.io, and the
# standard library itself.
coverage_extra_args: >
  -ignore-filename-regex=.*/root/.opam/.*
  -ignore-filename-regex=.*/registry/src/.*crates.io.*/.*
  -ignore-filename-regex=.*/rustc/.*


--- Project File Tree ---
📁 wasmtime
├── 📄 ADOPTERS.md
├── 📄 CODEOWNERS
├── 📄 CODE_OF_CONDUCT.md
├── 📄 CONTRIBUTING.md
├── 📄 Cargo.lock
├── 📄 Cargo.toml
├── 📄 LICENSE
├── 📄 ORG_CODE_OF_CONDUCT.md
├── 📄 README.md
├── 📄 RELEASES.md
├── 📄 SECURITY.md
├── 📁 benches
│   ├── 📄 call.rs
│   ├── 📁 compile
│   │   └── 📄 empty.wat
│   ├── 📄 compile.rs
│   ├── 📁 instantiation
│   │   ├── 📄 data_segments.wat
│   │   ├── 📄 empty.wat
│   │   └── 📄 small_memory.wat
│   ├── 📄 instantiation.rs
│   ├── 📄 thread_eager_init.rs
│   ├── 📄 trap.rs
│   ├── 📁 wasi
│   │   ├── 📄 get-current-time.wat
│   │   ├── 📄 open-file.wat
│   │   ├── 📄 read-arguments.wat
│   │   ├── 📄 read-dir.wat
│   │   ├── 📄 read-environment.wat
│   │   └── 📄 read-file.wat
│   ├── 📄 wasi.rs
│   └── 📄 wasmtime-serve-rps.sh
├── 📄 build.rs
├── 📁 ci
│   ├── 📄 RELEASES-template.md
│   ├── 📄 build-build-matrix.js
│   ├── 📄 build-release-artifacts.sh
│   ├── 📄 build-src-tarball.sh
│   ├── 📄 build-tarballs.sh
│   ├── 📄 build-test-matrix.js
│   ├── 📄 build-wasi-preview1-component-adapter-provider.sh
│   ├── 📄 build-wasi-preview1-component-adapter.sh
│   ├── 📁 docker
│   │   ├── 📁 aarch64-linux
│   │   │   └── 📄 Dockerfile
│   │   ├── 📁 aarch64-musl
│   │   │   └── 📄 Dockerfile
│   │   ├── 📁 armv7-linux
│   │   │   └── 📄 Dockerfile
│   │   ├── 📁 i686-linux
│   │   │   └── 📄 Dockerfile
│   │   ├── 📁 riscv64gc-linux
│   │   │   └── 📄 Dockerfile
│   │   ├── 📁 s390x-linux
│   │   │   └── 📄 Dockerfile
│   │   ├── 📁 x86_64-linux
│   │   │   └── 📄 Dockerfile
│   │   └── 📁 x86_64-musl
│   │       └── 📄 Dockerfile
│   ├── 📄 ensure_deterministic_build.sh
│   ├── 📄 find-latest-release.rs
│   ├── 📄 merge-artifacts.sh
│   ├── 📄 miri-provenance-test.sh
│   ├── 📄 miri-wast.sh
│   ├── 📄 print-current-version.sh
│   ├── 📄 run-tests.py
│   ├── 📄 trigger-release-branch-ci.rs
│   ├── 📄 vendor-c-api-headers.sh
│   ├── 📄 vendor-wit.sh
│   └── 📄 wasmtime.wxs
├── 📁 cranelift
│   ├── 📄 Cargo.toml
│   ├── 📄 README.md
│   ├── 📁 assembler-x64
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   ├── 📁 fuzz
│   │   │   ├── 📄 Cargo.toml
│   │   │   └── 📁 fuzz_targets
│   │   │       └── 📄 roundtrip.rs
│   │   ├── 📁 meta
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 README.md
│   │   │   └── 📁 src
│   │   │       ├── 📁 dsl
│   │   │       │   ├── 📄 custom.rs
│   │   │       │   ├── 📄 encoding.rs
│   │   │       │   ├── 📄 features.rs
│   │   │       │   └── 📄 format.rs
│   │   │       ├── 📄 dsl.rs
│   │   │       ├── 📁 generate
│   │   │       │   ├── 📄 features.rs
│   │   │       │   ├── 📄 format.rs
│   │   │       │   ├── 📄 inst.rs
│   │   │       │   └── 📄 operand.rs
│   │   │       ├── 📄 generate.rs
│   │   │       ├── 📁 instructions
│   │   │       │   ├── 📄 abs.rs
│   │   │       │   ├── 📄 add.rs
│   │   │       │   ├── 📄 align.rs
│   │   │       │   ├── 📄 and.rs
│   │   │       │   ├── 📄 atomic.rs
│   │   │       │   ├── 📄 avg.rs
│   │   │       │   ├── 📄 bitmanip.rs
│   │   │       │   ├── 📄 cmov.rs
│   │   │       │   ├── 📄 cmp.rs
│   │   │       │   ├── 📄 cvt.rs
│   │   │       │   ├── 📄 div.rs
│   │   │       │   ├── 📄 fma.rs
│   │   │       │   ├── 📄 jmp.rs
│   │   │       │   ├── 📄 lanes.rs
│   │   │       │   ├── 📄 max.rs
│   │   │       │   ├── 📄 min.rs
│   │   │       │   ├── 📄 misc.rs
│   │   │       │   ├── 📄 mov.rs
│   │   │       │   ├── 📄 mul.rs
│   │   │       │   ├── 📄 neg.rs
│   │   │       │   ├── 📄 nop.rs
│   │   │       │   ├── 📄 or.rs
│   │   │       │   ├── 📄 pack.rs
│   │   │       │   ├── 📄 pma.rs
│   │   │       │   ├── 📄 recip.rs
│   │   │       │   ├── 📄 round.rs
│   │   │       │   ├── 📄 setcc.rs
│   │   │       │   ├── 📄 shift.rs
│   │   │       │   ├── 📄 sqrt.rs
│   │   │       │   ├── 📄 stack.rs
│   │   │       │   ├── 📄 sub.rs
│   │   │       │   ├── 📄 unpack.rs
│   │   │       │   └── 📄 xor.rs
│   │   │       ├── 📄 instructions.rs
│   │   │       ├── 📄 lib.rs
│   │   │       └── 📄 main.rs
│   │   └── 📁 src
│   │       ├── 📄 api.rs
│   │       ├── 📄 custom.rs
│   │       ├── 📄 evex.rs
│   │       ├── 📄 features.rs
│   │       ├── 📄 fixed.rs
│   │       ├── 📄 fuzz.rs
│   │       ├── 📄 gpr.rs
│   │       ├── 📄 imm.rs
│   │       ├── 📄 inst.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 main.rs
│   │       ├── 📄 mem.rs
│   │       ├── 📄 rex.rs
│   │       ├── 📄 vex.rs
│   │       └── 📄 xmm.rs
│   ├── 📁 bforest
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 lib.rs
│   │       ├── 📄 map.rs
│   │       ├── 📄 node.rs
│   │       ├── 📄 path.rs
│   │       ├── 📄 pool.rs
│   │       └── 📄 set.rs
│   ├── 📁 bitset
│   │   ├── 📄 Cargo.toml
│   │   ├── 📁 src
│   │   │   ├── 📄 compound.rs
│   │   │   ├── 📄 lib.rs
│   │   │   └── 📄 scalar.rs
│   │   └── 📁 tests
│   │       └── 📄 bitset.rs
│   ├── 📁 codegen
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   ├── 📁 meta
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 LICENSE
│   │   │   ├── 📄 README.md
│   │   │   └── 📁 src
│   │   │       ├── 📁 cdsl
│   │   │       │   ├── 📄 formats.rs
│   │   │       │   ├── 📄 instructions.rs
│   │   │       │   ├── 📄 isa.rs
│   │   │       │   ├── 📄 mod.rs
│   │   │       │   ├── 📄 operands.rs
│   │   │       │   ├── 📄 settings.rs
│   │   │       │   ├── 📄 types.rs
│   │   │       │   └── 📄 typevar.rs
│   │   │       ├── 📄 constant_hash.rs
│   │   │       ├── 📄 gen_asm.rs
│   │   │       ├── 📄 gen_inst.rs
│   │   │       ├── 📄 gen_isle.rs
│   │   │       ├── 📄 gen_settings.rs
│   │   │       ├── 📄 gen_types.rs
│   │   │       ├── 📁 isa
│   │   │       │   ├── 📄 arm64.rs
│   │   │       │   ├── 📄 mod.rs
│   │   │       │   ├── 📄 pulley.rs
│   │   │       │   ├── 📄 riscv64.rs
│   │   │       │   ├── 📄 s390x.rs
│   │   │       │   └── 📄 x86.rs
│   │   │       ├── 📄 isle.rs
│   │   │       ├── 📄 lib.rs
│   │   │       ├── 📄 pulley.rs
│   │   │       ├── 📁 shared
│   │   │       │   ├── 📄 entities.rs
│   │   │       │   ├── 📄 formats.rs
│   │   │       │   ├── 📄 immediates.rs
│   │   │       │   ├── 📄 instructions.rs
│   │   │       │   ├── 📄 mod.rs
│   │   │       │   ├── 📄 settings.rs
│   │   │       │   └── 📄 types.rs
│   │   │       └── 📄 unique_table.rs
│   │   ├── 📁 shared
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 LICENSE
│   │   │   ├── 📄 README.md
│   │   │   └── 📁 src
│   │   │       ├── 📄 constant_hash.rs
│   │   │       ├── 📄 constants.rs
│   │   │       └── 📄 lib.rs
│   │   └── 📁 src
│   │       ├── 📄 alias_analysis.rs
│   │       ├── 📁 binemit
│   │       │   └── 📄 mod.rs
│   │       ├── 📄 cfg_printer.rs
│   │       ├── 📄 constant_hash.rs
│   │       ├── 📄 context.rs
│   │       ├── 📄 ctxhash.rs
│   │       ├── 📄 cursor.rs
│   │       ├── 📄 data_value.rs
│   │       ├── 📄 dbg.rs
│   │       ├── 📁 dominator_tree
│   │       │   └── 📄 simple.rs
│   │       ├── 📄 dominator_tree.rs
│   │       ├── 📁 egraph
│   │       │   ├── 📄 cost.rs
│   │       │   └── 📄 elaborate.rs
│   │       ├── 📄 egraph.rs
│   │       ├── 📄 flowgraph.rs
│   │       ├── 📄 incremental_cache.rs
│   │       ├── 📄 inline.rs
│   │       ├── 📄 inst_predicates.rs
│   │       ├── 📄 inst_specs.isle
│   │       ├── 📁 ir
│   │       │   ├── 📄 atomic_rmw_op.rs
│   │       │   ├── 📄 builder.rs
│   │       │   ├── 📄 condcodes.rs
│   │       │   ├── 📄 constant.rs
│   │       │   ├── 📄 dfg.rs
│   │       │   ├── 📄 dynamic_type.rs
│   │       │   ├── 📄 entities.rs
│   │       │   ├── 📄 exception_table.rs
│   │       │   ├── 📄 extfunc.rs
│   │       │   ├── 📄 extname.rs
│   │       │   ├── 📄 function.rs
│   │       │   ├── 📄 globalvalue.rs
│   │       │   ├── 📄 immediates.rs
│   │       │   ├── 📄 instructions.rs
│   │       │   ├── 📄 jumptable.rs
│   │       │   ├── 📄 known_symbol.rs
│   │       │   ├── 📄 layout.rs
│   │       │   ├── 📄 libcall.rs
│   │       │   ├── 📄 memflags.rs
│   │       │   ├── 📄 memtype.rs
│   │       │   ├── 📄 mod.rs
│   │       │   ├── 📄 pcc.rs
│   │       │   ├── 📄 progpoint.rs
│   │       │   ├── 📄 sourceloc.rs
│   │       │   ├── 📄 stackslot.rs
│   │       │   ├── 📄 trapcode.rs
│   │       │   ├── 📄 types.rs
│   │       │   └── 📄 user_stack_maps.rs
│   │       ├── 📁 isa
│   │       │   ├── 📁 aarch64
│   │       │   │   ├── 📄 abi.rs
│   │       │   │   ├── 📁 inst
│   │       │   │   │   ├── 📄 args.rs
│   │       │   │   │   ├── 📄 emit.rs
│   │       │   │   │   ├── 📄 emit_tests.rs
│   │       │   │   │   ├── 📄 imms.rs
│   │       │   │   │   ├── 📄 mod.rs
│   │       │   │   │   ├── 📄 regs.rs
│   │       │   │   │   ├── 📁 unwind
│   │       │   │   │   │   └── 📄 systemv.rs
│   │       │   │   │   └── 📄 unwind.rs
│   │       │   │   ├── 📄 inst.isle
│   │       │   │   ├── 📄 inst_neon.isle
│   │       │   │   ├── 📁 lower
│   │       │   │   │   ├── 📁 isle
│   │       │   │   │   │   └── 📄 generated_code.rs
│   │       │   │   │   └── 📄 isle.rs
│   │       │   │   ├── 📄 lower.isle
│   │       │   │   ├── 📄 lower.rs
│   │       │   │   ├── 📄 lower_dynamic_neon.isle
│   │       │   │   ├── 📄 mod.rs
│   │       │   │   ├── 📄 pcc.rs
│   │       │   │   └── 📄 settings.rs
│   │       │   ├── 📄 call_conv.rs
│   │       │   ├── 📄 mod.rs
│   │       │   ├── 📄 pulley32.rs
│   │       │   ├── 📄 pulley64.rs
│   │       │   ├── 📁 pulley_shared
│   │       │   │   ├── 📄 abi.rs
│   │       │   │   ├── 📁 inst
│   │       │   │   │   ├── 📄 args.rs
│   │       │   │   │   ├── 📄 emit.rs
│   │       │   │   │   ├── 📄 mod.rs
│   │       │   │   │   └── 📄 regs.rs
│   │       │   │   ├── 📄 inst.isle
│   │       │   │   ├── 📁 lower
│   │       │   │   │   ├── 📁 isle
│   │       │   │   │   │   └── 📄 generated_code.rs
│   │       │   │   │   └── 📄 isle.rs
│   │       │   │   ├── 📄 lower.isle
│   │       │   │   ├── 📄 lower.rs
│   │       │   │   ├── 📄 mod.rs
│   │       │   │   └── 📄 settings.rs
│   │       │   ├── 📁 riscv64
│   │       │   │   ├── 📄 abi.rs
│   │       │   │   ├── 📁 inst
│   │       │   │   │   ├── 📄 args.rs
│   │       │   │   │   ├── 📄 emit.rs
│   │       │   │   │   ├── 📄 emit_tests.rs
│   │       │   │   │   ├── 📄 encode.rs
│   │       │   │   │   ├── 📄 imms.rs
│   │       │   │   │   ├── 📄 mod.rs
│   │       │   │   │   ├── 📄 regs.rs
│   │       │   │   │   ├── 📁 unwind
│   │       │   │   │   │   └── 📄 systemv.rs
│   │       │   │   │   ├── 📄 unwind.rs
│   │       │   │   │   └── 📄 vector.rs
│   │       │   │   ├── 📄 inst.isle
│   │       │   │   ├── 📄 inst_vector.isle
│   │       │   │   ├── 📁 lower
│   │       │   │   │   ├── 📁 isle
│   │       │   │   │   │   └── 📄 generated_code.rs
│   │       │   │   │   └── 📄 isle.rs
│   │       │   │   ├── 📄 lower.isle
│   │       │   │   ├── 📄 lower.rs
│   │       │   │   ├── 📄 mod.rs
│   │       │   │   └── 📄 settings.rs
│   │       │   ├── 📁 s390x
│   │       │   │   ├── 📄 abi.rs
│   │       │   │   ├── 📁 inst
│   │       │   │   │   ├── 📄 args.rs
│   │       │   │   │   ├── 📄 emit.rs
│   │       │   │   │   ├── 📄 emit_tests.rs
│   │       │   │   │   ├── 📄 imms.rs
│   │       │   │   │   ├── 📄 mod.rs
│   │       │   │   │   ├── 📄 regs.rs
│   │       │   │   │   ├── 📁 unwind
│   │       │   │   │   │   └── 📄 systemv.rs
│   │       │   │   │   └── 📄 unwind.rs
│   │       │   │   ├── 📄 inst.isle
│   │       │   │   ├── 📁 lower
│   │       │   │   │   ├── 📁 isle
│   │       │   │   │   │   └── 📄 generated_code.rs
│   │       │   │   │   └── 📄 isle.rs
│   │       │   │   ├── 📄 lower.isle
│   │       │   │   ├── 📄 lower.rs
│   │       │   │   ├── 📄 mod.rs
│   │       │   │   └── 📄 settings.rs
│   │       │   ├── 📁 unwind
│   │       │   │   ├── 📄 systemv.rs
│   │       │   │   ├── 📄 winarm64.rs
│   │       │   │   └── 📄 winx64.rs
│   │       │   ├── 📄 unwind.rs
│   │       │   ├── 📄 winch.rs
│   │       │   └── 📁 x64
│   │       │       ├── 📄 abi.rs
│   │       │       ├── 📁 inst
│   │       │       │   ├── 📄 args.rs
│   │       │       │   ├── 📄 emit.rs
│   │       │       │   ├── 📄 emit_state.rs
│   │       │       │   ├── 📄 emit_tests.rs
│   │       │       │   ├── 📄 external.rs
│   │       │       │   ├── 📄 mod.rs
│   │       │       │   ├── 📄 regs.rs
│   │       │       │   ├── 📄 stack_switch.rs
│   │       │       │   ├── 📁 unwind
│   │       │       │   │   ├── 📄 systemv.rs
│   │       │       │   │   └── 📄 winx64.rs
│   │       │       │   └── 📄 unwind.rs
│   │       │       ├── 📄 inst.isle
│   │       │       ├── 📁 lower
│   │       │       │   ├── 📁 isle
│   │       │       │   │   └── 📄 generated_code.rs
│   │       │       │   └── 📄 isle.rs
│   │       │       ├── 📄 lower.isle
│   │       │       ├── 📄 lower.rs
│   │       │       ├── 📄 mod.rs
│   │       │       ├── 📄 pcc.rs
│   │       │       └── 📄 settings.rs
│   │       ├── 📄 isle_prelude.rs
│   │       ├── 📁 legalizer
│   │       │   ├── 📄 branch_to_trap.rs
│   │       │   ├── 📄 globalvalue.rs
│   │       │   └── 📄 mod.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 loop_analysis.rs
│   │       ├── 📁 machinst
│   │       │   ├── 📄 abi.rs
│   │       │   ├── 📄 blockorder.rs
│   │       │   ├── 📄 buffer.rs
│   │       │   ├── 📄 compile.rs
│   │       │   ├── 📄 helpers.rs
│   │       │   ├── 📄 inst_common.rs
│   │       │   ├── 📄 isle.rs
│   │       │   ├── 📄 lower.rs
│   │       │   ├── 📄 mod.rs
│   │       │   ├── 📄 pcc.rs
│   │       │   ├── 📄 reg.rs
│   │       │   ├── 📄 valueregs.rs
│   │       │   └── 📄 vcode.rs
│   │       ├── 📄 nan_canonicalization.rs
│   │       ├── 📁 opts
│   │       │   ├── 📄 README.md
│   │       │   ├── 📄 arithmetic.isle
│   │       │   ├── 📄 bitops.isle
│   │       │   ├── 📄 cprop.isle
│   │       │   ├── 📄 div_const.rs
│   │       │   ├── 📄 extends.isle
│   │       │   ├── 📄 generated_code.rs
│   │       │   ├── 📄 icmp.isle
│   │       │   ├── 📄 remat.isle
│   │       │   ├── 📄 selects.isle
│   │       │   ├── 📄 shifts.isle
│   │       │   ├── 📄 skeleton.isle
│   │       │   ├── 📄 spaceship.isle
│   │       │   ├── 📄 spectre.isle
│   │       │   └── 📄 vector.isle
│   │       ├── 📄 opts.rs
│   │       ├── 📄 prelude.isle
│   │       ├── 📄 prelude_lower.isle
│   │       ├── 📄 prelude_opt.isle
│   │       ├── 📄 print_errors.rs
│   │       ├── 📄 ranges.rs
│   │       ├── 📄 remove_constant_phis.rs
│   │       ├── 📄 result.rs
│   │       ├── 📄 scoped_hash_map.rs
│   │       ├── 📄 settings.rs
│   │       ├── 📄 souper_harvest.rs
│   │       ├── 📄 take_and_replace.rs
│   │       ├── 📄 timing.rs
│   │       ├── 📄 traversals.rs
│   │       ├── 📄 unreachable_code.rs
│   │       ├── 📄 value_label.rs
│   │       ├── 📁 verifier
│   │       │   └── 📄 mod.rs
│   │       └── 📄 write.rs
│   ├── 📁 control
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 chaos.rs
│   │       ├── 📄 lib.rs
│   │       └── 📄 zero_sized.rs
│   ├── 📁 docs
│   │   ├── 📄 compare-llvm.md
│   │   ├── 📄 index.md
│   │   ├── 📄 ir.md
│   │   ├── 📄 isle-integration.md
│   │   └── 📄 testing.md
│   ├── 📁 entity
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 boxed_slice.rs
│   │       ├── 📄 iter.rs
│   │       ├── 📄 keys.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 list.rs
│   │       ├── 📄 map.rs
│   │       ├── 📄 packed_option.rs
│   │       ├── 📄 primary.rs
│   │       ├── 📄 set.rs
│   │       └── 📄 sparse.rs
│   ├── 📁 filetests
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📁 filetests
│   │   │   ├── 📁 alias
│   │   │   │   ├── 📄 categories.clif
│   │   │   │   ├── 📄 extends.clif
│   │   │   │   ├── 📄 fence.clif
│   │   │   │   ├── 📄 multiple-blocks.clif
│   │   │   │   ├── 📄 partial-redundancy.clif
│   │   │   │   └── 📄 simple-alias.clif
│   │   │   ├── 📁 cfg
│   │   │   │   ├── 📄 loop.clif
│   │   │   │   ├── 📄 traps_early.clif
│   │   │   │   └── 📄 unused_node.clif
│   │   │   ├── 📁 domtree
│   │   │   │   ├── 📄 basic.clif
│   │   │   │   ├── 📄 loops.clif
│   │   │   │   ├── 📄 loops2.clif
│   │   │   │   ├── 📄 tall-tree.clif
│   │   │   │   └── 📄 wide-tree.clif
│   │   │   ├── 📁 egraph
│   │   │   │   ├── 📄 alias_analysis.clif
│   │   │   │   ├── 📄 arithmetic.clif
│   │   │   │   ├── 📄 associative-and-commutative.clif
│   │   │   │   ├── 📄 basic-gvn.clif
│   │   │   │   ├── 📄 bitops.clif
│   │   │   │   ├── 📄 bitselect.clif
│   │   │   │   ├── 📄 cprop-splat.clif
│   │   │   │   ├── 📄 cprop.clif
│   │   │   │   ├── 📄 exponential-selects.clif
│   │   │   │   ├── 📄 extends.clif
│   │   │   │   ├── 📄 fcvt-from-int.clif
│   │   │   │   ├── 📄 fcvt.clif
│   │   │   │   ├── 📄 fold-add-and-xor.clif
│   │   │   │   ├── 📄 fold-add-or-and.clif
│   │   │   │   ├── 📄 fold-add-shifts.clif
│   │   │   │   ├── 📄 fold-add-sub.clif
│   │   │   │   ├── 📄 fold-and-shifts.clif
│   │   │   │   ├── 📄 fold-and-xor-not.clif
│   │   │   │   ├── 📄 fold-bitops.clif
│   │   │   │   ├── 📄 fold-or-and-not.clif
│   │   │   │   ├── 📄 fold-or-and.clif
│   │   │   │   ├── 📄 fold-selects.clif
│   │   │   │   ├── 📄 fold-sub-add.clif
│   │   │   │   ├── 📄 fold-sub-shifts.clif
│   │   │   │   ├── 📄 fold-xor-xor.clif
│   │   │   │   ├── 📄 i128-opts.clif
│   │   │   │   ├── 📄 icmp-new.clif
│   │   │   │   ├── 📄 icmp-parameterized.clif
│   │   │   │   ├── 📄 icmp.clif
│   │   │   │   ├── 📄 idempotent-traps.clif
│   │   │   │   ├── 📄 isplit.clif
│   │   │   │   ├── 📄 issue-10409.clif
│   │   │   │   ├── 📄 issue-5405.clif
│   │   │   │   ├── 📄 issue-5417.clif
│   │   │   │   ├── 📄 issue-5437.clif
│   │   │   │   ├── 📄 issue-5716.clif
│   │   │   │   ├── 📄 issue-5796.clif
│   │   │   │   ├── 📄 issue-7875.clif
│   │   │   │   ├── 📄 issue-7891.clif
│   │   │   │   ├── 📄 issue-7999.clif
│   │   │   │   ├── 📄 licm.clif
│   │   │   │   ├── 📄 load-hoist.clif
│   │   │   │   ├── 📄 make-icmp-parameterized-tests.sh
│   │   │   │   ├── 📄 misc.clif
│   │   │   │   ├── 📄 mul-pow-2.clif
│   │   │   │   ├── 📄 multivalue.clif
│   │   │   │   ├── 📄 not_a_load.clif
│   │   │   │   ├── 📄 reassociate-constants-in-shifts.clif
│   │   │   │   ├── 📄 remat.clif
│   │   │   │   ├── 📄 sdiv.clif
│   │   │   │   ├── 📄 select-to-abs.clif
│   │   │   │   ├── 📄 select.clif
│   │   │   │   ├── 📄 selects.clif
│   │   │   │   ├── 📄 shifts.clif
│   │   │   │   ├── 📄 shifts2.clif
│   │   │   │   ├── 📄 simd-splat-simplify.clif
│   │   │   │   ├── 📄 simd-splat-widen.clif
│   │   │   │   ├── 📄 skeleton.clif
│   │   │   │   ├── 📄 spaceship.clif
│   │   │   │   ├── 📄 spectre.clif
│   │   │   │   ├── 📄 srem.clif
│   │   │   │   ├── 📄 try_call-mem-clobber.clif
│   │   │   │   ├── 📄 udiv.clif
│   │   │   │   ├── 📄 unordered.clif
│   │   │   │   ├── 📄 urem.clif
│   │   │   │   └── 📄 vector.clif
│   │   │   ├── 📁 inline
│   │   │   │   ├── 📄 basic.clif
│   │   │   │   ├── 📄 br-table.clif
│   │   │   │   ├── 📄 control-flow.clif
│   │   │   │   ├── 📄 dynamic-stack-slots.clif
│   │   │   │   ├── 📄 globals.clif
│   │   │   │   ├── 📄 return-call-indirect.clif
│   │   │   │   ├── 📄 return-call.clif
│   │   │   │   ├── 📄 shuffle.clif
│   │   │   │   ├── 📄 stack-maps-opt.clif
│   │   │   │   ├── 📄 stack-maps.clif
│   │   │   │   ├── 📄 stack-slots.clif
│   │   │   │   ├── 📄 try-call.clif
│   │   │   │   ├── 📄 unreachable-block.clif
│   │   │   │   ├── 📄 user-external-name-refs.clif
│   │   │   │   ├── 📄 vconst.clif
│   │   │   │   └── 📄 vmctx.clif
│   │   │   ├── 📁 isa
│   │   │   │   ├── 📁 aarch64
│   │   │   │   │   ├── 📄 amodes.clif
│   │   │   │   │   ├── 📄 arithmetic.clif
│   │   │   │   │   ├── 📄 atomic-cas.clif
│   │   │   │   │   ├── 📄 atomic-rmw-lse.clif
│   │   │   │   │   ├── 📄 atomic-rmw.clif
│   │   │   │   │   ├── 📄 atomic_load.clif
│   │   │   │   │   ├── 📄 atomic_store.clif
│   │   │   │   │   ├── 📄 basic1.clif
│   │   │   │   │   ├── 📄 big-endian.clif
│   │   │   │   │   ├── 📄 bitcast-fp16.clif
│   │   │   │   │   ├── 📄 bitcast.clif
│   │   │   │   │   ├── 📄 bitops.clif
│   │   │   │   │   ├── 📄 bitopts-optimized.clif
│   │   │   │   │   ├── 📄 bmask.clif
│   │   │   │   │   ├── 📄 bswap.clif
│   │   │   │   │   ├── 📄 bti.clif
│   │   │   │   │   ├── 📄 call-indirect.clif
│   │   │   │   │   ├── 📄 call-pauth-bkey.clif
│   │   │   │   │   ├── 📄 call-pauth.clif
│   │   │   │   │   ├── 📄 call.clif
│   │   │   │   │   ├── 📄 cold-blocks.clif
│   │   │   │   │   ├── 📄 compare_zero.clif
│   │   │   │   │   ├── 📄 condbr.clif
│   │   │   │   │   ├── 📄 condops.clif
│   │   │   │   │   ├── 📄 constants-fp16.clif
│   │   │   │   │   ├── 📄 constants.clif
│   │   │   │   │   ├── 📄 dynamic-simd-narrow.clif
│   │   │   │   │   ├── 📄 dynamic-simd-neon.clif
│   │   │   │   │   ├── 📄 dynamic-simd-widen.clif
│   │   │   │   │   ├── 📄 dynamic-slot.clif
│   │   │   │   │   ├── 📄 exception-handler-address.clif
│   │   │   │   │   ├── 📄 exceptions.clif
│   │   │   │   │   ├── 📄 extend-op.clif
│   │   │   │   │   ├── 📄 extr.clif
│   │   │   │   │   ├── 📄 fcvt-small.clif
│   │   │   │   │   ├── 📄 fcvt.clif
│   │   │   │   │   ├── 📄 floating-point.clif
│   │   │   │   │   ├── 📄 fma.clif
│   │   │   │   │   ├── 📄 fp_sp_pc-pauth.clif
│   │   │   │   │   ├── 📄 fp_sp_pc.clif
│   │   │   │   │   ├── 📄 fuzzbug-60035.clif
│   │   │   │   │   ├── 📄 i128.clif
│   │   │   │   │   ├── 📄 iabs.clif
│   │   │   │   │   ├── 📄 icmp-const.clif
│   │   │   │   │   ├── 📄 iconst-icmp-small.clif
│   │   │   │   │   ├── 📄 iconst-imm12_from_negated.clif
│   │   │   │   │   ├── 📄 inline-probestack.clif
│   │   │   │   │   ├── 📄 issue-5985.clif
│   │   │   │   │   ├── 📄 issue-8659.clif
│   │   │   │   │   ├── 📄 jumptable.clif
│   │   │   │   │   ├── 📄 leaf.clif
│   │   │   │   │   ├── 📄 leaf_function_detection.clif
│   │   │   │   │   ├── 📄 leaf_with_preserve_frame_pointers.clif
│   │   │   │   │   ├── 📄 load-extends.clif
│   │   │   │   │   ├── 📄 load-f16-f128.clif
│   │   │   │   │   ├── 📄 load-small-vector.clif
│   │   │   │   │   ├── 📄 multivalue-ret.clif
│   │   │   │   │   ├── 📄 nan-canonicalization.clif
│   │   │   │   │   ├── 📄 narrow-arithmetic.clif
│   │   │   │   │   ├── 📄 no_spill_floats_on_try_call.clif
│   │   │   │   │   ├── 📄 pinned-reg.clif
│   │   │   │   │   ├── 📄 prologue.clif
│   │   │   │   │   ├── 📄 reduce.clif
│   │   │   │   │   ├── 📄 return-call-indirect.clif
│   │   │   │   │   ├── 📄 return-call.clif
│   │   │   │   │   ├── 📄 select-fp16.clif
│   │   │   │   │   ├── 📄 select.clif
│   │   │   │   │   ├── 📄 shift-op.clif
│   │   │   │   │   ├── 📄 shift-rotate.clif
│   │   │   │   │   ├── 📄 shuffle.clif
│   │   │   │   │   ├── 📄 simd-arithmetic.clif
│   │   │   │   │   ├── 📄 simd-bitwise-compile.clif
│   │   │   │   │   ├── 📄 simd-comparison-legalize.clif
│   │   │   │   │   ├── 📄 simd-extmul.clif
│   │   │   │   │   ├── 📄 simd-lane-access-compile.clif
│   │   │   │   │   ├── 📄 simd-logical-compile.clif
│   │   │   │   │   ├── 📄 simd-min-max.clif
│   │   │   │   │   ├── 📄 simd-narrow.clif
│   │   │   │   │   ├── 📄 simd-pairwise-add.clif
│   │   │   │   │   ├── 📄 simd-splat.clif
│   │   │   │   │   ├── 📄 simd-valltrue.clif
│   │   │   │   │   ├── 📄 simd.clif
│   │   │   │   │   ├── 📄 simd_load_zero.clif
│   │   │   │   │   ├── 📄 stack-limit.clif
│   │   │   │   │   ├── 📄 stack.clif
│   │   │   │   │   ├── 📄 stackslot.clif
│   │   │   │   │   ├── 📄 store-f16-f128.clif
│   │   │   │   │   ├── 📄 store-small-vector.clif
│   │   │   │   │   ├── 📄 symbol-value-pic.clif
│   │   │   │   │   ├── 📄 symbol-value.clif
│   │   │   │   │   ├── 📄 tail-call-conv.clif
│   │   │   │   │   ├── 📄 tls-elf-gd.clif
│   │   │   │   │   ├── 📄 tls-macho.clif
│   │   │   │   │   ├── 📄 trap_sdiv.clif
│   │   │   │   │   ├── 📄 traps.clif
│   │   │   │   │   ├── 📄 uadd_overflow_trap.clif
│   │   │   │   │   ├── 📄 uext-sext-handling.clif
│   │   │   │   │   ├── 📄 uextend-sextend.clif
│   │   │   │   │   ├── 📄 user_stack_maps.clif
│   │   │   │   │   └── 📄 vhigh_bits.clif
│   │   │   │   ├── 📁 pulley32
│   │   │   │   │   ├── 📄 bmask.clif
│   │   │   │   │   ├── 📄 br_table.clif
│   │   │   │   │   ├── 📄 brif-icmp.clif
│   │   │   │   │   ├── 📄 brif.clif
│   │   │   │   │   ├── 📄 call.clif
│   │   │   │   │   ├── 📄 exceptions.clif
│   │   │   │   │   ├── 📄 extend.clif
│   │   │   │   │   ├── 📄 iadd.clif
│   │   │   │   │   ├── 📄 icmp.clif
│   │   │   │   │   ├── 📄 iconst.clif
│   │   │   │   │   ├── 📄 isub.clif
│   │   │   │   │   ├── 📄 jump.clif
│   │   │   │   │   ├── 📄 load.clif
│   │   │   │   │   ├── 📄 special_regs.clif
│   │   │   │   │   ├── 📄 stack_addr.clif
│   │   │   │   │   ├── 📄 store.clif
│   │   │   │   │   ├── 📄 symbols.clif
│   │   │   │   │   └── 📄 trap.clif
│   │   │   │   ├── 📁 pulley64
│   │   │   │   │   ├── 📄 band.clif
│   │   │   │   │   ├── 📄 bmask.clif
│   │   │   │   │   ├── 📄 bor.clif
│   │   │   │   │   ├── 📄 br_table.clif
│   │   │   │   │   ├── 📄 brif-icmp.clif
│   │   │   │   │   ├── 📄 brif.clif
│   │   │   │   │   ├── 📄 bxor.clif
│   │   │   │   │   ├── 📄 call.clif
│   │   │   │   │   ├── 📄 call_indirect_host.clif
│   │   │   │   │   ├── 📄 exceptions.clif
│   │   │   │   │   ├── 📄 extend.clif
│   │   │   │   │   ├── 📄 iadd.clif
│   │   │   │   │   ├── 📄 icmp.clif
│   │   │   │   │   ├── 📄 iconst.clif
│   │   │   │   │   ├── 📄 imul.clif
│   │   │   │   │   ├── 📄 jump.clif
│   │   │   │   │   ├── 📄 load.clif
│   │   │   │   │   ├── 📄 loadbe.clif
│   │   │   │   │   ├── 📄 shifts.clif
│   │   │   │   │   ├── 📄 special_regs.clif
│   │   │   │   │   ├── 📄 stack_addr.clif
│   │   │   │   │   ├── 📄 store.clif
│   │   │   │   │   ├── 📄 storebe.clif
│   │   │   │   │   ├── 📄 symbols.clif
│   │   │   │   │   └── 📄 trap.clif
│   │   │   │   ├── 📁 riscv64
│   │   │   │   │   ├── 📄 amodes-fp.clif
│   │   │   │   │   ├── 📄 amodes.clif
│   │   │   │   │   ├── 📄 arithmetic-extends.clif
│   │   │   │   │   ├── 📄 arithmetic-zba.clif
│   │   │   │   │   ├── 📄 arithmetic.clif
│   │   │   │   │   ├── 📄 atomic-rmw.clif
│   │   │   │   │   ├── 📄 atomic_load.clif
│   │   │   │   │   ├── 📄 atomic_store.clif
│   │   │   │   │   ├── 📄 big-endian.clif
│   │   │   │   │   ├── 📄 bitcast-float.clif
│   │   │   │   │   ├── 📄 bitcast-scalar-vector.clif
│   │   │   │   │   ├── 📄 bitops-float.clif
│   │   │   │   │   ├── 📄 bitops-optimized.clif
│   │   │   │   │   ├── 📄 bitops.clif
│   │   │   │   │   ├── 📄 bitrev-zbb-zbkb.clif
│   │   │   │   │   ├── 📄 bitrev.clif
│   │   │   │   │   ├── 📄 br_table.clif
│   │   │   │   │   ├── 📄 brif.clif
│   │   │   │   │   ├── 📄 bswap-zbb.clif
│   │   │   │   │   ├── 📄 bswap.clif
│   │   │   │   │   ├── 📄 c-inline-probestack.clif
│   │   │   │   │   ├── 📄 call-indirect.clif
│   │   │   │   │   ├── 📄 call.clif
│   │   │   │   │   ├── 📄 ceil.clif
│   │   │   │   │   ├── 📄 cls-zbb.clif
│   │   │   │   │   ├── 📄 clz-zbb.clif
│   │   │   │   │   ├── 📄 cold-blocks.clif
│   │   │   │   │   ├── 📄 condbr.clif
│   │   │   │   │   ├── 📄 condops.clif
│   │   │   │   │   ├── 📄 constants.clif
│   │   │   │   │   ├── 📄 ctz-zbb-zbs.clif
│   │   │   │   │   ├── 📄 ctz-zbb.clif
│   │   │   │   │   ├── 📄 exceptions.clif
│   │   │   │   │   ├── 📄 extend-i128.clif
│   │   │   │   │   ├── 📄 extend-zba.clif
│   │   │   │   │   ├── 📄 extend-zbb.clif
│   │   │   │   │   ├── 📄 extend-zbkb.clif
│   │   │   │   │   ├── 📄 extend.clif
│   │   │   │   │   ├── 📄 f16-bitcast-zfhmin.clif
│   │   │   │   │   ├── 📄 f16-bitcast-zvfh.clif
│   │   │   │   │   ├── 📄 f16-fma.clif
│   │   │   │   │   ├── 📄 f16-memory.clif
│   │   │   │   │   ├── 📄 f16.clif
│   │   │   │   │   ├── 📄 f16const-zfhmin.clif
│   │   │   │   │   ├── 📄 fcmp.clif
│   │   │   │   │   ├── 📄 fcvt-small.clif
│   │   │   │   │   ├── 📄 float.clif
│   │   │   │   │   ├── 📄 floor.clif
│   │   │   │   │   ├── 📄 fma.clif
│   │   │   │   │   ├── 📄 fmax.clif
│   │   │   │   │   ├── 📄 fmin.clif
│   │   │   │   │   ├── 📄 fuzzbug-60035.clif
│   │   │   │   │   ├── 📄 i128-bmask.clif
│   │   │   │   │   ├── 📄 i128.clif
│   │   │   │   │   ├── 📄 iabs-zbb.clif
│   │   │   │   │   ├── 📄 iabs.clif
│   │   │   │   │   ├── 📄 iconst-icmp-small.clif
│   │   │   │   │   ├── 📄 inline-probestack.clif
│   │   │   │   │   ├── 📄 ishl-const.clif
│   │   │   │   │   ├── 📄 ishl.clif
│   │   │   │   │   ├── 📄 issue-5583.clif
│   │   │   │   │   ├── 📄 issue-6954.clif
│   │   │   │   │   ├── 📄 issue8847-1.clif
│   │   │   │   │   ├── 📄 issue8847.clif
│   │   │   │   │   ├── 📄 issue8866.clif
│   │   │   │   │   ├── 📄 leaf_function_detection.clif
│   │   │   │   │   ├── 📄 load-extends.clif
│   │   │   │   │   ├── 📄 load-f16-f128.clif
│   │   │   │   │   ├── 📄 multivalue-ret.clif
│   │   │   │   │   ├── 📄 nan-canonicalization-has_v.clif
│   │   │   │   │   ├── 📄 nan-canonicalization.clif
│   │   │   │   │   ├── 📄 narrow-arithmetic.clif
│   │   │   │   │   ├── 📄 nearest.clif
│   │   │   │   │   ├── 📄 popcnt.clif
│   │   │   │   │   ├── 📄 prologue.clif
│   │   │   │   │   ├── 📄 reduce.clif
│   │   │   │   │   ├── 📄 return-call-indirect.clif
│   │   │   │   │   ├── 📄 return-call.clif
│   │   │   │   │   ├── 📄 rotl.clif
│   │   │   │   │   ├── 📄 rotr.clif
│   │   │   │   │   ├── 📄 select-float.clif
│   │   │   │   │   ├── 📄 select.clif
│   │   │   │   │   ├── 📄 select_spectre_guard.clif
│   │   │   │   │   ├── 📄 simd-abi-large-spill.clif
│   │   │   │   │   ├── 📄 simd-abi.clif
│   │   │   │   │   ├── 📄 simd-avg_round.clif
│   │   │   │   │   ├── 📄 simd-band.clif
│   │   │   │   │   ├── 📄 simd-bitselect.clif
│   │   │   │   │   ├── 📄 simd-bnot.clif
│   │   │   │   │   ├── 📄 simd-bor.clif
│   │   │   │   │   ├── 📄 simd-bxor.clif
│   │   │   │   │   ├── 📄 simd-ceil.clif
│   │   │   │   │   ├── 📄 simd-extractlane.clif
│   │   │   │   │   ├── 📄 simd-fabs.clif
│   │   │   │   │   ├── 📄 simd-fadd.clif
│   │   │   │   │   ├── 📄 simd-fcmp-eq.clif
│   │   │   │   │   ├── 📄 simd-fcmp-ge.clif
│   │   │   │   │   ├── 📄 simd-fcmp-gt.clif
│   │   │   │   │   ├── 📄 simd-fcmp-le.clif
│   │   │   │   │   ├── 📄 simd-fcmp-lt.clif
│   │   │   │   │   ├── 📄 simd-fcmp-ne.clif
│   │   │   │   │   ├── 📄 simd-fcmp-one.clif
│   │   │   │   │   ├── 📄 simd-fcmp-ord.clif
│   │   │   │   │   ├── 📄 simd-fcmp-ueq.clif
│   │   │   │   │   ├── 📄 simd-fcmp-uge.clif
│   │   │   │   │   ├── 📄 simd-fcmp-ugt.clif
│   │   │   │   │   ├── 📄 simd-fcmp-ule.clif
│   │   │   │   │   ├── 📄 simd-fcmp-ult.clif
│   │   │   │   │   ├── 📄 simd-fcmp-uno.clif
│   │   │   │   │   ├── 📄 simd-fcopysign.clif
│   │   │   │   │   ├── 📄 simd-fcvt-from-sint.clif
│   │   │   │   │   ├── 📄 simd-fcvt-from-uint.clif
│   │   │   │   │   ├── 📄 simd-fcvt-to-sint-sat.clif
│   │   │   │   │   ├── 📄 simd-fcvt-to-uint-sat.clif
│   │   │   │   │   ├── 📄 simd-fdiv.clif
│   │   │   │   │   ├── 📄 simd-floor.clif
│   │   │   │   │   ├── 📄 simd-fma.clif
│   │   │   │   │   ├── 📄 simd-fmax.clif
│   │   │   │   │   ├── 📄 simd-fmin.clif
│   │   │   │   │   ├── 📄 simd-fmul.clif
│   │   │   │   │   ├── 📄 simd-fneg.clif
│   │   │   │   │   ├── 📄 simd-fsub.clif
│   │   │   │   │   ├── 📄 simd-fvdemote.clif
│   │   │   │   │   ├── 📄 simd-fvpromote-low.clif
│   │   │   │   │   ├── 📄 simd-iabs.clif
│   │   │   │   │   ├── 📄 simd-iadd-big.clif
│   │   │   │   │   ├── 📄 simd-iadd-small.clif
│   │   │   │   │   ├── 📄 simd-iadd-splat-extend.clif
│   │   │   │   │   ├── 📄 simd-iadd-swiden-high.clif
│   │   │   │   │   ├── 📄 simd-iadd-swiden-low.clif
│   │   │   │   │   ├── 📄 simd-iadd-swiden-mix.clif
│   │   │   │   │   ├── 📄 simd-iadd-uwiden-high.clif
│   │   │   │   │   ├── 📄 simd-iadd-uwiden-low.clif
│   │   │   │   │   ├── 📄 simd-iadd-uwiden-mix.clif
│   │   │   │   │   ├── 📄 simd-iadd.clif
│   │   │   │   │   ├── 📄 simd-iadd_pairwise.clif
│   │   │   │   │   ├── 📄 simd-icmp-eq.clif
│   │   │   │   │   ├── 📄 simd-icmp-ne.clif
│   │   │   │   │   ├── 📄 simd-icmp-sge.clif
│   │   │   │   │   ├── 📄 simd-icmp-sgt.clif
│   │   │   │   │   ├── 📄 simd-icmp-sle.clif
│   │   │   │   │   ├── 📄 simd-icmp-slt.clif
│   │   │   │   │   ├── 📄 simd-icmp-uge.clif
│   │   │   │   │   ├── 📄 simd-icmp-ugt.clif
│   │   │   │   │   ├── 📄 simd-icmp-ule.clif
│   │   │   │   │   ├── 📄 simd-icmp-ult.clif
│   │   │   │   │   ├── 📄 simd-ifma.clif
│   │   │   │   │   ├── 📄 simd-imul.clif
│   │   │   │   │   ├── 📄 simd-ineg.clif
│   │   │   │   │   ├── 📄 simd-insertlane.clif
│   │   │   │   │   ├── 📄 simd-ishl-const.clif
│   │   │   │   │   ├── 📄 simd-ishl.clif
│   │   │   │   │   ├── 📄 simd-isub-splat.clif
│   │   │   │   │   ├── 📄 simd-isub-swiden-high.clif
│   │   │   │   │   ├── 📄 simd-isub-swiden-low.clif
│   │   │   │   │   ├── 📄 simd-isub-uwiden-high.clif
│   │   │   │   │   ├── 📄 simd-isub-uwiden-low.clif
│   │   │   │   │   ├── 📄 simd-isub.clif
│   │   │   │   │   ├── 📄 simd-load-extend.clif
│   │   │   │   │   ├── 📄 simd-load-splat.clif
│   │   │   │   │   ├── 📄 simd-loads.clif
│   │   │   │   │   ├── 📄 simd-nearest.clif
│   │   │   │   │   ├── 📄 simd-popcnt.clif
│   │   │   │   │   ├── 📄 simd-saddsat.clif
│   │   │   │   │   ├── 📄 simd-scalartovector.clif
│   │   │   │   │   ├── 📄 simd-select.clif
│   │   │   │   │   ├── 📄 simd-shuffle.clif
│   │   │   │   │   ├── 📄 simd-smax.clif
│   │   │   │   │   ├── 📄 simd-smin.clif
│   │   │   │   │   ├── 📄 simd-smulhi.clif
│   │   │   │   │   ├── 📄 simd-snarrow.clif
│   │   │   │   │   ├── 📄 simd-splat.clif
│   │   │   │   │   ├── 📄 simd-sqmulroundsat.clif
│   │   │   │   │   ├── 📄 simd-sqrt.clif
│   │   │   │   │   ├── 📄 simd-sshr-const.clif
│   │   │   │   │   ├── 📄 simd-sshr.clif
│   │   │   │   │   ├── 📄 simd-ssubsat.clif
│   │   │   │   │   ├── 📄 simd-stores.clif
│   │   │   │   │   ├── 📄 simd-swiden_high.clif
│   │   │   │   │   ├── 📄 simd-swiden_low.clif
│   │   │   │   │   ├── 📄 simd-swizzle.clif
│   │   │   │   │   ├── 📄 simd-trunc.clif
│   │   │   │   │   ├── 📄 simd-uaddsat.clif
│   │   │   │   │   ├── 📄 simd-umax.clif
│   │   │   │   │   ├── 📄 simd-umin.clif
│   │   │   │   │   ├── 📄 simd-umulhi.clif
│   │   │   │   │   ├── 📄 simd-unarrow.clif
│   │   │   │   │   ├── 📄 simd-ushr-const.clif
│   │   │   │   │   ├── 📄 simd-ushr.clif
│   │   │   │   │   ├── 📄 simd-usubsat.clif
│   │   │   │   │   ├── 📄 simd-uunarrow.clif
│   │   │   │   │   ├── 📄 simd-uwiden_high.clif
│   │   │   │   │   ├── 📄 simd-uwiden_low.clif
│   │   │   │   │   ├── 📄 simd-valltrue.clif
│   │   │   │   │   ├── 📄 simd-vanytrue.clif
│   │   │   │   │   ├── 📄 simd-vconst-64bit.clif
│   │   │   │   │   ├── 📄 simd-vconst.clif
│   │   │   │   │   ├── 📄 simd-vhighbits.clif
│   │   │   │   │   ├── 📄 simd-vstate.clif
│   │   │   │   │   ├── 📄 smax-zbb.clif
│   │   │   │   │   ├── 📄 smax.clif
│   │   │   │   │   ├── 📄 smin-zbb.clif
│   │   │   │   │   ├── 📄 smin.clif
│   │   │   │   │   ├── 📄 sshr-const.clif
│   │   │   │   │   ├── 📄 sshr.clif
│   │   │   │   │   ├── 📄 stack-limit.clif
│   │   │   │   │   ├── 📄 stack.clif
│   │   │   │   │   ├── 📄 store-f16-f128.clif
│   │   │   │   │   ├── 📄 symbol-value-pic.clif
│   │   │   │   │   ├── 📄 symbol-value.clif
│   │   │   │   │   ├── 📄 tail-call-conv.clif
│   │   │   │   │   ├── 📄 tls-elf.clif
│   │   │   │   │   ├── 📄 traps.clif
│   │   │   │   │   ├── 📄 trunc.clif
│   │   │   │   │   ├── 📄 uadd_overflow_trap.clif
│   │   │   │   │   ├── 📄 umax-zbb.clif
│   │   │   │   │   ├── 📄 umax.clif
│   │   │   │   │   ├── 📄 umin-zbb.clif
│   │   │   │   │   ├── 📄 umin.clif
│   │   │   │   │   ├── 📄 user_stack_maps.clif
│   │   │   │   │   ├── 📄 ushr-const.clif
│   │   │   │   │   ├── 📄 ushr.clif
│   │   │   │   │   ├── 📄 zca.clif
│   │   │   │   │   ├── 📄 zcb.clif
│   │   │   │   │   ├── 📄 zcd.clif
│   │   │   │   │   ├── 📄 zfa.clif
│   │   │   │   │   └── 📄 zicond.clif
│   │   │   │   ├── 📁 s390x
│   │   │   │   │   ├── 📄 arithmetic.clif
│   │   │   │   │   ├── 📄 atomic_cas-little.clif
│   │   │   │   │   ├── 📄 atomic_cas.clif
│   │   │   │   │   ├── 📄 atomic_load-little.clif
│   │   │   │   │   ├── 📄 atomic_load.clif
│   │   │   │   │   ├── 📄 atomic_rmw-arch13.clif
│   │   │   │   │   ├── 📄 atomic_rmw-little.clif
│   │   │   │   │   ├── 📄 atomic_rmw.clif
│   │   │   │   │   ├── 📄 atomic_store-little.clif
│   │   │   │   │   ├── 📄 atomic_store.clif
│   │   │   │   │   ├── 📄 bitcast.clif
│   │   │   │   │   ├── 📄 bitops-arch13.clif
│   │   │   │   │   ├── 📄 bitops-optimized.clif
│   │   │   │   │   ├── 📄 bitops.clif
│   │   │   │   │   ├── 📄 bitwise-arch13.clif
│   │   │   │   │   ├── 📄 bitwise.clif
│   │   │   │   │   ├── 📄 bswap.clif
│   │   │   │   │   ├── 📄 call-tail.clif
│   │   │   │   │   ├── 📄 call.clif
│   │   │   │   │   ├── 📄 cold-blocks.clif
│   │   │   │   │   ├── 📄 concat-split.clif
│   │   │   │   │   ├── 📄 condbr.clif
│   │   │   │   │   ├── 📄 condops.clif
│   │   │   │   │   ├── 📄 constants.clif
│   │   │   │   │   ├── 📄 conversions.clif
│   │   │   │   │   ├── 📄 exceptions.clif
│   │   │   │   │   ├── 📄 fence.clif
│   │   │   │   │   ├── 📄 floating-point-arch13.clif
│   │   │   │   │   ├── 📄 floating-point.clif
│   │   │   │   │   ├── 📄 fp_sp_pc.clif
│   │   │   │   │   ├── 📄 fpmem-arch13.clif
│   │   │   │   │   ├── 📄 fpmem.clif
│   │   │   │   │   ├── 📄 i128.clif
│   │   │   │   │   ├── 📄 icmp-i128.clif
│   │   │   │   │   ├── 📄 icmp.clif
│   │   │   │   │   ├── 📄 inline-probestack.clif
│   │   │   │   │   ├── 📄 issue-5425.clif
│   │   │   │   │   ├── 📄 jumptable.clif
│   │   │   │   │   ├── 📄 leaf.clif
│   │   │   │   │   ├── 📄 leaf_function_detection.clif
│   │   │   │   │   ├── 📄 leaf_with_preserve_frame_pointers.clif
│   │   │   │   │   ├── 📄 load-little.clif
│   │   │   │   │   ├── 📄 load.clif
│   │   │   │   │   ├── 📄 minmax.clif
│   │   │   │   │   ├── 📄 multivalue-ret.clif
│   │   │   │   │   ├── 📄 nan-canonicalization.clif
│   │   │   │   │   ├── 📄 return-call-indirect.clif
│   │   │   │   │   ├── 📄 return-call.clif
│   │   │   │   │   ├── 📄 saturating-ops.clif
│   │   │   │   │   ├── 📄 select-float.clif
│   │   │   │   │   ├── 📄 shift-rotate.clif
│   │   │   │   │   ├── 📄 stack-limit.clif
│   │   │   │   │   ├── 📄 stack.clif
│   │   │   │   │   ├── 📄 store-little.clif
│   │   │   │   │   ├── 📄 store.clif
│   │   │   │   │   ├── 📄 symbols.clif
│   │   │   │   │   ├── 📄 tls_elf.clif
│   │   │   │   │   ├── 📄 traps.clif
│   │   │   │   │   ├── 📄 uadd_overflow_trap.clif
│   │   │   │   │   ├── 📄 user_stack_maps.clif
│   │   │   │   │   ├── 📄 vec-abi-128.clif
│   │   │   │   │   ├── 📄 vec-abi.clif
│   │   │   │   │   ├── 📄 vec-arithmetic.clif
│   │   │   │   │   ├── 📄 vec-bitcast.clif
│   │   │   │   │   ├── 📄 vec-bitops.clif
│   │   │   │   │   ├── 📄 vec-bitwise.clif
│   │   │   │   │   ├── 📄 vec-constants-le-lane.clif
│   │   │   │   │   ├── 📄 vec-constants.clif
│   │   │   │   │   ├── 📄 vec-conversions-le-lane.clif
│   │   │   │   │   ├── 📄 vec-conversions.clif
│   │   │   │   │   ├── 📄 vec-fcmp.clif
│   │   │   │   │   ├── 📄 vec-fp-arch13.clif
│   │   │   │   │   ├── 📄 vec-fp.clif
│   │   │   │   │   ├── 📄 vec-icmp.clif
│   │   │   │   │   ├── 📄 vec-lane-arch13.clif
│   │   │   │   │   ├── 📄 vec-lane-le-lane-arch13.clif
│   │   │   │   │   ├── 📄 vec-lane-le-lane.clif
│   │   │   │   │   ├── 📄 vec-lane.clif
│   │   │   │   │   ├── 📄 vec-logical.clif
│   │   │   │   │   ├── 📄 vec-permute-le-lane.clif
│   │   │   │   │   ├── 📄 vec-permute.clif
│   │   │   │   │   ├── 📄 vec-shift-rotate.clif
│   │   │   │   │   ├── 📄 vecmem-arch13.clif
│   │   │   │   │   ├── 📄 vecmem-le-lane-arch13.clif
│   │   │   │   │   ├── 📄 vecmem-le-lane.clif
│   │   │   │   │   └── 📄 vecmem.clif
│   │   │   │   └── 📁 x64
│   │   │   │       ├── 📄 amode-opt.clif
│   │   │   │       ├── 📄 atomic-128.clif
│   │   │   │       ├── 📄 atomic-cas-bug.clif
│   │   │   │       ├── 📄 atomic-rmw.clif
│   │   │   │       ├── 📄 atomic_cas_const_addr.clif
│   │   │   │       ├── 📄 band_not_bmi1.clif
│   │   │   │       ├── 📄 basic.clif
│   │   │   │       ├── 📄 big-endian.clif
│   │   │   │       ├── 📄 bitcast.clif
│   │   │   │       ├── 📄 bmask.clif
│   │   │   │       ├── 📄 bmi1.clif
│   │   │   │       ├── 📄 bmi2.clif
│   │   │   │       ├── 📄 branches.clif
│   │   │   │       ├── 📄 bswap.clif
│   │   │   │       ├── 📄 call-conv.clif
│   │   │   │       ├── 📄 call-with-retval-insts.clif
│   │   │   │       ├── 📄 ceil-avx.clif
│   │   │   │       ├── 📄 ceil-libcall.clif
│   │   │   │       ├── 📄 ceil.clif
│   │   │   │       ├── 📄 clz-lzcnt.clif
│   │   │   │       ├── 📄 clz.clif
│   │   │   │       ├── 📄 cmp-mem-bug.clif
│   │   │   │       ├── 📄 cold-blocks.clif
│   │   │   │       ├── 📄 conditional-values.clif
│   │   │   │       ├── 📄 crit-edge.clif
│   │   │   │       ├── 📄 ctz-bmi1.clif
│   │   │   │       ├── 📄 ctz.clif
│   │   │   │       ├── 📄 div-checks.clif
│   │   │   │       ├── 📄 exceptions-regalloc-verifier.clif
│   │   │   │       ├── 📄 exceptions.clif
│   │   │   │       ├── 📄 extractlane-avx.clif
│   │   │   │       ├── 📄 extractlane.clif
│   │   │   │       ├── 📄 f128const.clif
│   │   │   │       ├── 📄 f16const.clif
│   │   │   │       ├── 📄 f64-branches-avx.clif
│   │   │   │       ├── 📄 fabs.clif
│   │   │   │       ├── 📄 fastcall.clif
│   │   │   │       ├── 📄 fcmp-mem-bug.clif
│   │   │   │       ├── 📄 fcopysign.clif
│   │   │   │       ├── 📄 fcvt-avx.clif
│   │   │   │       ├── 📄 fcvt-simd.clif
│   │   │   │       ├── 📄 fcvt.clif
│   │   │   │       ├── 📄 float-avx.clif
│   │   │   │       ├── 📄 float-bitcast-avx.clif
│   │   │   │       ├── 📄 float-bitcast.clif
│   │   │   │       ├── 📄 floating-point.clif
│   │   │   │       ├── 📄 floor-libcall.clif
│   │   │   │       ├── 📄 floor.clif
│   │   │   │       ├── 📄 fma-call.clif
│   │   │   │       ├── 📄 fma-inst.clif
│   │   │   │       ├── 📄 fmsub-inst.clif
│   │   │   │       ├── 📄 fneg.clif
│   │   │   │       ├── 📄 fp_sp_pc.clif
│   │   │   │       ├── 📄 fpromote-demote-avx.clif
│   │   │   │       ├── 📄 fpromote-demote.clif
│   │   │   │       ├── 📄 fsqrt-avx.clif
│   │   │   │       ├── 📄 fsqrt.clif
│   │   │   │       ├── 📄 fuzzbug-60035.clif
│   │   │   │       ├── 📄 i128.clif
│   │   │   │       ├── 📄 iabs.clif
│   │   │   │       ├── 📄 iadd-pairwise-avx.clif
│   │   │   │       ├── 📄 iadd-pairwise.clif
│   │   │   │       ├── 📄 immediates.clif
│   │   │   │       ├── 📄 inline-probestack-large.clif
│   │   │   │       ├── 📄 inline-probestack.clif
│   │   │   │       ├── 📄 insertlane-avx.clif
│   │   │   │       ├── 📄 insertlane.clif
│   │   │   │       ├── 📄 ishl.clif
│   │   │   │       ├── 📄 issue-10906.clif
│   │   │   │       ├── 📄 issue-8659.clif
│   │   │   │       ├── 📄 lea.clif
│   │   │   │       ├── 📄 leaf.clif
│   │   │   │       ├── 📄 leaf_function_detection.clif
│   │   │   │       ├── 📄 leaf_with_preserve_frame_pointers.clif
│   │   │   │       ├── 📄 llvm-abi-no-split-stack-u128.clif
│   │   │   │       ├── 📄 llvm-abi-option-u128.clif
│   │   │   │       ├── 📄 load-extends.clif
│   │   │   │       ├── 📄 load-f16-f128.clif
│   │   │   │       ├── 📄 load-op-store.clif
│   │   │   │       ├── 📄 load-op.clif
│   │   │   │       ├── 📄 load-small-vector.clif
│   │   │   │       ├── 📄 move-elision.clif
│   │   │   │       ├── 📄 mul-with-optimizations.clif
│   │   │   │       ├── 📄 mul.clif
│   │   │   │       ├── 📄 nan-canonicalization-sse41.clif
│   │   │   │       ├── 📄 nan-canonicalization.clif
│   │   │   │       ├── 📄 narrowing.clif
│   │   │   │       ├── 📄 nearest-libcall.clif
│   │   │   │       ├── 📄 nearest.clif
│   │   │   │       ├── 📄 pinned-reg.clif
│   │   │   │       ├── 📄 popcnt-use-popcnt.clif
│   │   │   │       ├── 📄 popcnt.clif
│   │   │   │       ├── 📄 probestack.clif
│   │   │   │       ├── 📄 return-call-indirect.clif
│   │   │   │       ├── 📄 return-call.clif
│   │   │   │       ├── 📄 sdiv.clif
│   │   │   │       ├── 📄 select-i128.clif
│   │   │   │       ├── 📄 select-issue-3744.clif
│   │   │   │       ├── 📄 select.clif
│   │   │   │       ├── 📄 sextend.clif
│   │   │   │       ├── 📄 shift-to-extend.clif
│   │   │   │       ├── 📄 shld.clif
│   │   │   │       ├── 📄 shuffle-avx.clif
│   │   │   │       ├── 📄 shuffle-avx512.clif
│   │   │   │       ├── 📄 shuffle.clif
│   │   │   │       ├── 📄 simd-abs-avx512.clif
│   │   │   │       ├── 📄 simd-arith-avx.clif
│   │   │   │       ├── 📄 simd-bitselect.clif
│   │   │   │       ├── 📄 simd-bitwise-avx.clif
│   │   │   │       ├── 📄 simd-bitwise-compile.clif
│   │   │   │       ├── 📄 simd-cmp-avx.clif
│   │   │   │       ├── 📄 simd-comparison-legalize.clif
│   │   │   │       ├── 📄 simd-float-min-max.clif
│   │   │   │       ├── 📄 simd-i64x2-mul-avx512.clif
│   │   │   │       ├── 📄 simd-i64x2-shift-avx512.clif
│   │   │   │       ├── 📄 simd-issue-3951.clif
│   │   │   │       ├── 📄 simd-lane-access-compile.clif
│   │   │   │       ├── 📄 simd-load-avx.clif
│   │   │   │       ├── 📄 simd-load-extend.clif
│   │   │   │       ├── 📄 simd-logical-compile-avx.clif
│   │   │   │       ├── 📄 simd-logical-compile.clif
│   │   │   │       ├── 📄 simd-make-vectors-avx.clif
│   │   │   │       ├── 📄 simd-make-vectors.clif
│   │   │   │       ├── 📄 simd-pairwise-add.clif
│   │   │   │       ├── 📄 simd-splat-avx.clif
│   │   │   │       ├── 📄 simd-splat-avx2.clif
│   │   │   │       ├── 📄 simd-splat.clif
│   │   │   │       ├── 📄 simd-widen-mul.clif
│   │   │   │       ├── 📄 sink-load-store-of-bitwise-op-on-float.clif
│   │   │   │       ├── 📄 smulhi.clif
│   │   │   │       ├── 📄 sqmul_round_sat.clif
│   │   │   │       ├── 📄 srem.clif
│   │   │   │       ├── 📄 sshr.clif
│   │   │   │       ├── 📄 stack_switch.clif
│   │   │   │       ├── 📄 stackslot.clif
│   │   │   │       ├── 📄 stackslot_alignment.clif
│   │   │   │       ├── 📄 store-f16-f128.clif
│   │   │   │       ├── 📄 store-f16-sse41.clif
│   │   │   │       ├── 📄 store-imm.clif
│   │   │   │       ├── 📄 store-small-vector.clif
│   │   │   │       ├── 📄 struct-arg.clif
│   │   │   │       ├── 📄 struct-ret.clif
│   │   │   │       ├── 📄 symbols-pic.clif
│   │   │   │       ├── 📄 symbols.clif
│   │   │   │       ├── 📄 tail-call-conv.clif
│   │   │   │       ├── 📄 tail-stack-limit.clif
│   │   │   │       ├── 📄 tls_coff.clif
│   │   │   │       ├── 📄 tls_elf.clif
│   │   │   │       ├── 📄 tls_macho.clif
│   │   │   │       ├── 📄 too-large-stackframe.clif
│   │   │   │       ├── 📄 traps.clif
│   │   │   │       ├── 📄 trunc-libcall.clif
│   │   │   │       ├── 📄 trunc.clif
│   │   │   │       ├── 📄 uadd_overflow_trap.clif
│   │   │   │       ├── 📄 udiv.clif
│   │   │   │       ├── 📄 udivrem.clif
│   │   │   │       ├── 📄 uext-sext-handling.clif
│   │   │   │       ├── 📄 umax-bug.clif
│   │   │   │       ├── 📄 umulhi.clif
│   │   │   │       ├── 📄 urem.clif
│   │   │   │       ├── 📄 user_stack_maps.clif
│   │   │   │       ├── 📄 ushr.clif
│   │   │   │       ├── 📄 uunarrow.clif
│   │   │   │       ├── 📄 very-carefully-sink-loads-in-float-compares.clif
│   │   │   │       ├── 📄 vhigh_bits-avx.clif
│   │   │   │       ├── 📄 vhigh_bits.clif
│   │   │   │       ├── 📄 widen-high-bug.clif
│   │   │   │       ├── 📄 widening.clif
│   │   │   │       ├── 📄 winch.clif
│   │   │   │       └── 📄 xmm-select-load.clif
│   │   │   ├── 📁 legalizer
│   │   │   │   ├── 📄 branch-to-unconditional-trap.clif
│   │   │   │   ├── 📄 bxor_imm.clif
│   │   │   │   ├── 📄 iconst-i64.clif
│   │   │   │   └── 📄 isplit-bb.clif
│   │   │   ├── 📁 parser
│   │   │   │   ├── 📄 alias.clif
│   │   │   │   ├── 📄 branch.clif
│   │   │   │   ├── 📄 call.clif
│   │   │   │   ├── 📄 cold.clif
│   │   │   │   ├── 📄 flags.clif
│   │   │   │   ├── 📄 keywords.clif
│   │   │   │   ├── 📄 memory.clif
│   │   │   │   ├── 📄 rewrite.clif
│   │   │   │   ├── 📄 ternary.clif
│   │   │   │   ├── 📄 tiny.clif
│   │   │   │   └── 📄 user_stack_maps.clif
│   │   │   ├── 📁 pcc
│   │   │   │   ├── 📁 fail
│   │   │   │   │   ├── 📄 add.clif
│   │   │   │   │   ├── 📄 blockparams.clif
│   │   │   │   │   ├── 📄 extend.clif
│   │   │   │   │   ├── 📄 load.clif
│   │   │   │   │   ├── 📄 memtypes.clif
│   │   │   │   │   ├── 📄 shift.clif
│   │   │   │   │   ├── 📄 simple.clif
│   │   │   │   │   ├── 📄 struct.clif
│   │   │   │   │   └── 📄 vmctx.clif
│   │   │   │   └── 📁 succeed
│   │   │   │       ├── 📄 add.clif
│   │   │   │       ├── 📄 blockparams.clif
│   │   │   │       ├── 📄 const.clif
│   │   │   │       ├── 📄 dynamic.clif
│   │   │   │       ├── 📄 extend.clif
│   │   │   │       ├── 📄 fuzz-float-loads.clif
│   │   │   │       ├── 📄 gv_fact.clif
│   │   │   │       ├── 📄 imul-fuzzbug.clif
│   │   │   │       ├── 📄 load.clif
│   │   │   │       ├── 📄 memtypes.clif
│   │   │   │       ├── 📄 opt.clif
│   │   │   │       ├── 📄 shift.clif
│   │   │   │       ├── 📄 simple.clif
│   │   │   │       ├── 📄 struct.clif
│   │   │   │       ├── 📄 uextend-add-iconst.clif
│   │   │   │       └── 📄 vmctx.clif
│   │   │   ├── 📁 runtests
│   │   │   │   ├── 📄 alias.clif
│   │   │   │   ├── 📄 arithmetic-extends.clif
│   │   │   │   ├── 📄 arithmetic.clif
│   │   │   │   ├── 📄 atomic-128.clif
│   │   │   │   ├── 📄 atomic-cas-little.clif
│   │   │   │   ├── 📄 atomic-cas-subword-big.clif
│   │   │   │   ├── 📄 atomic-cas-subword-little.clif
│   │   │   │   ├── 📄 atomic-cas.clif
│   │   │   │   ├── 📄 atomic-load-store.clif
│   │   │   │   ├── 📄 atomic-rmw-little.clif
│   │   │   │   ├── 📄 atomic-rmw-subword-big.clif
│   │   │   │   ├── 📄 atomic-rmw-subword-little.clif
│   │   │   │   ├── 📄 bb-padding.clif
│   │   │   │   ├── 📄 bitcast-same-type.clif
│   │   │   │   ├── 📄 bitcast.clif
│   │   │   │   ├── 📄 bitops.clif
│   │   │   │   ├── 📄 bitrev.clif
│   │   │   │   ├── 📄 bitselect-float.clif
│   │   │   │   ├── 📄 bitselect.clif
│   │   │   │   ├── 📄 bmask.clif
│   │   │   │   ├── 📄 bnot.clif
│   │   │   │   ├── 📄 br.clif
│   │   │   │   ├── 📄 br_table.clif
│   │   │   │   ├── 📄 brif.clif
│   │   │   │   ├── 📄 bswap.clif
│   │   │   │   ├── 📄 call.clif
│   │   │   │   ├── 📄 call_indirect.clif
│   │   │   │   ├── 📄 call_libcall.clif
│   │   │   │   ├── 📄 ceil.clif
│   │   │   │   ├── 📄 cls.clif
│   │   │   │   ├── 📄 clz.clif
│   │   │   │   ├── 📄 const.clif
│   │   │   │   ├── 📄 conversion-i8-i16.clif
│   │   │   │   ├── 📄 conversion.clif
│   │   │   │   ├── 📄 ctz.clif
│   │   │   │   ├── 📄 div-checks.clif
│   │   │   │   ├── 📄 dynamic-simd-arithmetic.clif
│   │   │   │   ├── 📄 dynamic-simd-narrow-widen.clif
│   │   │   │   ├── 📄 extend.clif
│   │   │   │   ├── 📄 f128-bitcast.clif
│   │   │   │   ├── 📄 f128-select.clif
│   │   │   │   ├── 📄 f128const.clif
│   │   │   │   ├── 📄 f16-arithmetic.clif
│   │   │   │   ├── 📄 f16-bitcast.clif
│   │   │   │   ├── 📄 f16-fma.clif
│   │   │   │   ├── 📄 f16-memory.clif
│   │   │   │   ├── 📄 f16-select.clif
│   │   │   │   ├── 📄 f16const.clif
│   │   │   │   ├── 📄 f32const.clif
│   │   │   │   ├── 📄 f64const.clif
│   │   │   │   ├── 📄 fabs.clif
│   │   │   │   ├── 📄 fadd.clif
│   │   │   │   ├── 📄 fcmp-eq.clif
│   │   │   │   ├── 📄 fcmp-ge.clif
│   │   │   │   ├── 📄 fcmp-gt.clif
│   │   │   │   ├── 📄 fcmp-le.clif
│   │   │   │   ├── 📄 fcmp-lt.clif
│   │   │   │   ├── 📄 fcmp-ne.clif
│   │   │   │   ├── 📄 fcmp-one.clif
│   │   │   │   ├── 📄 fcmp-ord.clif
│   │   │   │   ├── 📄 fcmp-ueq.clif
│   │   │   │   ├── 📄 fcmp-uge.clif
│   │   │   │   ├── 📄 fcmp-ugt.clif
│   │   │   │   ├── 📄 fcmp-ule.clif
│   │   │   │   ├── 📄 fcmp-ult.clif
│   │   │   │   ├── 📄 fcmp-uno.clif
│   │   │   │   ├── 📄 fcopysign.clif
│   │   │   │   ├── 📄 fcvt-from-int.clif
│   │   │   │   ├── 📄 fcvt-sat-small.clif
│   │   │   │   ├── 📄 fdemote.clif
│   │   │   │   ├── 📄 fdemote_32.clif
│   │   │   │   ├── 📄 fdemote_64.clif
│   │   │   │   ├── 📄 fdiv.clif
│   │   │   │   ├── 📄 fence.clif
│   │   │   │   ├── 📄 fibonacci.clif
│   │   │   │   ├── 📄 float-bitops.clif
│   │   │   │   ├── 📄 floor.clif
│   │   │   │   ├── 📄 fma.clif
│   │   │   │   ├── 📄 fmax-pseudo.clif
│   │   │   │   ├── 📄 fmax.clif
│   │   │   │   ├── 📄 fmin-pseudo.clif
│   │   │   │   ├── 📄 fmin.clif
│   │   │   │   ├── 📄 fmul.clif
│   │   │   │   ├── 📄 fneg.clif
│   │   │   │   ├── 📄 fold-bitops.clif
│   │   │   │   ├── 📄 fpromote.clif
│   │   │   │   ├── 📄 fpromote_32.clif
│   │   │   │   ├── 📄 fpromote_64.clif
│   │   │   │   ├── 📄 fsub.clif
│   │   │   │   ├── 📄 global_value.clif
│   │   │   │   ├── 📄 i128-arithmetic-extends.clif
│   │   │   │   ├── 📄 i128-arithmetic.clif
│   │   │   │   ├── 📄 i128-bandnot.clif
│   │   │   │   ├── 📄 i128-bitcast.clif
│   │   │   │   ├── 📄 i128-bitops-count.clif
│   │   │   │   ├── 📄 i128-bitops.clif
│   │   │   │   ├── 📄 i128-bitrev.clif
│   │   │   │   ├── 📄 i128-bitselect.clif
│   │   │   │   ├── 📄 i128-bmask.clif
│   │   │   │   ├── 📄 i128-bnot.clif
│   │   │   │   ├── 📄 i128-bornot.clif
│   │   │   │   ├── 📄 i128-br.clif
│   │   │   │   ├── 📄 i128-bswap.clif
│   │   │   │   ├── 📄 i128-bxornot.clif
│   │   │   │   ├── 📄 i128-call.clif
│   │   │   │   ├── 📄 i128-cls.clif
│   │   │   │   ├── 📄 i128-concat-split.clif
│   │   │   │   ├── 📄 i128-conversion.clif
│   │   │   │   ├── 📄 i128-extend.clif
│   │   │   │   ├── 📄 i128-iabs.clif
│   │   │   │   ├── 📄 i128-icmp.clif
│   │   │   │   ├── 📄 i128-ineg.clif
│   │   │   │   ├── 📄 i128-ireduce.clif
│   │   │   │   ├── 📄 i128-load-store.clif
│   │   │   │   ├── 📄 i128-min-max.clif
│   │   │   │   ├── 📄 i128-rotate.clif
│   │   │   │   ├── 📄 i128-select-float.clif
│   │   │   │   ├── 📄 i128-select.clif
│   │   │   │   ├── 📄 i128-shifts.clif
│   │   │   │   ├── 📄 i128-srem.clif
│   │   │   │   ├── 📄 i128-urem.clif
│   │   │   │   ├── 📄 iabs.clif
│   │   │   │   ├── 📄 iaddcarry.clif
│   │   │   │   ├── 📄 icmp-eq-imm.clif
│   │   │   │   ├── 📄 icmp-eq.clif
│   │   │   │   ├── 📄 icmp-ne.clif
│   │   │   │   ├── 📄 icmp-of-icmp.clif
│   │   │   │   ├── 📄 icmp-sge.clif
│   │   │   │   ├── 📄 icmp-sgt.clif
│   │   │   │   ├── 📄 icmp-sle.clif
│   │   │   │   ├── 📄 icmp-slt.clif
│   │   │   │   ├── 📄 icmp-uge.clif
│   │   │   │   ├── 📄 icmp-ugt.clif
│   │   │   │   ├── 📄 icmp-ule.clif
│   │   │   │   ├── 📄 icmp-ult.clif
│   │   │   │   ├── 📄 icmp.clif
│   │   │   │   ├── 📄 ineg.clif
│   │   │   │   ├── 📄 inline-probestack.clif
│   │   │   │   ├── 📄 integer-minmax.clif
│   │   │   │   ├── 📄 ireduce.clif
│   │   │   │   ├── 📄 issue-10906.clif
│   │   │   │   ├── 📄 issue-5498.clif
│   │   │   │   ├── 📄 issue-5690.clif
│   │   │   │   ├── 📄 issue-5992.clif
│   │   │   │   ├── 📄 issue-5993.clif
│   │   │   │   ├── 📄 issue-6581.clif
│   │   │   │   ├── 📄 issue-6582.clif
│   │   │   │   ├── 📄 issue-6635.clif
│   │   │   │   ├── 📄 issue-6640.clif
│   │   │   │   ├── 📄 issue-6859.clif
│   │   │   │   ├── 📄 issue-6916.clif
│   │   │   │   ├── 📄 issue-6954.clif
│   │   │   │   ├── 📄 issue5497.clif
│   │   │   │   ├── 📄 issue5523.clif
│   │   │   │   ├── 📄 issue5524.clif
│   │   │   │   ├── 📄 issue5525.clif
│   │   │   │   ├── 📄 issue5526.clif
│   │   │   │   ├── 📄 issue5528.clif
│   │   │   │   ├── 📄 issue5569.clif
│   │   │   │   ├── 📄 issue5714.clif
│   │   │   │   ├── 📄 issue5839.clif
│   │   │   │   ├── 📄 issue5884.clif
│   │   │   │   ├── 📄 issue5901.clif
│   │   │   │   ├── 📄 issue5952.clif
│   │   │   │   ├── 📄 isubborrow.clif
│   │   │   │   ├── 📄 long-jump.clif
│   │   │   │   ├── 📄 nearest.clif
│   │   │   │   ├── 📄 or-and-y-with-not-y.clif
│   │   │   │   ├── 📄 pinned-reg.clif
│   │   │   │   ├── 📄 popcnt-interpret.clif
│   │   │   │   ├── 📄 popcnt.clif
│   │   │   │   ├── 📄 return-call-indirect.clif
│   │   │   │   ├── 📄 return-call-loop.clif
│   │   │   │   ├── 📄 return-call.clif
│   │   │   │   ├── 📄 riscv64-vstate.clif
│   │   │   │   ├── 📄 riscv64_issue_4996.clif
│   │   │   │   ├── 📄 rotl.clif
│   │   │   │   ├── 📄 rotr.clif
│   │   │   │   ├── 📄 sadd_overflow.clif
│   │   │   │   ├── 📄 scalar-to-vector-upper-bits-zero.clif
│   │   │   │   ├── 📄 sdiv.clif
│   │   │   │   ├── 📄 select-float.clif
│   │   │   │   ├── 📄 select.clif
│   │   │   │   ├── 📄 selectif-spectre-guard.clif
│   │   │   │   ├── 📄 shift-right-left.clif
│   │   │   │   ├── 📄 shifts.clif
│   │   │   │   ├── 📄 simd-arithmetic.clif
│   │   │   │   ├── 📄 simd-avg-round-small.clif
│   │   │   │   ├── 📄 simd-avg-round.clif
│   │   │   │   ├── 📄 simd-band-64bit.clif
│   │   │   │   ├── 📄 simd-band-splat.clif
│   │   │   │   ├── 📄 simd-band.clif
│   │   │   │   ├── 📄 simd-bandnot-64bit.clif
│   │   │   │   ├── 📄 simd-bitcast-128.clif
│   │   │   │   ├── 📄 simd-bitcast-64bit.clif
│   │   │   │   ├── 📄 simd-bitcast-aarch64.clif
│   │   │   │   ├── 📄 simd-bitcast.clif
│   │   │   │   ├── 📄 simd-bitselect-to-vselect.clif
│   │   │   │   ├── 📄 simd-bitselect.clif
│   │   │   │   ├── 📄 simd-bnot-64bit.clif
│   │   │   │   ├── 📄 simd-bnot.clif
│   │   │   │   ├── 📄 simd-bor-64bit.clif
│   │   │   │   ├── 📄 simd-bor-splat.clif
│   │   │   │   ├── 📄 simd-bor.clif
│   │   │   │   ├── 📄 simd-bornot-64bit.clif
│   │   │   │   ├── 📄 simd-bxor-64bit.clif
│   │   │   │   ├── 📄 simd-bxor-splat.clif
│   │   │   │   ├── 📄 simd-bxor.clif
│   │   │   │   ├── 📄 simd-ceil.clif
│   │   │   │   ├── 📄 simd-extractlane.clif
│   │   │   │   ├── 📄 simd-extractlane_32.clif
│   │   │   │   ├── 📄 simd-extractlane_64.clif
│   │   │   │   ├── 📄 simd-fabs.clif
│   │   │   │   ├── 📄 simd-fadd-splat.clif
│   │   │   │   ├── 📄 simd-fadd.clif
│   │   │   │   ├── 📄 simd-fcmp-eq.clif
│   │   │   │   ├── 📄 simd-fcmp-ge.clif
│   │   │   │   ├── 📄 simd-fcmp-gt.clif
│   │   │   │   ├── 📄 simd-fcmp-le.clif
│   │   │   │   ├── 📄 simd-fcmp-lt.clif
│   │   │   │   ├── 📄 simd-fcmp-ne.clif
│   │   │   │   ├── 📄 simd-fcmp-one.clif
│   │   │   │   ├── 📄 simd-fcmp-ord.clif
│   │   │   │   ├── 📄 simd-fcmp-ueq.clif
│   │   │   │   ├── 📄 simd-fcmp-uge.clif
│   │   │   │   ├── 📄 simd-fcmp-ugt.clif
│   │   │   │   ├── 📄 simd-fcmp-ule.clif
│   │   │   │   ├── 📄 simd-fcmp-ult.clif
│   │   │   │   ├── 📄 simd-fcmp-uno.clif
│   │   │   │   ├── 📄 simd-fcopysign-64bit.clif
│   │   │   │   ├── 📄 simd-fcopysign.clif
│   │   │   │   ├── 📄 simd-fcvt-from-sint.clif
│   │   │   │   ├── 📄 simd-fcvt-from-uint.clif
│   │   │   │   ├── 📄 simd-fcvt-to-sint-sat.clif
│   │   │   │   ├── 📄 simd-fcvt-to-uint-sat.clif
│   │   │   │   ├── 📄 simd-fdiv.clif
│   │   │   │   ├── 📄 simd-floor.clif
│   │   │   │   ├── 📄 simd-fma-64bit.clif
│   │   │   │   ├── 📄 simd-fma-neg.clif
│   │   │   │   ├── 📄 simd-fma.clif
│   │   │   │   ├── 📄 simd-fmax-fmin-nondeterministic-aarch64.clif
│   │   │   │   ├── 📄 simd-fmax-fmin-nondeterministic-riscv64.clif
│   │   │   │   ├── 📄 simd-fmax-fmin-nondeterministic-x86_64.clif
│   │   │   │   ├── 📄 simd-fmax-fmin.clif
│   │   │   │   ├── 📄 simd-fmin-max-pseudo.clif
│   │   │   │   ├── 📄 simd-fmul.clif
│   │   │   │   ├── 📄 simd-fneg.clif
│   │   │   │   ├── 📄 simd-fsub.clif
│   │   │   │   ├── 📄 simd-fvdemote.clif
│   │   │   │   ├── 📄 simd-fvpromote-low.clif
│   │   │   │   ├── 📄 simd-iabs.clif
│   │   │   │   ├── 📄 simd-iadd-small.clif
│   │   │   │   ├── 📄 simd-iadd-splat.clif
│   │   │   │   ├── 📄 simd-iadd-swiden-high.clif
│   │   │   │   ├── 📄 simd-iadd-swiden-low.clif
│   │   │   │   ├── 📄 simd-iadd-swiden-mix.clif
│   │   │   │   ├── 📄 simd-iadd-uwiden-high.clif
│   │   │   │   ├── 📄 simd-iadd-uwiden-low.clif
│   │   │   │   ├── 📄 simd-iadd-uwiden-mix.clif
│   │   │   │   ├── 📄 simd-iadd.clif
│   │   │   │   ├── 📄 simd-iaddpairwise-64bit.clif
│   │   │   │   ├── 📄 simd-iaddpairwise.clif
│   │   │   │   ├── 📄 simd-icmp-eq.clif
│   │   │   │   ├── 📄 simd-icmp-ne.clif
│   │   │   │   ├── 📄 simd-icmp-sge.clif
│   │   │   │   ├── 📄 simd-icmp-sgt.clif
│   │   │   │   ├── 📄 simd-icmp-sle.clif
│   │   │   │   ├── 📄 simd-icmp-slt.clif
│   │   │   │   ├── 📄 simd-icmp-uge.clif
│   │   │   │   ├── 📄 simd-icmp-ugt.clif
│   │   │   │   ├── 📄 simd-icmp-ule.clif
│   │   │   │   ├── 📄 simd-icmp-ult.clif
│   │   │   │   ├── 📄 simd-ifma.clif
│   │   │   │   ├── 📄 simd-imul-i8x16.clif
│   │   │   │   ├── 📄 simd-imul.clif
│   │   │   │   ├── 📄 simd-ineg.clif
│   │   │   │   ├── 📄 simd-insert-extract-lane.clif
│   │   │   │   ├── 📄 simd-insertlane.clif
│   │   │   │   ├── 📄 simd-insertlane_32.clif
│   │   │   │   ├── 📄 simd-insertlane_64.clif
│   │   │   │   ├── 📄 simd-ishl.clif
│   │   │   │   ├── 📄 simd-isub-splat.clif
│   │   │   │   ├── 📄 simd-isub-swiden-high.clif
│   │   │   │   ├── 📄 simd-isub-swiden-low.clif
│   │   │   │   ├── 📄 simd-isub-uwiden-high.clif
│   │   │   │   ├── 📄 simd-isub-uwiden-low.clif
│   │   │   │   ├── 📄 simd-isub.clif
│   │   │   │   ├── 📄 simd-lane-access.clif
│   │   │   │   ├── 📄 simd-logical.clif
│   │   │   │   ├── 📄 simd-make-vectors.clif
│   │   │   │   ├── 📄 simd-min-max.clif
│   │   │   │   ├── 📄 simd-nearest.clif
│   │   │   │   ├── 📄 simd-popcnt-large.clif
│   │   │   │   ├── 📄 simd-popcnt.clif
│   │   │   │   ├── 📄 simd-saddsat-aarch64.clif
│   │   │   │   ├── 📄 simd-saddsat.clif
│   │   │   │   ├── 📄 simd-scalartovector-aarch64.clif
│   │   │   │   ├── 📄 simd-scalartovector.clif
│   │   │   │   ├── 📄 simd-select.clif
│   │   │   │   ├── 📄 simd-shuffle.clif
│   │   │   │   ├── 📄 simd-small.clif
│   │   │   │   ├── 📄 simd-smulhi.clif
│   │   │   │   ├── 📄 simd-snarrow-aarch64.clif
│   │   │   │   ├── 📄 simd-snarrow.clif
│   │   │   │   ├── 📄 simd-splat.clif
│   │   │   │   ├── 📄 simd-sqmulroundsat-aarch64.clif
│   │   │   │   ├── 📄 simd-sqmulroundsat.clif
│   │   │   │   ├── 📄 simd-sqrt.clif
│   │   │   │   ├── 📄 simd-sshr.clif
│   │   │   │   ├── 📄 simd-ssubsat-aarch64.clif
│   │   │   │   ├── 📄 simd-ssubsat.clif
│   │   │   │   ├── 📄 simd-swidenhigh.clif
│   │   │   │   ├── 📄 simd-swidenlow.clif
│   │   │   │   ├── 📄 simd-swizzle.clif
│   │   │   │   ├── 📄 simd-trunc.clif
│   │   │   │   ├── 📄 simd-uaddsat-aarch64.clif
│   │   │   │   ├── 📄 simd-uaddsat.clif
│   │   │   │   ├── 📄 simd-umulhi.clif
│   │   │   │   ├── 📄 simd-unarrow-aarch64.clif
│   │   │   │   ├── 📄 simd-unarrow.clif
│   │   │   │   ├── 📄 simd-ushr.clif
│   │   │   │   ├── 📄 simd-usubsat-aarch64.clif
│   │   │   │   ├── 📄 simd-usubsat.clif
│   │   │   │   ├── 📄 simd-uunarrow.clif
│   │   │   │   ├── 📄 simd-uwidenhigh.clif
│   │   │   │   ├── 📄 simd-uwidenlow.clif
│   │   │   │   ├── 📄 simd-valltrue-64bit.clif
│   │   │   │   ├── 📄 simd-valltrue.clif
│   │   │   │   ├── 📄 simd-vanytrue-64bit.clif
│   │   │   │   ├── 📄 simd-vanytrue.clif
│   │   │   │   ├── 📄 simd-vconst-64bit.clif
│   │   │   │   ├── 📄 simd-vconst-large.clif
│   │   │   │   ├── 📄 simd-vconst.clif
│   │   │   │   ├── 📄 simd-vhighbits-float.clif
│   │   │   │   ├── 📄 simd-vhighbits.clif
│   │   │   │   ├── 📄 simd-wideningpairwisedotproducts.clif
│   │   │   │   ├── 📄 simd_compare_zero.clif
│   │   │   │   ├── 📄 smul_overflow.clif
│   │   │   │   ├── 📄 smulhi-aarch64.clif
│   │   │   │   ├── 📄 smulhi.clif
│   │   │   │   ├── 📄 spill-reload.clif
│   │   │   │   ├── 📄 sqrt.clif
│   │   │   │   ├── 📄 srem.clif
│   │   │   │   ├── 📄 ssub_overflow.clif
│   │   │   │   ├── 📄 stack-addr-32.clif
│   │   │   │   ├── 📄 stack-addr-64.clif
│   │   │   │   ├── 📄 stack.clif
│   │   │   │   ├── 📄 tail-call-conv.clif
│   │   │   │   ├── 📄 tail-stack-limit.clif
│   │   │   │   ├── 📄 throw.clif
│   │   │   │   ├── 📄 trapnz.clif
│   │   │   │   ├── 📄 trapz.clif
│   │   │   │   ├── 📄 trunc.clif
│   │   │   │   ├── 📄 try_call.clif
│   │   │   │   ├── 📄 uadd_overflow.clif
│   │   │   │   ├── 📄 uadd_overflow_narrow.clif
│   │   │   │   ├── 📄 uadd_overflow_trap.clif
│   │   │   │   ├── 📄 udiv.clif
│   │   │   │   ├── 📄 umul_overflow.clif
│   │   │   │   ├── 📄 umulhi.clif
│   │   │   │   ├── 📄 urem.clif
│   │   │   │   ├── 📄 usub_overflow.clif
│   │   │   │   ├── 📄 winch.clif
│   │   │   │   ├── 📁 x64
│   │   │   │   │   └── 📄 fmsub.clif
│   │   │   │   ├── 📄 x64-bmi1.clif
│   │   │   │   ├── 📄 x64-bmi2.clif
│   │   │   │   └── 📄 x64-xmm-mem-align-bug.clif
│   │   │   ├── 📁 verifier
│   │   │   │   ├── 📄 argument-extension.clif
│   │   │   │   ├── 📄 bad_layout.clif
│   │   │   │   ├── 📄 bitcast.clif
│   │   │   │   ├── 📄 cold_entry.clif
│   │   │   │   ├── 📄 constant.clif
│   │   │   │   ├── 📄 defs_dominates_uses.clif
│   │   │   │   ├── 📄 exceptions.clif
│   │   │   │   ├── 📄 globals.clif
│   │   │   │   ├── 📄 jump_table.clif
│   │   │   │   ├── 📄 memory.clif
│   │   │   │   ├── 📄 pointer_width_32.clif
│   │   │   │   ├── 📄 pointer_width_64.clif
│   │   │   │   ├── 📄 read-only-store.clif
│   │   │   │   ├── 📄 return-call.clif
│   │   │   │   ├── 📄 scalar-to-vector.clif
│   │   │   │   ├── 📄 simd-lane-index.clif
│   │   │   │   ├── 📄 type_check.clif
│   │   │   │   ├── 📄 undeclared_vmctx.clif
│   │   │   │   └── 📄 unreachable_code.clif
│   │   │   └── 📁 wasm
│   │   │       ├── 📄 control.clif
│   │   │       ├── 📄 conversions.clif
│   │   │       ├── 📄 f32-arith.clif
│   │   │       ├── 📄 f32-compares.clif
│   │   │       ├── 📄 f64-arith.clif
│   │   │       ├── 📄 f64-compares.clif
│   │   │       ├── 📄 i32-arith.clif
│   │   │       ├── 📄 i32-compares.clif
│   │   │       ├── 📄 i64-arith.clif
│   │   │       ├── 📄 i64-arith32.clif
│   │   │       ├── 📄 i64-compares.clif
│   │   │       ├── 📄 multi-val-f32.clif
│   │   │       ├── 📄 multi-val-f64.clif
│   │   │       ├── 📄 multi-val-i32.clif
│   │   │       ├── 📄 multi-val-i64.clif
│   │   │       ├── 📄 multi-val-mixed.clif
│   │   │       ├── 📄 multi-val-take-many-and-return-many.clif
│   │   │       ├── 📄 multi-val-tons-of-results.clif
│   │   │       └── 📄 select.clif
│   │   └── 📁 src
│   │       ├── 📄 concurrent.rs
│   │       ├── 📄 function_runner.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 match_directive.rs
│   │       ├── 📄 runner.rs
│   │       ├── 📄 runone.rs
│   │       ├── 📄 subtest.rs
│   │       ├── 📄 test_alias_analysis.rs
│   │       ├── 📄 test_cat.rs
│   │       ├── 📄 test_compile.rs
│   │       ├── 📄 test_domtree.rs
│   │       ├── 📄 test_inline.rs
│   │       ├── 📄 test_interpret.rs
│   │       ├── 📄 test_legalizer.rs
│   │       ├── 📄 test_optimize.rs
│   │       ├── 📄 test_print_cfg.rs
│   │       ├── 📄 test_run.rs
│   │       ├── 📄 test_safepoint.rs
│   │       ├── 📄 test_unwind.rs
│   │       └── 📄 test_verifier.rs
│   ├── 📁 frontend
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📁 frontend
│   │       │   └── 📄 safepoints.rs
│   │       ├── 📄 frontend.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 ssa.rs
│   │       ├── 📄 switch.rs
│   │       └── 📄 variable.rs
│   ├── 📁 fuzzgen
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 config.rs
│   │       ├── 📄 cranelift_arbitrary.rs
│   │       ├── 📄 function_generator.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📁 passes
│   │       │   ├── 📄 fcvt.rs
│   │       │   ├── 📄 int_divz.rs
│   │       │   └── 📄 mod.rs
│   │       ├── 📄 print.rs
│   │       └── 📄 target_isa_extras.rs
│   ├── 📁 interpreter
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 address.rs
│   │       ├── 📄 environment.rs
│   │       ├── 📄 frame.rs
│   │       ├── 📄 instruction.rs
│   │       ├── 📄 interpreter.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 state.rs
│   │       ├── 📄 step.rs
│   │       └── 📄 value.rs
│   ├── 📁 isle
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📄 TODO
│   │   ├── 📁 docs
│   │   │   └── 📄 language-reference.md
│   │   ├── 📁 fuzz
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 README.md
│   │   │   └── 📁 fuzz_targets
│   │   │       └── 📄 compile.rs
│   │   ├── 📁 isle
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 README.md
│   │   │   ├── 📄 build.rs
│   │   │   ├── 📁 isle_examples
│   │   │   │   ├── 📁 fail
│   │   │   │   │   ├── 📄 bad_converters.isle
│   │   │   │   │   ├── 📄 bound_var_type_mismatch.isle
│   │   │   │   │   ├── 📄 converter_extractor_constructor.isle
│   │   │   │   │   ├── 📄 error1.isle
│   │   │   │   │   ├── 📄 extra_parens.isle
│   │   │   │   │   ├── 📄 impure_expression.isle
│   │   │   │   │   ├── 📄 impure_rhs.isle
│   │   │   │   │   ├── 📄 multi_internal_etor.isle
│   │   │   │   │   └── 📄 multi_prio.isle
│   │   │   │   ├── 📁 link
│   │   │   │   │   ├── 📄 borrows.isle
│   │   │   │   │   ├── 📄 borrows_main.rs
│   │   │   │   │   ├── 📄 iflets.isle
│   │   │   │   │   ├── 📄 iflets_main.rs
│   │   │   │   │   ├── 📄 multi_constructor.isle
│   │   │   │   │   ├── 📄 multi_constructor_main.rs
│   │   │   │   │   ├── 📄 multi_extractor.isle
│   │   │   │   │   ├── 📄 multi_extractor_main.rs
│   │   │   │   │   ├── 📄 test.isle
│   │   │   │   │   └── 📄 test_main.rs
│   │   │   │   ├── 📁 pass
│   │   │   │   │   ├── 📄 bound_var.isle
│   │   │   │   │   ├── 📄 construct_and_extract.isle
│   │   │   │   │   ├── 📄 conversions.isle
│   │   │   │   │   ├── 📄 conversions_extern.isle
│   │   │   │   │   ├── 📄 let.isle
│   │   │   │   │   ├── 📄 nodebug.isle
│   │   │   │   │   ├── 📄 prio_trie_bug.isle
│   │   │   │   │   ├── 📄 test2.isle
│   │   │   │   │   ├── 📄 test3.isle
│   │   │   │   │   ├── 📄 test4.isle
│   │   │   │   │   ├── 📄 tutorial.isle
│   │   │   │   │   └── 📄 veri_spec.isle
│   │   │   │   └── 📁 run
│   │   │   │       ├── 📄 iconst.isle
│   │   │   │       ├── 📄 iconst_main.rs
│   │   │   │       ├── 📄 let_shadowing.isle
│   │   │   │       └── 📄 let_shadowing_main.rs
│   │   │   ├── 📁 src
│   │   │   │   ├── 📄 ast.rs
│   │   │   │   ├── 📄 codegen.rs
│   │   │   │   ├── 📄 compile.rs
│   │   │   │   ├── 📄 disjointsets.rs
│   │   │   │   ├── 📄 error.rs
│   │   │   │   ├── 📄 files.rs
│   │   │   │   ├── 📄 lexer.rs
│   │   │   │   ├── 📄 lib.rs
│   │   │   │   ├── 📄 log.rs
│   │   │   │   ├── 📄 overlap.rs
│   │   │   │   ├── 📄 parser.rs
│   │   │   │   ├── 📄 printer.rs
│   │   │   │   ├── 📄 sema.rs
│   │   │   │   ├── 📄 serialize.rs
│   │   │   │   ├── 📄 stablemapset.rs
│   │   │   │   └── 📄 trie_again.rs
│   │   │   └── 📁 tests
│   │   │       └── 📄 run_tests.rs
│   │   ├── 📁 islec
│   │   │   ├── 📄 Cargo.toml
│   │   │   └── 📁 src
│   │   │       └── 📄 main.rs
│   │   └── 📁 veri
│   │       ├── 📄 README.md
│   │       ├── 📁 veri_engine
│   │       │   ├── 📄 Cargo.toml
│   │       │   ├── 📁 examples
│   │       │   │   ├── 📁 broken
│   │       │   │   │   ├── 📄 broken_32_general_rotl_to_rotr.isle
│   │       │   │   │   ├── 📄 broken_fits_in_16_rotl_to_rotr.isle
│   │       │   │   │   ├── 📄 broken_fits_in_16_with_imm_rotl_to_rotr.isle
│   │       │   │   │   ├── 📄 broken_fits_in_32_band.isle
│   │       │   │   │   ├── 📄 broken_fits_in_32_bor.isle
│   │       │   │   │   ├── 📄 broken_imul.isle
│   │       │   │   │   ├── 📄 broken_mask_small_rotr.isle
│   │       │   │   │   ├── 📄 broken_rule_or_small_rotr.isle
│   │       │   │   │   ├── 📄 broken_uextend.isle
│   │       │   │   │   ├── 📁 cls
│   │       │   │   │   │   ├── 📄 broken_cls.isle
│   │       │   │   │   │   ├── 📄 broken_cls16.isle
│   │       │   │   │   │   └── 📄 broken_cls8.isle
│   │       │   │   │   ├── 📁 clz
│   │       │   │   │   │   ├── 📄 broken_clz.isle
│   │       │   │   │   │   ├── 📄 broken_clz16.isle
│   │       │   │   │   │   └── 📄 broken_clz8.isle
│   │       │   │   │   ├── 📁 ctz
│   │       │   │   │   │   ├── 📄 broken_ctz.isle
│   │       │   │   │   │   ├── 📄 broken_ctz16.isle
│   │       │   │   │   │   └── 📄 broken_ctz8.isle
│   │       │   │   │   ├── 📁 iadd
│   │       │   │   │   │   ├── 📄 broken_add_extend.isle
│   │       │   │   │   │   ├── 📄 broken_base_case.isle
│   │       │   │   │   │   ├── 📄 broken_imm12.isle
│   │       │   │   │   │   ├── 📄 broken_imm12_2.isle
│   │       │   │   │   │   ├── 📄 broken_imm12neg.isle
│   │       │   │   │   │   ├── 📄 broken_imm12neg2.isle
│   │       │   │   │   │   ├── 📄 broken_madd.isle
│   │       │   │   │   │   ├── 📄 broken_madd2.isle
│   │       │   │   │   │   ├── 📄 broken_msub.isle
│   │       │   │   │   │   ├── 📄 broken_shift.isle
│   │       │   │   │   │   └── 📄 broken_shift2.isle
│   │       │   │   │   ├── 📁 imul
│   │       │   │   │   │   └── 📄 broken_imul.isle
│   │       │   │   │   ├── 📁 isub
│   │       │   │   │   │   ├── 📄 broken_base_case.isle
│   │       │   │   │   │   ├── 📄 broken_imm12.isle
│   │       │   │   │   │   ├── 📄 broken_imm12neg.isle
│   │       │   │   │   │   ├── 📄 broken_imm12neg_not_distinct.isle
│   │       │   │   │   │   └── 📄 broken_shift.isle
│   │       │   │   │   ├── 📁 sdiv
│   │       │   │   │   │   ├── 📄 broken_sdiv.isle
│   │       │   │   │   │   └── 📄 broken_sdiv_safe_const.isle
│   │       │   │   │   ├── 📁 shifts
│   │       │   │   │   │   ├── 📄 broken_do_shift_32.isle
│   │       │   │   │   │   ├── 📄 broken_ishl_to_do_shift_64.isle
│   │       │   │   │   │   ├── 📄 broken_sshr_to_do_shift_fits_in_32.isle
│   │       │   │   │   │   └── 📄 broken_ushr_to_do_shift_fits_in_32.isle
│   │       │   │   │   └── 📁 udiv
│   │       │   │   │       ├── 📄 broken_udiv.isle
│   │       │   │   │       ├── 📄 udiv_cve.isle
│   │       │   │   │       └── 📄 udiv_cve_underlying.isle
│   │       │   │   ├── 📁 constructs
│   │       │   │   │   └── 📄 if-let.isle
│   │       │   │   ├── 📁 iadd
│   │       │   │   │   ├── 📄 updated_iadd_imm12neg_left.isle
│   │       │   │   │   └── 📄 updated_iadd_imm12neg_right.isle
│   │       │   │   ├── 📁 isub
│   │       │   │   │   └── 📄 imm12neg_new.isle
│   │       │   │   ├── 📁 load
│   │       │   │   │   ├── 📄 load_add_panic.isle
│   │       │   │   │   └── 📄 load_conditional.isle
│   │       │   │   ├── 📁 mid-end
│   │       │   │   │   └── 📄 broken_bor_band_consts.isle
│   │       │   │   ├── 📁 store
│   │       │   │   │   ├── 📄 broken_bvsub_store_with_load.isle
│   │       │   │   │   ├── 📄 broken_isub_store_with_load.isle
│   │       │   │   │   └── 📄 store_switch.isle
│   │       │   │   └── 📁 x86
│   │       │   │       ├── 📄 amode_add_shl.isle
│   │       │   │       └── 📄 amode_add_uextend_shl.isle
│   │       │   ├── 📁 src
│   │       │   │   ├── 📄 annotations.rs
│   │       │   │   ├── 📄 interp.rs
│   │       │   │   ├── 📄 lib.rs
│   │       │   │   ├── 📄 main.rs
│   │       │   │   ├── 📁 solver
│   │       │   │   │   └── 📁 encoded_ops
│   │       │   │   │       ├── 📄 cls.rs
│   │       │   │   │       ├── 📄 clz.rs
│   │       │   │   │       ├── 📄 mod.rs
│   │       │   │   │       ├── 📄 popcnt.rs
│   │       │   │   │       ├── 📄 rev.rs
│   │       │   │   │       └── 📄 subs.rs
│   │       │   │   ├── 📄 solver.rs
│   │       │   │   ├── 📄 termname.rs
│   │       │   │   ├── 📄 type_inference.rs
│   │       │   │   └── 📄 verify.rs
│   │       │   └── 📁 tests
│   │       │       ├── 📁 utils
│   │       │       │   └── 📄 mod.rs
│   │       │       └── 📄 veri.rs
│   │       └── 📁 veri_ir
│   │           ├── 📄 Cargo.toml
│   │           ├── 📄 README.md
│   │           └── 📁 src
│   │               ├── 📄 annotation_ir.rs
│   │               └── 📄 lib.rs
│   ├── 📁 jit
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📁 examples
│   │   │   └── 📄 jit-minimal.rs
│   │   ├── 📁 src
│   │   │   ├── 📄 backend.rs
│   │   │   ├── 📄 compiled_blob.rs
│   │   │   ├── 📄 lib.rs
│   │   │   └── 📁 memory
│   │   │       ├── 📄 arena.rs
│   │   │       ├── 📄 mod.rs
│   │   │       └── 📄 system.rs
│   │   └── 📁 tests
│   │       └── 📄 basic.rs
│   ├── 📁 media
│   │   ├── 📄 crane-ferris.svg
│   │   ├── 📄 spidermonkey1.png
│   │   └── 📄 spidermonkey2.png
│   ├── 📁 module
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 data_context.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 module.rs
│   │       └── 📄 traps.rs
│   ├── 📁 native
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 lib.rs
│   │       └── 📄 riscv.rs
│   ├── 📁 object
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📁 src
│   │   │   ├── 📄 backend.rs
│   │   │   └── 📄 lib.rs
│   │   └── 📁 tests
│   │       └── 📄 basic.rs
│   ├── 📁 reader
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       ├── 📄 error.rs
│   │       ├── 📄 isaspec.rs
│   │       ├── 📄 lexer.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 parser.rs
│   │       ├── 📄 run_command.rs
│   │       ├── 📄 sourcemap.rs
│   │       ├── 📄 testcommand.rs
│   │       └── 📄 testfile.rs
│   ├── 📄 run-souper.sh
│   ├── 📄 rustc.md
│   ├── 📁 serde
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       └── 📄 clif-json.rs
│   ├── 📁 src
│   │   ├── 📄 bugpoint.rs
│   │   ├── 📄 cat.rs
│   │   ├── 📄 clif-util.rs
│   │   ├── 📄 compile.rs
│   │   ├── 📄 disasm.rs
│   │   ├── 📄 interpret.rs
│   │   ├── 📄 print_cfg.rs
│   │   ├── 📄 run.rs
│   │   ├── 📄 souper_harvest.rs
│   │   └── 📄 utils.rs
│   ├── 📁 srcgen
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 error.rs
│   │       └── 📄 lib.rs
│   ├── 📁 tests
│   │   ├── 📄 bugpoint_consts.clif
│   │   ├── 📄 bugpoint_consts_expected.clif
│   │   ├── 📄 bugpoint_test.clif
│   │   ├── 📄 bugpoint_test_expected.clif
│   │   ├── 📄 filetests.rs
│   │   └── 📄 logged-filetests.rs
│   └── 📁 umbrella
│       ├── 📄 Cargo.toml
│       ├── 📄 LICENSE
│       ├── 📄 README.md
│       └── 📁 src
│           └── 📄 lib.rs
├── 📁 crates
│   ├── 📁 bench-api
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 lib.rs
│   │       └── 📄 unsafe_send_sync.rs
│   ├── 📁 c-api
│   │   ├── 📄 CMakeLists.txt
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📁 artifact
│   │   │   ├── 📄 Cargo.toml
│   │   │   └── 📁 src
│   │   │       └── 📄 lib.rs
│   │   ├── 📄 build.rs
│   │   ├── 📁 cmake
│   │   │   ├── 📄 features.cmake
│   │   │   └── 📄 install-headers.cmake
│   │   ├── 📄 doxygen.conf.in
│   │   ├── 📁 include
│   │   │   ├── 📄 doc-wasm.h
│   │   │   ├── 📄 wasi.h
│   │   │   ├── 📄 wasm.h
│   │   │   ├── 📄 wasm.hh
│   │   │   ├── 📁 wasmtime
│   │   │   │   ├── 📄 async.h
│   │   │   │   ├── 📁 component
│   │   │   │   │   ├── 📄 component.h
│   │   │   │   │   ├── 📄 func.h
│   │   │   │   │   ├── 📄 instance.h
│   │   │   │   │   ├── 📄 linker.h
│   │   │   │   │   └── 📄 val.h
│   │   │   │   ├── 📄 component.h
│   │   │   │   ├── 📄 conf.h.in
│   │   │   │   ├── 📄 config.h
│   │   │   │   ├── 📄 config.hh
│   │   │   │   ├── 📄 engine.h
│   │   │   │   ├── 📄 engine.hh
│   │   │   │   ├── 📄 error.h
│   │   │   │   ├── 📄 error.hh
│   │   │   │   ├── 📄 extern.h
│   │   │   │   ├── 📄 extern.hh
│   │   │   │   ├── 📄 extern_declare.hh
│   │   │   │   ├── 📄 func.h
│   │   │   │   ├── 📄 func.hh
│   │   │   │   ├── 📄 global.h
│   │   │   │   ├── 📄 global.hh
│   │   │   │   ├── 📄 instance.h
│   │   │   │   ├── 📄 instance.hh
│   │   │   │   ├── 📄 linker.h
│   │   │   │   ├── 📄 linker.hh
│   │   │   │   ├── 📄 memory.h
│   │   │   │   ├── 📄 memory.hh
│   │   │   │   ├── 📄 module.h
│   │   │   │   ├── 📄 module.hh
│   │   │   │   ├── 📄 profiling.h
│   │   │   │   ├── 📄 sharedmemory.h
│   │   │   │   ├── 📄 span.hh
│   │   │   │   ├── 📄 store.h
│   │   │   │   ├── 📄 store.hh
│   │   │   │   ├── 📄 table.h
│   │   │   │   ├── 📄 table.hh
│   │   │   │   ├── 📄 trap.h
│   │   │   │   ├── 📄 trap.hh
│   │   │   │   ├── 📁 types
│   │   │   │   │   ├── 📄 export.hh
│   │   │   │   │   ├── 📄 extern.hh
│   │   │   │   │   ├── 📄 func.hh
│   │   │   │   │   ├── 📄 global.hh
│   │   │   │   │   ├── 📄 import.hh
│   │   │   │   │   ├── 📄 memory.hh
│   │   │   │   │   ├── 📄 table.hh
│   │   │   │   │   └── 📄 val.hh
│   │   │   │   ├── 📄 types.hh
│   │   │   │   ├── 📄 val.h
│   │   │   │   ├── 📄 val.hh
│   │   │   │   ├── 📄 wasi.hh
│   │   │   │   ├── 📄 wasip2.h
│   │   │   │   ├── 📄 wat.h
│   │   │   │   └── 📄 wat.hh
│   │   │   ├── 📄 wasmtime.h
│   │   │   └── 📄 wasmtime.hh
│   │   ├── 📁 src
│   │   │   ├── 📄 async.rs
│   │   │   ├── 📁 component
│   │   │   │   ├── 📄 component.rs
│   │   │   │   ├── 📄 func.rs
│   │   │   │   ├── 📄 instance.rs
│   │   │   │   ├── 📄 linker.rs
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   └── 📄 val.rs
│   │   │   ├── 📄 config.rs
│   │   │   ├── 📄 engine.rs
│   │   │   ├── 📄 error.rs
│   │   │   ├── 📄 extern.rs
│   │   │   ├── 📄 func.rs
│   │   │   ├── 📄 global.rs
│   │   │   ├── 📄 instance.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📄 linker.rs
│   │   │   ├── 📄 memory.rs
│   │   │   ├── 📄 module.rs
│   │   │   ├── 📄 profiling.rs
│   │   │   ├── 📄 ref.rs
│   │   │   ├── 📄 sharedmemory.rs
│   │   │   ├── 📄 store.rs
│   │   │   ├── 📄 table.rs
│   │   │   ├── 📄 trap.rs
│   │   │   ├── 📁 types
│   │   │   │   ├── 📄 export.rs
│   │   │   │   ├── 📄 extern.rs
│   │   │   │   ├── 📄 func.rs
│   │   │   │   ├── 📄 global.rs
│   │   │   │   ├── 📄 import.rs
│   │   │   │   ├── 📄 memory.rs
│   │   │   │   ├── 📄 table.rs
│   │   │   │   └── 📄 val.rs
│   │   │   ├── 📄 types.rs
│   │   │   ├── 📄 val.rs
│   │   │   ├── 📄 vec.rs
│   │   │   ├── 📄 wasi.rs
│   │   │   ├── 📄 wasip2.rs
│   │   │   └── 📄 wat2wasm.rs
│   │   └── 📁 tests
│   │       ├── 📄 CMakeLists.txt
│   │       ├── 📁 component
│   │       │   ├── 📄 call_func.cc
│   │       │   ├── 📄 define_module.cc
│   │       │   ├── 📄 instantiate.cc
│   │       │   ├── 📄 lookup_func.cc
│   │       │   ├── 📄 utils.h
│   │       │   └── 📄 values.cc
│   │       ├── 📄 config.cc
│   │       ├── 📄 double-include-a.cc
│   │       ├── 📄 double-include-b.cc
│   │       ├── 📄 engine.cc
│   │       ├── 📄 error.cc
│   │       ├── 📄 export_type.cc
│   │       ├── 📄 extern_type.cc
│   │       ├── 📄 func.cc
│   │       ├── 📄 func_type.cc
│   │       ├── 📄 global.cc
│   │       ├── 📄 global_type.cc
│   │       ├── 📄 import_type.cc
│   │       ├── 📄 instance.cc
│   │       ├── 📄 linker.cc
│   │       ├── 📄 memory.cc
│   │       ├── 📄 memory_type.cc
│   │       ├── 📄 module.cc
│   │       ├── 📄 simple.cc
│   │       ├── 📄 store.cc
│   │       ├── 📄 table.cc
│   │       ├── 📄 table_type.cc
│   │       ├── 📄 trap.cc
│   │       ├── 📄 types.cc
│   │       ├── 📄 val.cc
│   │       ├── 📄 val_type.cc
│   │       ├── 📄 wasi.cc
│   │       ├── 📄 wasip2.cc
│   │       └── 📄 wat.cc
│   ├── 📁 c-api-macros
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       └── 📄 lib.rs
│   ├── 📁 cache
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 build.rs
│   │   ├── 📁 src
│   │   │   ├── 📁 config
│   │   │   │   └── 📄 tests.rs
│   │   │   ├── 📄 config.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📄 tests.rs
│   │   │   ├── 📁 worker
│   │   │   │   ├── 📁 tests
│   │   │   │   │   └── 📄 system_time_stub.rs
│   │   │   │   └── 📄 tests.rs
│   │   │   └── 📄 worker.rs
│   │   └── 📁 tests
│   │       └── 📄 cache_write_default_config.rs
│   ├── 📁 cli-flags
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   └── 📁 src
│   │       ├── 📄 lib.rs
│   │       └── 📄 opt.rs
│   ├── 📁 component-macro
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 build.rs
│   │   ├── 📁 src
│   │   │   ├── 📄 bindgen.rs
│   │   │   ├── 📄 component.rs
│   │   │   └── 📄 lib.rs
│   │   ├── 📁 test-helpers
│   │   │   ├── 📄 Cargo.toml
│   │   │   └── 📁 src
│   │   │       └── 📄 lib.rs
│   │   └── 📁 tests
│   │       ├── 📁 codegen
│   │       │   ├── 📄 char.wit
│   │       │   ├── 📄 conventions.wit
│   │       │   ├── 📄 dead-code.wit
│   │       │   ├── 📄 direct-import.wit
│   │       │   ├── 📄 empty.wit
│   │       │   ├── 📄 flags.wit
│   │       │   ├── 📄 floats.wit
│   │       │   ├── 📄 function-new.wit
│   │       │   ├── 📄 host-world.wit
│   │       │   ├── 📄 integers.wit
│   │       │   ├── 📄 lists.wit
│   │       │   ├── 📄 many-arguments.wit
│   │       │   ├── 📁 multiversion
│   │       │   │   ├── 📁 deps
│   │       │   │   │   ├── 📁 v1
│   │       │   │   │   │   └── 📄 root.wit
│   │       │   │   │   └── 📁 v2
│   │       │   │   │       └── 📄 root.wit
│   │       │   │   └── 📄 root.wit
│   │       │   ├── 📁 path1
│   │       │   │   └── 📄 world.wit
│   │       │   ├── 📁 path2
│   │       │   │   └── 📄 world.wit
│   │       │   ├── 📄 records.wit
│   │       │   ├── 📄 rename.wit
│   │       │   ├── 📄 resources-export.wit
│   │       │   ├── 📄 resources-import.wit
│   │       │   ├── 📄 share-types.wit
│   │       │   ├── 📄 simple-functions.wit
│   │       │   ├── 📄 simple-lists.wit
│   │       │   ├── 📄 simple-wasi.wit
│   │       │   ├── 📄 small-anonymous.wit
│   │       │   ├── 📄 smoke-default.wit
│   │       │   ├── 📄 smoke-export.wit
│   │       │   ├── 📄 smoke.wit
│   │       │   ├── 📄 strings.wit
│   │       │   ├── 📄 unstable-features.wit
│   │       │   ├── 📄 unversioned-foo.wit
│   │       │   ├── 📄 use-paths.wit
│   │       │   ├── 📄 variants.wit
│   │       │   ├── 📄 wat.wit
│   │       │   └── 📄 worlds-with-types.wit
│   │       ├── 📄 codegen.rs
│   │       ├── 📄 codegen_no_std.rs
│   │       ├── 📁 expanded
│   │       │   ├── 📄 char.rs
│   │       │   ├── 📄 char_async.rs
│   │       │   ├── 📄 char_concurrent.rs
│   │       │   ├── 📄 char_tracing_async.rs
│   │       │   ├── 📄 conventions.rs
│   │       │   ├── 📄 conventions_async.rs
│   │       │   ├── 📄 conventions_concurrent.rs
│   │       │   ├── 📄 conventions_tracing_async.rs
│   │       │   ├── 📄 dead-code.rs
│   │       │   ├── 📄 dead-code_async.rs
│   │       │   ├── 📄 dead-code_concurrent.rs
│   │       │   ├── 📄 dead-code_tracing_async.rs
│   │       │   ├── 📄 direct-import.rs
│   │       │   ├── 📄 direct-import_async.rs
│   │       │   ├── 📄 direct-import_concurrent.rs
│   │       │   ├── 📄 direct-import_tracing_async.rs
│   │       │   ├── 📄 empty.rs
│   │       │   ├── 📄 empty_async.rs
│   │       │   ├── 📄 empty_concurrent.rs
│   │       │   ├── 📄 empty_tracing_async.rs
│   │       │   ├── 📄 flags.rs
│   │       │   ├── 📄 flags_async.rs
│   │       │   ├── 📄 flags_concurrent.rs
│   │       │   ├── 📄 flags_tracing_async.rs
│   │       │   ├── 📄 floats.rs
│   │       │   ├── 📄 floats_async.rs
│   │       │   ├── 📄 floats_concurrent.rs
│   │       │   ├── 📄 floats_tracing_async.rs
│   │       │   ├── 📄 function-new.rs
│   │       │   ├── 📄 function-new_async.rs
│   │       │   ├── 📄 function-new_concurrent.rs
│   │       │   ├── 📄 function-new_tracing_async.rs
│   │       │   ├── 📄 host-world.rs
│   │       │   ├── 📄 host-world_async.rs
│   │       │   ├── 📄 host-world_concurrent.rs
│   │       │   ├── 📄 host-world_tracing_async.rs
│   │       │   ├── 📄 integers.rs
│   │       │   ├── 📄 integers_async.rs
│   │       │   ├── 📄 integers_concurrent.rs
│   │       │   ├── 📄 integers_tracing_async.rs
│   │       │   ├── 📄 lists.rs
│   │       │   ├── 📄 lists_async.rs
│   │       │   ├── 📄 lists_concurrent.rs
│   │       │   ├── 📄 lists_tracing_async.rs
│   │       │   ├── 📄 many-arguments.rs
│   │       │   ├── 📄 many-arguments_async.rs
│   │       │   ├── 📄 many-arguments_concurrent.rs
│   │       │   ├── 📄 many-arguments_tracing_async.rs
│   │       │   ├── 📄 multi-return.rs
│   │       │   ├── 📄 multiversion.rs
│   │       │   ├── 📄 multiversion_async.rs
│   │       │   ├── 📄 multiversion_concurrent.rs
│   │       │   ├── 📄 multiversion_tracing_async.rs
│   │       │   ├── 📄 path1.rs
│   │       │   ├── 📄 path1_async.rs
│   │       │   ├── 📄 path1_concurrent.rs
│   │       │   ├── 📄 path1_tracing_async.rs
│   │       │   ├── 📄 path2.rs
│   │       │   ├── 📄 path2_async.rs
│   │       │   ├── 📄 path2_concurrent.rs
│   │       │   ├── 📄 path2_tracing_async.rs
│   │       │   ├── 📄 records.rs
│   │       │   ├── 📄 records_async.rs
│   │       │   ├── 📄 records_concurrent.rs
│   │       │   ├── 📄 records_tracing_async.rs
│   │       │   ├── 📄 rename.rs
│   │       │   ├── 📄 rename_async.rs
│   │       │   ├── 📄 rename_concurrent.rs
│   │       │   ├── 📄 rename_tracing_async.rs
│   │       │   ├── 📄 resources-export.rs
│   │       │   ├── 📄 resources-export_async.rs
│   │       │   ├── 📄 resources-export_concurrent.rs
│   │       │   ├── 📄 resources-export_tracing_async.rs
│   │       │   ├── 📄 resources-import.rs
│   │       │   ├── 📄 resources-import_async.rs
│   │       │   ├── 📄 resources-import_concurrent.rs
│   │       │   ├── 📄 resources-import_tracing_async.rs
│   │       │   ├── 📄 share-types.rs
│   │       │   ├── 📄 share-types_async.rs
│   │       │   ├── 📄 share-types_concurrent.rs
│   │       │   ├── 📄 share-types_tracing_async.rs
│   │       │   ├── 📄 simple-functions.rs
│   │       │   ├── 📄 simple-functions_async.rs
│   │       │   ├── 📄 simple-functions_concurrent.rs
│   │       │   ├── 📄 simple-functions_tracing_async.rs
│   │       │   ├── 📄 simple-lists.rs
│   │       │   ├── 📄 simple-lists_async.rs
│   │       │   ├── 📄 simple-lists_concurrent.rs
│   │       │   ├── 📄 simple-lists_tracing_async.rs
│   │       │   ├── 📄 simple-wasi.rs
│   │       │   ├── 📄 simple-wasi_async.rs
│   │       │   ├── 📄 simple-wasi_concurrent.rs
│   │       │   ├── 📄 simple-wasi_tracing_async.rs
│   │       │   ├── 📄 small-anonymous.rs
│   │       │   ├── 📄 small-anonymous_async.rs
│   │       │   ├── 📄 small-anonymous_concurrent.rs
│   │       │   ├── 📄 small-anonymous_tracing_async.rs
│   │       │   ├── 📄 smoke-default.rs
│   │       │   ├── 📄 smoke-default_async.rs
│   │       │   ├── 📄 smoke-default_concurrent.rs
│   │       │   ├── 📄 smoke-default_tracing_async.rs
│   │       │   ├── 📄 smoke-export.rs
│   │       │   ├── 📄 smoke-export_async.rs
│   │       │   ├── 📄 smoke-export_concurrent.rs
│   │       │   ├── 📄 smoke-export_tracing_async.rs
│   │       │   ├── 📄 smoke.rs
│   │       │   ├── 📄 smoke_async.rs
│   │       │   ├── 📄 smoke_concurrent.rs
│   │       │   ├── 📄 smoke_tracing_async.rs
│   │       │   ├── 📄 strings.rs
│   │       │   ├── 📄 strings_async.rs
│   │       │   ├── 📄 strings_concurrent.rs
│   │       │   ├── 📄 strings_tracing_async.rs
│   │       │   ├── 📄 unstable-features.rs
│   │       │   ├── 📄 unstable-features_async.rs
│   │       │   ├── 📄 unstable-features_concurrent.rs
│   │       │   ├── 📄 unstable-features_tracing_async.rs
│   │       │   ├── 📄 unversioned-foo.rs
│   │       │   ├── 📄 unversioned-foo_async.rs
│   │       │   ├── 📄 unversioned-foo_concurrent.rs
│   │       │   ├── 📄 unversioned-foo_tracing_async.rs
│   │       │   ├── 📄 use-paths.rs
│   │       │   ├── 📄 use-paths_async.rs
│   │       │   ├── 📄 use-paths_concurrent.rs
│   │       │   ├── 📄 use-paths_tracing_async.rs
│   │       │   ├── 📄 variants.rs
│   │       │   ├── 📄 variants_async.rs
│   │       │   ├── 📄 variants_concurrent.rs
│   │       │   ├── 📄 variants_tracing_async.rs
│   │       │   ├── 📄 wat.rs
│   │       │   ├── 📄 wat_async.rs
│   │       │   ├── 📄 wat_concurrent.rs
│   │       │   ├── 📄 wat_tracing_async.rs
│   │       │   ├── 📄 worlds-with-types.rs
│   │       │   ├── 📄 worlds-with-types_async.rs
│   │       │   ├── 📄 worlds-with-types_concurrent.rs
│   │       │   └── 📄 worlds-with-types_tracing_async.rs
│   │       └── 📄 expanded.rs
│   ├── 📁 component-util
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       └── 📄 lib.rs
│   ├── 📁 cranelift
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 SECURITY.md
│   │   └── 📁 src
│   │       ├── 📄 bounds_checks.rs
│   │       ├── 📄 builder.rs
│   │       ├── 📄 compiled_function.rs
│   │       ├── 📁 compiler
│   │       │   └── 📄 component.rs
│   │       ├── 📄 compiler.rs
│   │       ├── 📁 debug
│   │       │   ├── 📄 gc.rs
│   │       │   ├── 📁 transform
│   │       │   │   ├── 📄 address_transform.rs
│   │       │   │   ├── 📄 attr.rs
│   │       │   │   ├── 📄 debug_transform_logging.rs
│   │       │   │   ├── 📄 expression.rs
│   │       │   │   ├── 📄 line_program.rs
│   │       │   │   ├── 📄 mod.rs
│   │       │   │   ├── 📄 range_info_builder.rs
│   │       │   │   ├── 📄 refs.rs
│   │       │   │   ├── 📄 simulate.rs
│   │       │   │   ├── 📄 synthetic.rs
│   │       │   │   ├── 📄 unit.rs
│   │       │   │   └── 📄 utils.rs
│   │       │   └── 📄 write_debuginfo.rs
│   │       ├── 📄 debug.rs
│   │       ├── 📁 func_environ
│   │       │   ├── 📁 gc
│   │       │   │   ├── 📄 disabled.rs
│   │       │   │   ├── 📁 enabled
│   │       │   │   │   ├── 📄 drc.rs
│   │       │   │   │   └── 📄 null.rs
│   │       │   │   └── 📄 enabled.rs
│   │       │   ├── 📄 gc.rs
│   │       │   └── 📁 stack_switching
│   │       │       ├── 📄 control_effect.rs
│   │       │       ├── 📄 fatpointer.rs
│   │       │       ├── 📄 instructions.rs
│   │       │       └── 📄 mod.rs
│   │       ├── 📄 func_environ.rs
│   │       ├── 📄 isa_builder.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 obj.rs
│   │       └── 📁 translate
│   │           ├── 📄 code_translator.rs
│   │           ├── 📁 environ
│   │           │   ├── 📄 mod.rs
│   │           │   └── 📄 spec.rs
│   │           ├── 📄 func_translator.rs
│   │           ├── 📄 heap.rs
│   │           ├── 📄 mod.rs
│   │           ├── 📄 stack.rs
│   │           ├── 📄 table.rs
│   │           └── 📄 translation_utils.rs
│   ├── 📁 environ
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📁 examples
│   │   │   └── 📄 factc.rs
│   │   ├── 📁 fuzz
│   │   │   ├── 📄 Cargo.toml
│   │   │   └── 📁 fuzz_targets
│   │   │       └── 📄 fact-valid-module.rs
│   │   └── 📁 src
│   │       ├── 📄 address_map.rs
│   │       ├── 📄 builtin.rs
│   │       ├── 📁 compile
│   │       │   ├── 📄 address_map.rs
│   │       │   ├── 📄 mod.rs
│   │       │   ├── 📄 module_artifacts.rs
│   │       │   ├── 📄 module_environ.rs
│   │       │   ├── 📄 module_types.rs
│   │       │   ├── 📄 stack_maps.rs
│   │       │   └── 📄 trap_encoding.rs
│   │       ├── 📁 component
│   │       │   ├── 📄 artifacts.rs
│   │       │   ├── 📄 compiler.rs
│   │       │   ├── 📄 dfg.rs
│   │       │   ├── 📄 info.rs
│   │       │   ├── 📄 names.rs
│   │       │   ├── 📁 translate
│   │       │   │   ├── 📄 adapt.rs
│   │       │   │   └── 📄 inline.rs
│   │       │   ├── 📄 translate.rs
│   │       │   ├── 📄 types.rs
│   │       │   ├── 📁 types_builder
│   │       │   │   └── 📄 resources.rs
│   │       │   ├── 📄 types_builder.rs
│   │       │   └── 📄 vmcomponent_offsets.rs
│   │       ├── 📄 component.rs
│   │       ├── 📄 demangling.rs
│   │       ├── 📄 error.rs
│   │       ├── 📄 ext.rs
│   │       ├── 📁 fact
│   │       │   ├── 📄 core_types.rs
│   │       │   ├── 📄 signature.rs
│   │       │   ├── 📄 trampoline.rs
│   │       │   ├── 📄 transcode.rs
│   │       │   └── 📄 traps.rs
│   │       ├── 📄 fact.rs
│   │       ├── 📁 gc
│   │       │   ├── 📄 drc.rs
│   │       │   └── 📄 null.rs
│   │       ├── 📄 gc.rs
│   │       ├── 📄 hostcall.rs
│   │       ├── 📄 key.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 module.rs
│   │       ├── 📄 module_artifacts.rs
│   │       ├── 📄 module_types.rs
│   │       ├── 📄 obj.rs
│   │       ├── 📄 prelude.rs
│   │       ├── 📄 ref_bits.rs
│   │       ├── 📄 scopevec.rs
│   │       ├── 📄 stack_map.rs
│   │       ├── 📄 stack_switching.rs
│   │       ├── 📄 trap_encoding.rs
│   │       ├── 📄 tunables.rs
│   │       ├── 📄 types.rs
│   │       └── 📄 vmoffsets.rs
│   ├── 📁 explorer
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 eslint.config.js
│   │   ├── 📄 package-lock.json
│   │   ├── 📄 package.json
│   │   └── 📁 src
│   │       ├── 📄 index.css
│   │       ├── 📄 index.js
│   │       └── 📄 lib.rs
│   ├── 📁 fiber
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 build.rs
│   │   └── 📁 src
│   │       ├── 📄 lib.rs
│   │       ├── 📄 miri.rs
│   │       ├── 📄 nostd.rs
│   │       ├── 📁 stackswitch
│   │       │   ├── 📄 aarch64.rs
│   │       │   ├── 📄 arm.rs
│   │       │   ├── 📄 riscv64.rs
│   │       │   ├── 📄 s390x.rs
│   │       │   ├── 📄 x86.rs
│   │       │   └── 📄 x86_64.rs
│   │       ├── 📄 stackswitch.rs
│   │       ├── 📄 unix.rs
│   │       ├── 📄 windows.c
│   │       └── 📄 windows.rs
│   ├── 📁 fuzzing
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   ├── 📁 src
│   │   │   ├── 📁 generators
│   │   │   │   ├── 📄 api.rs
│   │   │   │   ├── 📄 async_config.rs
│   │   │   │   ├── 📄 codegen_settings.rs
│   │   │   │   ├── 📄 component_types.rs
│   │   │   │   ├── 📄 config.rs
│   │   │   │   ├── 📄 instance_allocation_strategy.rs
│   │   │   │   ├── 📄 memory.rs
│   │   │   │   ├── 📄 module.rs
│   │   │   │   ├── 📄 pooling_config.rs
│   │   │   │   ├── 📄 single_inst_module.rs
│   │   │   │   ├── 📄 stacks.rs
│   │   │   │   ├── 📄 table_ops.rs
│   │   │   │   ├── 📄 value.rs
│   │   │   │   └── 📄 wast_test.rs
│   │   │   ├── 📄 generators.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📄 mutators.rs
│   │   │   ├── 📁 oracles
│   │   │   │   ├── 📄 diff_spec.rs
│   │   │   │   ├── 📄 diff_v8.rs
│   │   │   │   ├── 📄 diff_wasmi.rs
│   │   │   │   ├── 📄 diff_wasmtime.rs
│   │   │   │   ├── 📄 dummy.rs
│   │   │   │   ├── 📄 engine.rs
│   │   │   │   ├── 📄 memory.rs
│   │   │   │   └── 📄 stacks.rs
│   │   │   ├── 📄 oracles.rs
│   │   │   └── 📄 single_module_fuzzer.rs
│   │   └── 📁 wasm-spec-interpreter
│   │       ├── 📄 Cargo.toml
│   │       ├── 📄 README.md
│   │       ├── 📄 build.rs
│   │       ├── 📁 ocaml
│   │       │   ├── 📄 Makefile
│   │       │   ├── 📄 README.md
│   │       │   └── 📄 interpret.ml
│   │       ├── 📁 src
│   │       │   ├── 📄 lib.rs
│   │       │   ├── 📄 with_library.rs
│   │       │   └── 📄 without_library.rs
│   │       └── 📁 tests
│   │           ├── 📄 add.wat
│   │           ├── 📄 memory.wat
│   │           ├── 📄 oob.wat
│   │           ├── 📄 shr_s.wat
│   │           └── 📄 simd_not.wat
│   ├── 📁 jit-debug
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   ├── 📄 gdbjit.c
│   │   └── 📁 src
│   │       ├── 📄 gdb_jit_int.rs
│   │       ├── 📄 lib.rs
│   │       └── 📄 perf_jitdump.rs
│   ├── 📁 jit-icache-coherence
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 lib.rs
│   │       ├── 📄 libc.rs
│   │       ├── 📄 miri.rs
│   │       └── 📄 win.rs
│   ├── 📁 math
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       └── 📄 lib.rs
│   ├── 📁 misc
│   │   └── 📁 component-async-tests
│   │       ├── 📄 Cargo.toml
│   │       ├── 📁 src
│   │       │   ├── 📄 borrowing_host.rs
│   │       │   ├── 📄 closed_streams.rs
│   │       │   ├── 📄 lib.rs
│   │       │   ├── 📄 resource_stream.rs
│   │       │   ├── 📄 round_trip.rs
│   │       │   ├── 📄 round_trip_direct.rs
│   │       │   ├── 📄 round_trip_many.rs
│   │       │   ├── 📄 sleep.rs
│   │       │   ├── 📄 transmit.rs
│   │       │   ├── 📄 util.rs
│   │       │   └── 📄 yield_host.rs
│   │       ├── 📁 tests
│   │       │   ├── 📁 scenario
│   │       │   │   ├── 📄 backpressure.rs
│   │       │   │   ├── 📄 borrowing.rs
│   │       │   │   ├── 📄 common.rs
│   │       │   │   ├── 📄 error_context.rs
│   │       │   │   ├── 📄 mod.rs
│   │       │   │   ├── 📄 post_return.rs
│   │       │   │   ├── 📄 read_resource_stream.rs
│   │       │   │   ├── 📄 round_trip.rs
│   │       │   │   ├── 📄 round_trip_direct.rs
│   │       │   │   ├── 📄 round_trip_many.rs
│   │       │   │   ├── 📄 streams.rs
│   │       │   │   ├── 📄 transmit.rs
│   │       │   │   ├── 📄 unit_stream.rs
│   │       │   │   ├── 📄 util.rs
│   │       │   │   └── 📄 yield_.rs
│   │       │   └── 📄 test_all.rs
│   │       └── 📁 wit
│   │           └── 📄 test.wit
│   ├── 📁 slab
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       └── 📄 lib.rs
│   ├── 📁 test-macros
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 add_variants.rs
│   │       ├── 📄 flags_test.rs
│   │       ├── 📄 lib.rs
│   │       └── 📄 wasmtime_test.rs
│   ├── 📁 test-programs
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 README.md
│   │   ├── 📁 artifacts
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 build.rs
│   │   │   └── 📁 src
│   │   │       └── 📄 lib.rs
│   │   ├── 📄 build.rs
│   │   └── 📁 src
│   │       ├── 📄 async_.rs
│   │       ├── 📁 bin
│   │       │   ├── 📄 api_proxy.rs
│   │       │   ├── 📄 api_proxy_forward_request.rs
│   │       │   ├── 📄 api_proxy_streaming.rs
│   │       │   ├── 📄 api_reactor.rs
│   │       │   ├── 📄 api_read_only.rs
│   │       │   ├── 📄 api_time.rs
│   │       │   ├── 📄 async_backpressure_callee.rs
│   │       │   ├── 📄 async_backpressure_caller.rs
│   │       │   ├── 📄 async_borrowing_callee.rs
│   │       │   ├── 📄 async_borrowing_caller.rs
│   │       │   ├── 📄 async_cancel_callee.rs
│   │       │   ├── 📄 async_cancel_caller.rs
│   │       │   ├── 📄 async_cancel_transmit.rs
│   │       │   ├── 📄 async_closed_stream.rs
│   │       │   ├── 📄 async_closed_streams.rs
│   │       │   ├── 📄 async_error_context.rs
│   │       │   ├── 📄 async_error_context_callee.rs
│   │       │   ├── 📄 async_error_context_caller.rs
│   │       │   ├── 📄 async_intertask_communication.rs
│   │       │   ├── 📄 async_poll_stackless.rs
│   │       │   ├── 📄 async_poll_synchronous.rs
│   │       │   ├── 📄 async_post_return_callee.rs
│   │       │   ├── 📄 async_post_return_caller.rs
│   │       │   ├── 📄 async_read_resource_stream.rs
│   │       │   ├── 📄 async_readiness.rs
│   │       │   ├── 📄 async_round_trip_direct_stackless.rs
│   │       │   ├── 📄 async_round_trip_many_stackful.rs
│   │       │   ├── 📄 async_round_trip_many_stackless.rs
│   │       │   ├── 📄 async_round_trip_many_synchronous.rs
│   │       │   ├── 📄 async_round_trip_many_wait.rs
│   │       │   ├── 📄 async_round_trip_stackful.rs
│   │       │   ├── 📄 async_round_trip_stackless.rs
│   │       │   ├── 📄 async_round_trip_stackless_sync_import.rs
│   │       │   ├── 📄 async_round_trip_synchronous.rs
│   │       │   ├── 📄 async_round_trip_wait.rs
│   │       │   ├── 📄 async_sleep_post_return_callee.rs
│   │       │   ├── 📄 async_sleep_post_return_caller.rs
│   │       │   ├── 📄 async_synchronous_transmit.rs
│   │       │   ├── 📄 async_transmit_callee.rs
│   │       │   ├── 📄 async_transmit_caller.rs
│   │       │   ├── 📄 async_unit_stream_callee.rs
│   │       │   ├── 📄 async_unit_stream_caller.rs
│   │       │   ├── 📄 async_yield_callee_stackless.rs
│   │       │   ├── 📄 async_yield_callee_synchronous.rs
│   │       │   ├── 📄 async_yield_caller.rs
│   │       │   ├── 📄 async_yield_caller_cancel.rs
│   │       │   ├── 📄 cli_args.rs
│   │       │   ├── 📄 cli_argv0.rs
│   │       │   ├── 📄 cli_default_clocks.rs
│   │       │   ├── 📄 cli_directory_list.rs
│   │       │   ├── 📄 cli_env.rs
│   │       │   ├── 📄 cli_exit_default.rs
│   │       │   ├── 📄 cli_exit_failure.rs
│   │       │   ├── 📄 cli_exit_panic.rs
│   │       │   ├── 📄 cli_exit_success.rs
│   │       │   ├── 📄 cli_exit_with_code.rs
│   │       │   ├── 📄 cli_export_cabi_realloc.rs
│   │       │   ├── 📄 cli_file_append.rs
│   │       │   ├── 📄 cli_file_dir_sync.rs
│   │       │   ├── 📄 cli_file_read.rs
│   │       │   ├── 📄 cli_hello_stdout.rs
│   │       │   ├── 📄 cli_invoke_async.rs
│   │       │   ├── 📄 cli_large_env.rs
│   │       │   ├── 📄 cli_multiple_preopens.rs
│   │       │   ├── 📄 cli_no_ip_name_lookup.rs
│   │       │   ├── 📄 cli_no_tcp.rs
│   │       │   ├── 📄 cli_no_udp.rs
│   │       │   ├── 📄 cli_p1_much_stdout.rs
│   │       │   ├── 📄 cli_p2_much_stdout.rs
│   │       │   ├── 📄 cli_p3_hello_stdout.rs
│   │       │   ├── 📄 cli_p3_much_stdout.rs
│   │       │   ├── 📄 cli_serve_authority_and_scheme.rs
│   │       │   ├── 📄 cli_serve_config.rs
│   │       │   ├── 📄 cli_serve_echo_env.rs
│   │       │   ├── 📄 cli_serve_keyvalue.rs
│   │       │   ├── 📄 cli_serve_p3_hello_world.rs
│   │       │   ├── 📄 cli_serve_return_before_set.rs
│   │       │   ├── 📄 cli_serve_trap_before_set.rs
│   │       │   ├── 📄 cli_serve_with_print.rs
│   │       │   ├── 📄 cli_sleep.rs
│   │       │   ├── 📄 cli_sleep_forever.rs
│   │       │   ├── 📄 cli_splice_stdin.rs
│   │       │   ├── 📄 cli_stdin.rs
│   │       │   ├── 📄 cli_stdin_empty.rs
│   │       │   ├── 📄 cli_stdio_write_flushes.rs
│   │       │   ├── 📄 config_get.rs
│   │       │   ├── 📄 dwarf_codegen_optimized.cpp
│   │       │   ├── 📄 dwarf_codegen_optimized_wasm_optimized.cpp
│   │       │   ├── 📄 dwarf_dead_code.c
│   │       │   ├── 📄 dwarf_fib_wasm.c
│   │       │   ├── 📄 dwarf_fib_wasm_dwarf5.c
│   │       │   ├── 📄 dwarf_fib_wasm_split4.c
│   │       │   ├── 📄 dwarf_fission.c
│   │       │   ├── 📄 dwarf_fraction_norm.cc
│   │       │   ├── 📄 dwarf_generic.cpp
│   │       │   ├── 📄 dwarf_generic.h
│   │       │   ├── 📄 dwarf_generic_satellite.cpp
│   │       │   ├── 📄 dwarf_imported_memory.rs
│   │       │   ├── 📄 dwarf_multiple_codegen_units.rs
│   │       │   ├── 📄 dwarf_shared_memory.rs
│   │       │   ├── 📄 dwarf_simple.rs
│   │       │   ├── 📄 dwarf_spilled_frame_base.c
│   │       │   ├── 📄 dwarf_two_removed_branches.wat
│   │       │   ├── 📄 http_outbound_request_content_length.rs
│   │       │   ├── 📄 http_outbound_request_get.rs
│   │       │   ├── 📄 http_outbound_request_invalid_dnsname.rs
│   │       │   ├── 📄 http_outbound_request_invalid_header.rs
│   │       │   ├── 📄 http_outbound_request_invalid_port.rs
│   │       │   ├── 📄 http_outbound_request_invalid_version.rs
│   │       │   ├── 📄 http_outbound_request_large_post.rs
│   │       │   ├── 📄 http_outbound_request_missing_path_and_query.rs
│   │       │   ├── 📄 http_outbound_request_post.rs
│   │       │   ├── 📄 http_outbound_request_put.rs
│   │       │   ├── 📄 http_outbound_request_response_build.rs
│   │       │   ├── 📄 http_outbound_request_timeout.rs
│   │       │   ├── 📄 http_outbound_request_unknown_method.rs
│   │       │   ├── 📄 http_outbound_request_unsupported_scheme.rs
│   │       │   ├── 📄 keyvalue_main.rs
│   │       │   ├── 📄 nn_wit_image_classification_onnx.rs
│   │       │   ├── 📄 nn_wit_image_classification_openvino.rs
│   │       │   ├── 📄 nn_wit_image_classification_openvino_named.rs
│   │       │   ├── 📄 nn_wit_image_classification_pytorch.rs
│   │       │   ├── 📄 nn_wit_image_classification_winml_named.rs
│   │       │   ├── 📄 nn_witx_image_classification_onnx.rs
│   │       │   ├── 📄 nn_witx_image_classification_openvino.rs
│   │       │   ├── 📄 nn_witx_image_classification_openvino_named.rs
│   │       │   ├── 📄 nn_witx_image_classification_pytorch.rs
│   │       │   ├── 📄 nn_witx_image_classification_winml_named.rs
│   │       │   ├── 📄 p3_api_proxy.rs
│   │       │   ├── 📄 p3_cli.rs
│   │       │   ├── 📄 p3_clocks_sleep.rs
│   │       │   ├── 📄 p3_file_write.rs
│   │       │   ├── 📄 p3_filesystem_file_read_write.rs
│   │       │   ├── 📄 p3_http_echo.rs
│   │       │   ├── 📄 p3_http_middleware.rs
│   │       │   ├── 📄 p3_http_middleware_with_chain.rs
│   │       │   ├── 📄 p3_http_outbound_request_content_length.rs
│   │       │   ├── 📄 p3_http_outbound_request_get.rs
│   │       │   ├── 📄 p3_http_outbound_request_invalid_dnsname.rs
│   │       │   ├── 📄 p3_http_outbound_request_invalid_header.rs
│   │       │   ├── 📄 p3_http_outbound_request_invalid_port.rs
│   │       │   ├── 📄 p3_http_outbound_request_invalid_version.rs
│   │       │   ├── 📄 p3_http_outbound_request_large_post.rs
│   │       │   ├── 📄 p3_http_outbound_request_missing_path_and_query.rs
│   │       │   ├── 📄 p3_http_outbound_request_post.rs
│   │       │   ├── 📄 p3_http_outbound_request_put.rs
│   │       │   ├── 📄 p3_http_outbound_request_response_build.rs
│   │       │   ├── 📄 p3_http_outbound_request_timeout.rs
│   │       │   ├── 📄 p3_http_outbound_request_unknown_method.rs
│   │       │   ├── 📄 p3_http_outbound_request_unsupported_scheme.rs
│   │       │   ├── 📄 p3_http_proxy.rs
│   │       │   ├── 📄 p3_random_imports.rs
│   │       │   ├── 📄 p3_readdir.rs
│   │       │   ├── 📄 p3_sockets_ip_name_lookup.rs
│   │       │   ├── 📄 p3_sockets_tcp_bind.rs
│   │       │   ├── 📄 p3_sockets_tcp_connect.rs
│   │       │   ├── 📄 p3_sockets_tcp_sample_application.rs
│   │       │   ├── 📄 p3_sockets_tcp_sockopts.rs
│   │       │   ├── 📄 p3_sockets_tcp_states.rs
│   │       │   ├── 📄 p3_sockets_tcp_streams.rs
│   │       │   ├── 📄 p3_sockets_udp_bind.rs
│   │       │   ├── 📄 p3_sockets_udp_connect.rs
│   │       │   ├── 📄 p3_sockets_udp_sample_application.rs
│   │       │   ├── 📄 p3_sockets_udp_sockopts.rs
│   │       │   ├── 📄 p3_sockets_udp_states.rs
│   │       │   ├── 📄 piped_multiple.rs
│   │       │   ├── 📄 piped_polling.rs
│   │       │   ├── 📄 piped_simple.rs
│   │       │   ├── 📄 preview1_big_random_buf.rs
│   │       │   ├── 📄 preview1_clock_time_get.rs
│   │       │   ├── 📄 preview1_close_preopen.rs
│   │       │   ├── 📄 preview1_dangling_fd.rs
│   │       │   ├── 📄 preview1_dangling_symlink.rs
│   │       │   ├── 📄 preview1_dir_fd_op_failures.rs
│   │       │   ├── 📄 preview1_directory_seek.rs
│   │       │   ├── 📄 preview1_fd_advise.rs
│   │       │   ├── 📄 preview1_fd_filestat_get.rs
│   │       │   ├── 📄 preview1_fd_filestat_set.rs
│   │       │   ├── 📄 preview1_fd_flags_set.rs
│   │       │   ├── 📄 preview1_fd_readdir.rs
│   │       │   ├── 📄 preview1_file_allocate.rs
│   │       │   ├── 📄 preview1_file_pread_pwrite.rs
│   │       │   ├── 📄 preview1_file_read_write.rs
│   │       │   ├── 📄 preview1_file_seek_tell.rs
│   │       │   ├── 📄 preview1_file_truncation.rs
│   │       │   ├── 📄 preview1_file_unbuffered_write.rs
│   │       │   ├── 📄 preview1_file_write.rs
│   │       │   ├── 📄 preview1_interesting_paths.rs
│   │       │   ├── 📄 preview1_nofollow_errors.rs
│   │       │   ├── 📄 preview1_overwrite_preopen.rs
│   │       │   ├── 📄 preview1_path_exists.rs
│   │       │   ├── 📄 preview1_path_filestat.rs
│   │       │   ├── 📄 preview1_path_link.rs
│   │       │   ├── 📄 preview1_path_open_create_existing.rs
│   │       │   ├── 📄 preview1_path_open_dirfd_not_dir.rs
│   │       │   ├── 📄 preview1_path_open_lots.rs
│   │       │   ├── 📄 preview1_path_open_missing.rs
│   │       │   ├── 📄 preview1_path_open_nonblock.rs
│   │       │   ├── 📄 preview1_path_open_preopen.rs
│   │       │   ├── 📄 preview1_path_open_read_write.rs
│   │       │   ├── 📄 preview1_path_rename.rs
│   │       │   ├── 📄 preview1_path_rename_dir_trailing_slashes.rs
│   │       │   ├── 📄 preview1_path_symlink_trailing_slashes.rs
│   │       │   ├── 📄 preview1_poll_oneoff_files.rs
│   │       │   ├── 📄 preview1_poll_oneoff_stdio.rs
│   │       │   ├── 📄 preview1_readlink.rs
│   │       │   ├── 📄 preview1_regular_file_isatty.rs
│   │       │   ├── 📄 preview1_remove_directory.rs
│   │       │   ├── 📄 preview1_remove_nonempty_directory.rs
│   │       │   ├── 📄 preview1_renumber.rs
│   │       │   ├── 📄 preview1_sched_yield.rs
│   │       │   ├── 📄 preview1_stdio.rs
│   │       │   ├── 📄 preview1_stdio_isatty.rs
│   │       │   ├── 📄 preview1_stdio_not_isatty.rs
│   │       │   ├── 📄 preview1_symlink_create.rs
│   │       │   ├── 📄 preview1_symlink_filestat.rs
│   │       │   ├── 📄 preview1_symlink_loop.rs
│   │       │   ├── 📄 preview1_unicode_output.rs
│   │       │   ├── 📄 preview1_unlink_file_trailing_slashes.rs
│   │       │   ├── 📄 preview2_adapter_badfd.rs
│   │       │   ├── 📄 preview2_file_read_write.rs
│   │       │   ├── 📄 preview2_ip_name_lookup.rs
│   │       │   ├── 📄 preview2_pollable_correct.rs
│   │       │   ├── 📄 preview2_pollable_traps.rs
│   │       │   ├── 📄 preview2_random.rs
│   │       │   ├── 📄 preview2_sleep.rs
│   │       │   ├── 📄 preview2_stream_pollable_correct.rs
│   │       │   ├── 📄 preview2_stream_pollable_traps.rs
│   │       │   ├── 📄 preview2_tcp_bind.rs
│   │       │   ├── 📄 preview2_tcp_connect.rs
│   │       │   ├── 📄 preview2_tcp_sample_application.rs
│   │       │   ├── 📄 preview2_tcp_sockopts.rs
│   │       │   ├── 📄 preview2_tcp_states.rs
│   │       │   ├── 📄 preview2_tcp_streams.rs
│   │       │   ├── 📄 preview2_udp_bind.rs
│   │       │   ├── 📄 preview2_udp_connect.rs
│   │       │   ├── 📄 preview2_udp_sample_application.rs
│   │       │   ├── 📄 preview2_udp_sockopts.rs
│   │       │   ├── 📄 preview2_udp_states.rs
│   │       │   └── 📄 tls_sample_application.rs
│   │       ├── 📄 http.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 nn.rs
│   │       ├── 📁 p3
│   │       │   ├── 📄 http.rs
│   │       │   ├── 📄 mod.rs
│   │       │   └── 📄 sockets.rs
│   │       ├── 📄 preview1.rs
│   │       ├── 📄 sockets.rs
│   │       └── 📄 tls.rs
│   ├── 📁 test-util
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 component.rs
│   │       ├── 📄 component_fuzz.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 wasmtime_wast.rs
│   │       └── 📄 wast.rs
│   ├── 📁 unwinder
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   └── 📁 src
│   │       ├── 📁 arch
│   │       │   ├── 📄 aarch64.rs
│   │       │   ├── 📄 mod.rs
│   │       │   ├── 📄 riscv64.rs
│   │       │   ├── 📄 s390x.rs
│   │       │   └── 📄 x86.rs
│   │       ├── 📄 exception_table.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 stackwalk.rs
│   │       └── 📄 throw.rs
│   ├── 📁 versioned-export-macros
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       └── 📄 lib.rs
│   ├── 📁 wasi
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📁 src
│   │   │   ├── 📁 cli
│   │   │   │   ├── 📄 empty.rs
│   │   │   │   ├── 📄 file.rs
│   │   │   │   ├── 📄 locked_async.rs
│   │   │   │   ├── 📄 mem.rs
│   │   │   │   ├── 📄 stdout.rs
│   │   │   │   └── 📄 worker_thread_stdin.rs
│   │   │   ├── 📄 cli.rs
│   │   │   ├── 📄 clocks.rs
│   │   │   ├── 📄 ctx.rs
│   │   │   ├── 📄 error.rs
│   │   │   ├── 📄 filesystem.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📄 p0.rs
│   │   │   ├── 📄 p1.rs
│   │   │   ├── 📁 p2
│   │   │   │   ├── 📄 bindings.rs
│   │   │   │   ├── 📄 filesystem.rs
│   │   │   │   ├── 📁 host
│   │   │   │   │   ├── 📄 clocks.rs
│   │   │   │   │   ├── 📄 env.rs
│   │   │   │   │   ├── 📄 exit.rs
│   │   │   │   │   ├── 📁 filesystem
│   │   │   │   │   │   └── 📄 sync.rs
│   │   │   │   │   ├── 📄 filesystem.rs
│   │   │   │   │   ├── 📄 instance_network.rs
│   │   │   │   │   ├── 📄 io.rs
│   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   ├── 📄 network.rs
│   │   │   │   │   ├── 📄 random.rs
│   │   │   │   │   ├── 📄 tcp.rs
│   │   │   │   │   ├── 📄 tcp_create_socket.rs
│   │   │   │   │   ├── 📄 udp.rs
│   │   │   │   │   └── 📄 udp_create_socket.rs
│   │   │   │   ├── 📄 ip_name_lookup.rs
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 network.rs
│   │   │   │   ├── 📄 pipe.rs
│   │   │   │   ├── 📄 poll.rs
│   │   │   │   ├── 📄 stdio.rs
│   │   │   │   ├── 📄 tcp.rs
│   │   │   │   ├── 📄 udp.rs
│   │   │   │   ├── 📁 wit
│   │   │   │   │   ├── 📁 deps
│   │   │   │   │   │   ├── 📁 cli
│   │   │   │   │   │   │   ├── 📄 command.wit
│   │   │   │   │   │   │   ├── 📄 environment.wit
│   │   │   │   │   │   │   ├── 📄 exit.wit
│   │   │   │   │   │   │   ├── 📄 imports.wit
│   │   │   │   │   │   │   ├── 📄 run.wit
│   │   │   │   │   │   │   ├── 📄 stdio.wit
│   │   │   │   │   │   │   └── 📄 terminal.wit
│   │   │   │   │   │   ├── 📁 clocks
│   │   │   │   │   │   │   ├── 📄 monotonic-clock.wit
│   │   │   │   │   │   │   ├── 📄 timezone.wit
│   │   │   │   │   │   │   ├── 📄 wall-clock.wit
│   │   │   │   │   │   │   └── 📄 world.wit
│   │   │   │   │   │   ├── 📁 filesystem
│   │   │   │   │   │   │   ├── 📄 preopens.wit
│   │   │   │   │   │   │   ├── 📄 types.wit
│   │   │   │   │   │   │   └── 📄 world.wit
│   │   │   │   │   │   ├── 📁 io
│   │   │   │   │   │   │   ├── 📄 error.wit
│   │   │   │   │   │   │   ├── 📄 poll.wit
│   │   │   │   │   │   │   ├── 📄 streams.wit
│   │   │   │   │   │   │   └── 📄 world.wit
│   │   │   │   │   │   ├── 📁 random
│   │   │   │   │   │   │   ├── 📄 insecure-seed.wit
│   │   │   │   │   │   │   ├── 📄 insecure.wit
│   │   │   │   │   │   │   ├── 📄 random.wit
│   │   │   │   │   │   │   └── 📄 world.wit
│   │   │   │   │   │   └── 📁 sockets
│   │   │   │   │   │       ├── 📄 instance-network.wit
│   │   │   │   │   │       ├── 📄 ip-name-lookup.wit
│   │   │   │   │   │       ├── 📄 network.wit
│   │   │   │   │   │       ├── 📄 tcp-create-socket.wit
│   │   │   │   │   │       ├── 📄 tcp.wit
│   │   │   │   │   │       ├── 📄 udp-create-socket.wit
│   │   │   │   │   │       ├── 📄 udp.wit
│   │   │   │   │   │       └── 📄 world.wit
│   │   │   │   │   ├── 📄 test.wit
│   │   │   │   │   └── 📄 world.wit
│   │   │   │   └── 📄 write_stream.rs
│   │   │   ├── 📁 p3
│   │   │   │   ├── 📄 bindings.rs
│   │   │   │   ├── 📁 cli
│   │   │   │   │   ├── 📄 host.rs
│   │   │   │   │   └── 📄 mod.rs
│   │   │   │   ├── 📁 clocks
│   │   │   │   │   ├── 📄 host.rs
│   │   │   │   │   └── 📄 mod.rs
│   │   │   │   ├── 📁 filesystem
│   │   │   │   │   ├── 📄 host.rs
│   │   │   │   │   └── 📄 mod.rs
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📁 random
│   │   │   │   │   ├── 📄 host.rs
│   │   │   │   │   └── 📄 mod.rs
│   │   │   │   ├── 📁 sockets
│   │   │   │   │   ├── 📄 conv.rs
│   │   │   │   │   ├── 📁 host
│   │   │   │   │   │   ├── 📄 ip_name_lookup.rs
│   │   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   │   └── 📁 types
│   │   │   │   │   │       ├── 📄 mod.rs
│   │   │   │   │   │       ├── 📄 tcp.rs
│   │   │   │   │   │       └── 📄 udp.rs
│   │   │   │   │   └── 📄 mod.rs
│   │   │   │   └── 📁 wit
│   │   │   │       ├── 📁 deps
│   │   │   │       │   ├── 📁 cli
│   │   │   │       │   │   ├── 📄 command.wit
│   │   │   │       │   │   ├── 📄 environment.wit
│   │   │   │       │   │   ├── 📄 exit.wit
│   │   │   │       │   │   ├── 📄 imports.wit
│   │   │   │       │   │   ├── 📄 run.wit
│   │   │   │       │   │   ├── 📄 stdio.wit
│   │   │   │       │   │   └── 📄 terminal.wit
│   │   │   │       │   ├── 📁 clocks
│   │   │   │       │   │   ├── 📄 monotonic-clock.wit
│   │   │   │       │   │   ├── 📄 timezone.wit
│   │   │   │       │   │   ├── 📄 types.wit
│   │   │   │       │   │   ├── 📄 wall-clock.wit
│   │   │   │       │   │   └── 📄 world.wit
│   │   │   │       │   ├── 📁 filesystem
│   │   │   │       │   │   ├── 📄 preopens.wit
│   │   │   │       │   │   ├── 📄 types.wit
│   │   │   │       │   │   └── 📄 world.wit
│   │   │   │       │   ├── 📁 random
│   │   │   │       │   │   ├── 📄 insecure-seed.wit
│   │   │   │       │   │   ├── 📄 insecure.wit
│   │   │   │       │   │   ├── 📄 random.wit
│   │   │   │       │   │   └── 📄 world.wit
│   │   │   │       │   └── 📁 sockets
│   │   │   │       │       ├── 📄 ip-name-lookup.wit
│   │   │   │       │       ├── 📄 types.wit
│   │   │   │       │       └── 📄 world.wit
│   │   │   │       └── 📄 package.wit
│   │   │   ├── 📄 random.rs
│   │   │   ├── 📄 runtime.rs
│   │   │   ├── 📁 sockets
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 tcp.rs
│   │   │   │   ├── 📄 udp.rs
│   │   │   │   └── 📄 util.rs
│   │   │   └── 📄 view.rs
│   │   ├── 📁 tests
│   │   │   ├── 📁 all
│   │   │   │   ├── 📄 main.rs
│   │   │   │   ├── 📄 p1.rs
│   │   │   │   ├── 📁 p2
│   │   │   │   │   ├── 📄 api.rs
│   │   │   │   │   ├── 📄 async_.rs
│   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   └── 📄 sync.rs
│   │   │   │   ├── 📁 p3
│   │   │   │   │   └── 📄 mod.rs
│   │   │   │   └── 📄 store.rs
│   │   │   └── 📄 process_stdin.rs
│   │   └── 📁 witx
│   │       ├── 📁 p0
│   │       │   ├── 📄 typenames.witx
│   │       │   └── 📄 wasi_unstable.witx
│   │       └── 📁 p1
│   │           ├── 📄 typenames.witx
│   │           └── 📄 wasi_snapshot_preview1.witx
│   ├── 📁 wasi-common
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📁 src
│   │   │   ├── 📄 clocks.rs
│   │   │   ├── 📄 ctx.rs
│   │   │   ├── 📄 dir.rs
│   │   │   ├── 📄 error.rs
│   │   │   ├── 📄 file.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📄 pipe.rs
│   │   │   ├── 📄 random.rs
│   │   │   ├── 📁 sched
│   │   │   │   └── 📄 subscription.rs
│   │   │   ├── 📄 sched.rs
│   │   │   ├── 📁 snapshots
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 preview_0.rs
│   │   │   │   ├── 📁 preview_1
│   │   │   │   │   └── 📄 error.rs
│   │   │   │   └── 📄 preview_1.rs
│   │   │   ├── 📄 string_array.rs
│   │   │   ├── 📁 sync
│   │   │   │   ├── 📄 clocks.rs
│   │   │   │   ├── 📄 dir.rs
│   │   │   │   ├── 📄 file.rs
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 net.rs
│   │   │   │   ├── 📁 sched
│   │   │   │   │   ├── 📄 unix.rs
│   │   │   │   │   └── 📄 windows.rs
│   │   │   │   ├── 📄 sched.rs
│   │   │   │   └── 📄 stdio.rs
│   │   │   ├── 📄 table.rs
│   │   │   └── 📁 tokio
│   │   │       ├── 📄 dir.rs
│   │   │       ├── 📄 file.rs
│   │   │       ├── 📄 mod.rs
│   │   │       ├── 📄 net.rs
│   │   │       ├── 📁 sched
│   │   │       │   ├── 📄 unix.rs
│   │   │       │   └── 📄 windows.rs
│   │   │       ├── 📄 sched.rs
│   │   │       └── 📄 stdio.rs
│   │   ├── 📁 tests
│   │   │   └── 📁 all
│   │   │       ├── 📄 async_.rs
│   │   │       ├── 📄 main.rs
│   │   │       └── 📄 sync.rs
│   │   └── 📁 witx
│   │       ├── 📁 preview0
│   │       │   ├── 📄 typenames.witx
│   │       │   └── 📄 wasi_unstable.witx
│   │       └── 📁 preview1
│   │           ├── 📄 typenames.witx
│   │           └── 📄 wasi_snapshot_preview1.witx
│   ├── 📁 wasi-config
│   │   ├── 📄 Cargo.toml
│   │   ├── 📁 src
│   │   │   └── 📄 lib.rs
│   │   ├── 📁 tests
│   │   │   └── 📄 main.rs
│   │   └── 📁 wit
│   │       ├── 📁 deps
│   │       │   └── 📁 config
│   │       │       ├── 📄 store.wit
│   │       │       └── 📄 world.wit
│   │       └── 📄 world.wit
│   ├── 📁 wasi-http
│   │   ├── 📄 Cargo.toml
│   │   ├── 📁 src
│   │   │   ├── 📄 bindings.rs
│   │   │   ├── 📄 body.rs
│   │   │   ├── 📄 error.rs
│   │   │   ├── 📄 http_impl.rs
│   │   │   ├── 📄 io.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📁 p3
│   │   │   │   ├── 📄 bindings.rs
│   │   │   │   ├── 📄 body.rs
│   │   │   │   ├── 📄 conv.rs
│   │   │   │   ├── 📁 host
│   │   │   │   │   ├── 📄 handler.rs
│   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   └── 📄 types.rs
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 proxy.rs
│   │   │   │   ├── 📄 request.rs
│   │   │   │   ├── 📄 response.rs
│   │   │   │   └── 📁 wit
│   │   │   │       ├── 📁 deps
│   │   │   │       │   ├── 📁 cli
│   │   │   │       │   │   ├── 📄 command.wit
│   │   │   │       │   │   ├── 📄 environment.wit
│   │   │   │       │   │   ├── 📄 exit.wit
│   │   │   │       │   │   ├── 📄 imports.wit
│   │   │   │       │   │   ├── 📄 run.wit
│   │   │   │       │   │   ├── 📄 stdio.wit
│   │   │   │       │   │   └── 📄 terminal.wit
│   │   │   │       │   ├── 📁 clocks
│   │   │   │       │   │   ├── 📄 monotonic-clock.wit
│   │   │   │       │   │   ├── 📄 timezone.wit
│   │   │   │       │   │   ├── 📄 types.wit
│   │   │   │       │   │   ├── 📄 wall-clock.wit
│   │   │   │       │   │   └── 📄 world.wit
│   │   │   │       │   ├── 📁 filesystem
│   │   │   │       │   │   ├── 📄 preopens.wit
│   │   │   │       │   │   ├── 📄 types.wit
│   │   │   │       │   │   └── 📄 world.wit
│   │   │   │       │   ├── 📁 http
│   │   │   │       │   │   ├── 📄 handler.wit
│   │   │   │       │   │   ├── 📄 proxy.wit
│   │   │   │       │   │   └── 📄 types.wit
│   │   │   │       │   ├── 📁 random
│   │   │   │       │   │   ├── 📄 insecure-seed.wit
│   │   │   │       │   │   ├── 📄 insecure.wit
│   │   │   │       │   │   ├── 📄 random.wit
│   │   │   │       │   │   └── 📄 world.wit
│   │   │   │       │   └── 📁 sockets
│   │   │   │       │       ├── 📄 ip-name-lookup.wit
│   │   │   │       │       ├── 📄 types.wit
│   │   │   │       │       └── 📄 world.wit
│   │   │   │       └── 📄 world.wit
│   │   │   ├── 📄 types.rs
│   │   │   └── 📄 types_impl.rs
│   │   ├── 📁 tests
│   │   │   └── 📁 all
│   │   │       ├── 📄 http_server.rs
│   │   │       ├── 📄 main.rs
│   │   │       ├── 📁 p2
│   │   │       │   ├── 📄 async_.rs
│   │   │       │   └── 📄 sync.rs
│   │   │       ├── 📄 p2.rs
│   │   │       └── 📁 p3
│   │   │           └── 📄 mod.rs
│   │   └── 📁 wit
│   │       ├── 📁 deps
│   │       │   ├── 📁 cli
│   │       │   │   ├── 📄 command.wit
│   │       │   │   ├── 📄 environment.wit
│   │       │   │   ├── 📄 exit.wit
│   │       │   │   ├── 📄 imports.wit
│   │       │   │   ├── 📄 run.wit
│   │       │   │   ├── 📄 stdio.wit
│   │       │   │   └── 📄 terminal.wit
│   │       │   ├── 📁 clocks
│   │       │   │   ├── 📄 monotonic-clock.wit
│   │       │   │   ├── 📄 timezone.wit
│   │       │   │   ├── 📄 wall-clock.wit
│   │       │   │   └── 📄 world.wit
│   │       │   ├── 📁 filesystem
│   │       │   │   ├── 📄 preopens.wit
│   │       │   │   ├── 📄 types.wit
│   │       │   │   └── 📄 world.wit
│   │       │   ├── 📁 http
│   │       │   │   ├── 📄 handler.wit
│   │       │   │   ├── 📄 proxy.wit
│   │       │   │   └── 📄 types.wit
│   │       │   ├── 📁 io
│   │       │   │   ├── 📄 error.wit
│   │       │   │   ├── 📄 poll.wit
│   │       │   │   ├── 📄 streams.wit
│   │       │   │   └── 📄 world.wit
│   │       │   ├── 📁 random
│   │       │   │   ├── 📄 insecure-seed.wit
│   │       │   │   ├── 📄 insecure.wit
│   │       │   │   ├── 📄 random.wit
│   │       │   │   └── 📄 world.wit
│   │       │   └── 📁 sockets
│   │       │       ├── 📄 instance-network.wit
│   │       │       ├── 📄 ip-name-lookup.wit
│   │       │       ├── 📄 network.wit
│   │       │       ├── 📄 tcp-create-socket.wit
│   │       │       ├── 📄 tcp.wit
│   │       │       ├── 📄 udp-create-socket.wit
│   │       │       ├── 📄 udp.wit
│   │       │       └── 📄 world.wit
│   │       └── 📄 world.wit
│   ├── 📁 wasi-io
│   │   ├── 📄 Cargo.toml
│   │   ├── 📁 src
│   │   │   ├── 📄 bindings.rs
│   │   │   ├── 📄 impls.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📄 poll.rs
│   │   │   └── 📄 streams.rs
│   │   └── 📁 wit
│   │       ├── 📁 deps
│   │       │   └── 📁 io
│   │       │       ├── 📄 error.wit
│   │       │       ├── 📄 poll.wit
│   │       │       ├── 📄 streams.wit
│   │       │       └── 📄 world.wit
│   │       └── 📄 world.wit
│   ├── 📁 wasi-keyvalue
│   │   ├── 📄 Cargo.toml
│   │   ├── 📁 src
│   │   │   └── 📄 lib.rs
│   │   ├── 📁 tests
│   │   │   └── 📄 main.rs
│   │   └── 📁 wit
│   │       ├── 📁 deps
│   │       │   └── 📁 keyvalue
│   │       │       ├── 📄 atomic.wit
│   │       │       ├── 📄 batch.wit
│   │       │       ├── 📄 store.wit
│   │       │       ├── 📄 watch.wit
│   │       │       └── 📄 world.wit
│   │       └── 📄 world.wit
│   ├── 📁 wasi-nn
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   ├── 📁 examples
│   │   │   ├── 📄 README.md
│   │   │   ├── 📁 classification-component-onnx
│   │   │   │   ├── 📄 Cargo.lock
│   │   │   │   ├── 📄 Cargo.toml
│   │   │   │   ├── 📄 README.md
│   │   │   │   ├── 📁 fixture
│   │   │   │   │   ├── 📁 images
│   │   │   │   │   │   └── 📄 dog.jpg
│   │   │   │   │   ├── 📁 labels
│   │   │   │   │   │   └── 📄 squeezenet1.1-7.txt
│   │   │   │   │   └── 📁 models
│   │   │   │   │       └── 📄 squeezenet1.1-7.onnx
│   │   │   │   └── 📁 src
│   │   │   │       └── 📄 main.rs
│   │   │   ├── 📁 classification-example
│   │   │   │   ├── 📄 Cargo.lock
│   │   │   │   ├── 📄 Cargo.toml
│   │   │   │   ├── 📄 README.md
│   │   │   │   └── 📁 src
│   │   │   │       └── 📄 main.rs
│   │   │   ├── 📁 classification-example-named
│   │   │   │   ├── 📄 Cargo.lock
│   │   │   │   ├── 📄 Cargo.toml
│   │   │   │   ├── 📄 README.md
│   │   │   │   └── 📁 src
│   │   │   │       └── 📄 main.rs
│   │   │   ├── 📁 classification-example-pytorch
│   │   │   │   ├── 📄 Cargo.lock
│   │   │   │   ├── 📄 Cargo.toml
│   │   │   │   ├── 📄 README.md
│   │   │   │   ├── 📁 fixture
│   │   │   │   │   └── 📄 kitten.png
│   │   │   │   └── 📁 src
│   │   │   │       └── 📄 main.rs
│   │   │   └── 📁 classification-example-winml
│   │   │       ├── 📄 Cargo.lock
│   │   │       ├── 📄 Cargo.toml
│   │   │       ├── 📄 README.md
│   │   │       ├── 📁 fixture
│   │   │       │   ├── 📄 README.md
│   │   │       │   ├── 📄 kitten.png
│   │   │       │   ├── 📄 mobilenet.onnx
│   │   │       │   └── 📄 synset.txt
│   │   │       └── 📁 src
│   │   │           └── 📄 main.rs
│   │   ├── 📁 src
│   │   │   ├── 📁 backend
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 onnx.rs
│   │   │   │   ├── 📄 openvino.rs
│   │   │   │   ├── 📄 pytorch.rs
│   │   │   │   └── 📄 winml.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📁 registry
│   │   │   │   ├── 📄 in_memory.rs
│   │   │   │   └── 📄 mod.rs
│   │   │   ├── 📄 wit.rs
│   │   │   └── 📄 witx.rs
│   │   ├── 📁 tests
│   │   │   ├── 📁 check
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 onnx.rs
│   │   │   │   ├── 📄 openvino.rs
│   │   │   │   ├── 📄 pytorch.rs
│   │   │   │   └── 📄 winml.rs
│   │   │   ├── 📁 exec
│   │   │   │   ├── 📄 mod.rs
│   │   │   │   ├── 📄 wit.rs
│   │   │   │   └── 📄 witx.rs
│   │   │   ├── 📁 fixtures
│   │   │   │   ├── 📄 000000062808.rgb
│   │   │   │   ├── 📄 README.md
│   │   │   │   └── 📄 kitten.tensor
│   │   │   └── 📄 test-programs.rs
│   │   ├── 📁 wit
│   │   │   └── 📄 wasi-nn.wit
│   │   └── 📁 witx
│   │       └── 📄 wasi-nn.witx
│   ├── 📁 wasi-preview1-component-adapter
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   ├── 📁 byte-array-literals
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 README.md
│   │   │   └── 📁 src
│   │   │       └── 📄 lib.rs
│   │   ├── 📁 provider
│   │   │   ├── 📄 Cargo.toml.in
│   │   │   ├── 📄 README.md
│   │   │   ├── 📁 artefacts
│   │   │   └── 📁 src
│   │   │       └── 📄 lib.rs
│   │   ├── 📁 src
│   │   │   ├── 📄 descriptors.rs
│   │   │   ├── 📄 lib.rs
│   │   │   └── 📄 macros.rs
│   │   └── 📁 verify
│   │       ├── 📄 Cargo.toml
│   │       ├── 📄 README.md
│   │       └── 📁 src
│   │           └── 📄 main.rs
│   ├── 📁 wasi-threads
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 README.md
│   │   └── 📁 src
│   │       └── 📄 lib.rs
│   ├── 📁 wasi-tls
│   │   ├── 📄 Cargo.toml
│   │   ├── 📁 src
│   │   │   ├── 📄 bindings.rs
│   │   │   ├── 📄 host.rs
│   │   │   ├── 📄 io.rs
│   │   │   ├── 📄 lib.rs
│   │   │   └── 📄 rustls.rs
│   │   ├── 📁 tests
│   │   │   └── 📄 main.rs
│   │   └── 📁 wit
│   │       ├── 📁 deps
│   │       │   ├── 📁 io
│   │       │   │   ├── 📄 error.wit
│   │       │   │   ├── 📄 poll.wit
│   │       │   │   ├── 📄 streams.wit
│   │       │   │   └── 📄 world.wit
│   │       │   └── 📁 tls
│   │       │       ├── 📄 types.wit
│   │       │       └── 📄 world.wit
│   │       └── 📄 world.wit
│   ├── 📁 wasi-tls-nativetls
│   │   ├── 📄 Cargo.toml
│   │   ├── 📁 src
│   │   │   └── 📄 lib.rs
│   │   └── 📁 tests
│   │       └── 📄 main.rs
│   ├── 📁 wasmtime
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📄 build.rs
│   │   ├── 📁 proptest-regressions
│   │   │   └── 📁 runtime
│   │   │       └── 📁 vm
│   │   │           └── 📁 instance
│   │   │               └── 📁 allocator
│   │   │                   └── 📁 pooling
│   │   │                       └── 📄 memory_pool.txt
│   │   ├── 📁 src
│   │   │   ├── 📁 compile
│   │   │   │   ├── 📄 call_graph.rs
│   │   │   │   ├── 📄 code_builder.rs
│   │   │   │   ├── 📄 runtime.rs
│   │   │   │   ├── 📄 scc.rs
│   │   │   │   └── 📄 stratify.rs
│   │   │   ├── 📄 compile.rs
│   │   │   ├── 📄 config.rs
│   │   │   ├── 📁 engine
│   │   │   │   └── 📄 serialization.rs
│   │   │   ├── 📄 engine.rs
│   │   │   ├── 📄 lib.rs
│   │   │   ├── 📁 profiling_agent
│   │   │   │   ├── 📄 jitdump.rs
│   │   │   │   ├── 📄 perfmap.rs
│   │   │   │   ├── 📄 pulley.rs
│   │   │   │   └── 📄 vtune.rs
│   │   │   ├── 📄 profiling_agent.rs
│   │   │   ├── 📁 runtime
│   │   │   │   ├── 📄 code.rs
│   │   │   │   ├── 📄 code_memory.rs
│   │   │   │   ├── 📁 component
│   │   │   │   │   ├── 📁 bindgen_examples
│   │   │   │   │   │   ├── 📄 _0_hello_world.rs
│   │   │   │   │   │   ├── 📄 _1_world_imports.rs
│   │   │   │   │   │   ├── 📄 _2_world_exports.rs
│   │   │   │   │   │   ├── 📄 _3_interface_imports.rs
│   │   │   │   │   │   ├── 📄 _4_imported_resources.rs
│   │   │   │   │   │   ├── 📄 _5_all_world_export_kinds.rs
│   │   │   │   │   │   ├── 📄 _6_exported_resources.rs
│   │   │   │   │   │   ├── 📄 _7_async.rs
│   │   │   │   │   │   ├── 📄 _8_store_in_imports.rs
│   │   │   │   │   │   └── 📄 mod.rs
│   │   │   │   │   ├── 📄 component.rs
│   │   │   │   │   ├── 📁 concurrent
│   │   │   │   │   │   ├── 📄 abort.rs
│   │   │   │   │   │   ├── 📄 error_contexts.rs
│   │   │   │   │   │   ├── 📁 futures_and_streams
│   │   │   │   │   │   │   └── 📄 buffers.rs
│   │   │   │   │   │   ├── 📄 futures_and_streams.rs
│   │   │   │   │   │   ├── 📄 table.rs
│   │   │   │   │   │   └── 📄 tls.rs
│   │   │   │   │   ├── 📄 concurrent.rs
│   │   │   │   │   ├── 📄 concurrent_disabled.rs
│   │   │   │   │   ├── 📁 func
│   │   │   │   │   │   ├── 📄 host.rs
│   │   │   │   │   │   ├── 📄 options.rs
│   │   │   │   │   │   └── 📄 typed.rs
│   │   │   │   │   ├── 📄 func.rs
│   │   │   │   │   ├── 📄 has_data.rs
│   │   │   │   │   ├── 📄 instance.rs
│   │   │   │   │   ├── 📄 linker.rs
│   │   │   │   │   ├── 📄 matching.rs
│   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   ├── 📄 resource_table.rs
│   │   │   │   │   ├── 📄 resources.rs
│   │   │   │   │   ├── 📄 storage.rs
│   │   │   │   │   ├── 📄 store.rs
│   │   │   │   │   ├── 📄 types.rs
│   │   │   │   │   └── 📄 values.rs
│   │   │   │   ├── 📄 coredump.rs
│   │   │   │   ├── 📄 debug.rs
│   │   │   │   ├── 📄 exception.rs
│   │   │   │   ├── 📁 externals
│   │   │   │   │   ├── 📄 global.rs
│   │   │   │   │   ├── 📄 table.rs
│   │   │   │   │   └── 📄 tag.rs
│   │   │   │   ├── 📄 externals.rs
│   │   │   │   ├── 📄 fiber.rs
│   │   │   │   ├── 📁 func
│   │   │   │   │   └── 📄 typed.rs
│   │   │   │   ├── 📄 func.rs
│   │   │   │   ├── 📁 gc
│   │   │   │   │   ├── 📁 disabled
│   │   │   │   │   │   ├── 📄 anyref.rs
│   │   │   │   │   │   ├── 📄 arrayref.rs
│   │   │   │   │   │   ├── 📄 eqref.rs
│   │   │   │   │   │   ├── 📄 exnref.rs
│   │   │   │   │   │   ├── 📄 externref.rs
│   │   │   │   │   │   ├── 📄 i31.rs
│   │   │   │   │   │   ├── 📄 rooting.rs
│   │   │   │   │   │   └── 📄 structref.rs
│   │   │   │   │   ├── 📄 disabled.rs
│   │   │   │   │   ├── 📁 enabled
│   │   │   │   │   │   ├── 📄 anyref.rs
│   │   │   │   │   │   ├── 📄 arrayref.rs
│   │   │   │   │   │   ├── 📄 eqref.rs
│   │   │   │   │   │   ├── 📄 exnref.rs
│   │   │   │   │   │   ├── 📄 externref.rs
│   │   │   │   │   │   ├── 📄 i31.rs
│   │   │   │   │   │   ├── 📄 rooting.rs
│   │   │   │   │   │   └── 📄 structref.rs
│   │   │   │   │   ├── 📄 enabled.rs
│   │   │   │   │   ├── 📄 noextern.rs
│   │   │   │   │   └── 📄 none_ref.rs
│   │   │   │   ├── 📄 gc.rs
│   │   │   │   ├── 📄 instance.rs
│   │   │   │   ├── 📄 instantiate.rs
│   │   │   │   ├── 📄 limits.rs
│   │   │   │   ├── 📄 linker.rs
│   │   │   │   ├── 📄 memory.rs
│   │   │   │   ├── 📁 module
│   │   │   │   │   └── 📄 registry.rs
│   │   │   │   ├── 📄 module.rs
│   │   │   │   ├── 📄 profiling.rs
│   │   │   │   ├── 📄 resources.rs
│   │   │   │   ├── 📄 stack.rs
│   │   │   │   ├── 📁 store
│   │   │   │   │   ├── 📄 async_.rs
│   │   │   │   │   ├── 📄 context.rs
│   │   │   │   │   ├── 📄 data.rs
│   │   │   │   │   ├── 📄 func_refs.rs
│   │   │   │   │   ├── 📄 gc.rs
│   │   │   │   │   └── 📄 token.rs
│   │   │   │   ├── 📄 store.rs
│   │   │   │   ├── 📁 trampoline
│   │   │   │   │   ├── 📄 func.rs
│   │   │   │   │   ├── 📄 global.rs
│   │   │   │   │   ├── 📄 memory.rs
│   │   │   │   │   ├── 📄 table.rs
│   │   │   │   │   └── 📄 tag.rs
│   │   │   │   ├── 📄 trampoline.rs
│   │   │   │   ├── 📄 trap.rs
│   │   │   │   ├── 📄 type_registry.rs
│   │   │   │   ├── 📁 types
│   │   │   │   │   └── 📄 matching.rs
│   │   │   │   ├── 📄 types.rs
│   │   │   │   ├── 📄 uninhabited.rs
│   │   │   │   ├── 📄 unix.rs
│   │   │   │   ├── 📄 v128.rs
│   │   │   │   ├── 📄 values.rs
│   │   │   │   ├── 📁 vm
│   │   │   │   │   ├── 📄 always_mut.rs
│   │   │   │   │   ├── 📄 async_yield.rs
│   │   │   │   │   ├── 📄 byte_count.rs
│   │   │   │   │   ├── 📁 component
│   │   │   │   │   │   ├── 📄 handle_table.rs
│   │   │   │   │   │   ├── 📄 libcalls.rs
│   │   │   │   │   │   └── 📄 resources.rs
│   │   │   │   │   ├── 📄 component.rs
│   │   │   │   │   ├── 📄 const_expr.rs
│   │   │   │   │   ├── 📄 cow.rs
│   │   │   │   │   ├── 📄 cow_disabled.rs
│   │   │   │   │   ├── 📄 debug_builtins.rs
│   │   │   │   │   ├── 📄 export.rs
│   │   │   │   │   ├── 📁 gc
│   │   │   │   │   │   ├── 📄 disabled.rs
│   │   │   │   │   │   ├── 📁 enabled
│   │   │   │   │   │   │   ├── 📄 arrayref.rs
│   │   │   │   │   │   │   ├── 📄 data.rs
│   │   │   │   │   │   │   ├── 📄 drc.rs
│   │   │   │   │   │   │   ├── 📄 exnref.rs
│   │   │   │   │   │   │   ├── 📄 externref.rs
│   │   │   │   │   │   │   ├── 📄 free_list.rs
│   │   │   │   │   │   │   ├── 📄 null.rs
│   │   │   │   │   │   │   └── 📄 structref.rs
│   │   │   │   │   │   ├── 📄 enabled.rs
│   │   │   │   │   │   ├── 📄 func_ref.rs
│   │   │   │   │   │   ├── 📄 gc_ref.rs
│   │   │   │   │   │   ├── 📄 gc_runtime.rs
│   │   │   │   │   │   ├── 📄 host_data.rs
│   │   │   │   │   │   └── 📄 i31.rs
│   │   │   │   │   ├── 📄 gc.rs
│   │   │   │   │   ├── 📄 helpers.c
│   │   │   │   │   ├── 📄 imports.rs
│   │   │   │   │   ├── 📁 instance
│   │   │   │   │   │   ├── 📁 allocator
│   │   │   │   │   │   │   ├── 📄 on_demand.rs
│   │   │   │   │   │   │   ├── 📁 pooling
│   │   │   │   │   │   │   │   ├── 📄 decommit_queue.rs
│   │   │   │   │   │   │   │   ├── 📄 gc_heap_pool.rs
│   │   │   │   │   │   │   │   ├── 📄 generic_stack_pool.rs
│   │   │   │   │   │   │   │   ├── 📄 index_allocator.rs
│   │   │   │   │   │   │   │   ├── 📄 memory_pool.rs
│   │   │   │   │   │   │   │   ├── 📄 metrics.rs
│   │   │   │   │   │   │   │   ├── 📄 table_pool.rs
│   │   │   │   │   │   │   │   └── 📄 unix_stack_pool.rs
│   │   │   │   │   │   │   └── 📄 pooling.rs
│   │   │   │   │   │   └── 📄 allocator.rs
│   │   │   │   │   ├── 📄 instance.rs
│   │   │   │   │   ├── 📄 interpreter.rs
│   │   │   │   │   ├── 📄 interpreter_disabled.rs
│   │   │   │   │   ├── 📄 libcalls.rs
│   │   │   │   │   ├── 📁 memory
│   │   │   │   │   │   ├── 📄 malloc.rs
│   │   │   │   │   │   ├── 📄 mmap.rs
│   │   │   │   │   │   ├── 📄 shared_memory.rs
│   │   │   │   │   │   ├── 📄 shared_memory_disabled.rs
│   │   │   │   │   │   └── 📄 static_.rs
│   │   │   │   │   ├── 📄 memory.rs
│   │   │   │   │   ├── 📄 mmap.rs
│   │   │   │   │   ├── 📄 mmap_vec.rs
│   │   │   │   │   ├── 📄 module_id.rs
│   │   │   │   │   ├── 📁 mpk
│   │   │   │   │   │   ├── 📄 disabled.rs
│   │   │   │   │   │   ├── 📄 enabled.rs
│   │   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   │   ├── 📄 pkru.rs
│   │   │   │   │   │   └── 📄 sys.rs
│   │   │   │   │   ├── 📄 pagemap_disabled.rs
│   │   │   │   │   ├── 📄 parking_spot.rs
│   │   │   │   │   ├── 📄 provenance.rs
│   │   │   │   │   ├── 📄 send_sync_ptr.rs
│   │   │   │   │   ├── 📄 send_sync_unsafe_cell.rs
│   │   │   │   │   ├── 📁 stack_switching
│   │   │   │   │   │   ├── 📁 stack
│   │   │   │   │   │   │   ├── 📄 dummy.rs
│   │   │   │   │   │   │   ├── 📁 unix
│   │   │   │   │   │   │   │   └── 📄 x86_64.rs
│   │   │   │   │   │   │   └── 📄 unix.rs
│   │   │   │   │   │   └── 📄 stack.rs
│   │   │   │   │   ├── 📄 stack_switching.rs
│   │   │   │   │   ├── 📄 store_box.rs
│   │   │   │   │   ├── 📁 sys
│   │   │   │   │   │   ├── 📁 custom
│   │   │   │   │   │   │   ├── 📄 capi.rs
│   │   │   │   │   │   │   ├── 📄 mmap.rs
│   │   │   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   │   │   ├── 📄 traphandlers.rs
│   │   │   │   │   │   │   ├── 📄 unwind.rs
│   │   │   │   │   │   │   └── 📄 vm.rs
│   │   │   │   │   │   ├── 📁 miri
│   │   │   │   │   │   │   ├── 📄 mmap.rs
│   │   │   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   │   │   ├── 📄 traphandlers.rs
│   │   │   │   │   │   │   ├── 📄 unwind.rs
│   │   │   │   │   │   │   └── 📄 vm.rs
│   │   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   │   ├── 📁 unix
│   │   │   │   │   │   │   ├── 📄 machports.rs
│   │   │   │   │   │   │   ├── 📄 mmap.rs
│   │   │   │   │   │   │   ├── 📄 mod.rs
│   │   │   │   │   │   │   ├── 📄 pagemap.rs
│   │   │   │   │   │   │   ├── 📄 signals.rs
│   │   │   │   │   │   │   ├── 📄 traphandlers.rs
│   │   │   │   │   │   │   ├── 📄 unwind.rs
│   │   │   │   │   │   │   └── 📄 vm.rs
│   │   │   │   │   │   └── 📁 windows
│   │   │   │   │   │       ├── 📄 mmap.rs
│   │   │   │   │   │       ├── 📄 mod.rs
│   │   │   │   │   │       ├── 📄 traphandlers.rs
│   │   │   │   │   │       ├── 📄 unwind64.rs
│   │   │   │   │   │       ├── 📄 vectored_exceptions.rs
│   │   │   │   │   │       └── 📄 vm.rs
│   │   │   │   │   ├── 📄 table.rs
│   │   │   │   │   ├── 📄 throw.rs
│   │   │   │   │   ├── 📁 traphandlers
│   │   │   │   │   │   ├── 📄 backtrace.rs
│   │   │   │   │   │   ├── 📄 coredump_disabled.rs
│   │   │   │   │   │   ├── 📄 coredump_enabled.rs
│   │   │   │   │   │   └── 📄 signals.rs
│   │   │   │   │   ├── 📄 traphandlers.rs
│   │   │   │   │   ├── 📁 vmcontext
│   │   │   │   │   │   └── 📄 vm_host_func_context.rs
│   │   │   │   │   └── 📄 vmcontext.rs
│   │   │   │   ├── 📄 vm.rs
│   │   │   │   ├── 📁 wave
│   │   │   │   │   ├── 📄 component.rs
│   │   │   │   │   └── 📄 core.rs
│   │   │   │   ├── 📄 wave.rs
│   │   │   │   └── 📄 windows.rs
│   │   │   ├── 📄 runtime.rs
│   │   │   ├── 📄 sync_nostd.rs
│   │   │   └── 📄 sync_std.rs
│   │   └── 📁 tests
│   │       ├── 📄 custom_signal_handler.rs
│   │       ├── 📄 engine_across_forks.rs
│   │       ├── 📄 host_segfault.rs
│   │       ├── 📄 pooling_alloc_near_oom.rs
│   │       └── 📄 unload-engine.rs
│   ├── 📁 wast
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   └── 📁 src
│   │       ├── 📄 component.rs
│   │       ├── 📄 core.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 spectest.rs
│   │       └── 📄 wast.rs
│   ├── 📁 wiggle
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   ├── 📄 README.md
│   │   ├── 📁 generate
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 LICENSE
│   │   │   ├── 📄 README.md
│   │   │   └── 📁 src
│   │   │       ├── 📄 codegen_settings.rs
│   │   │       ├── 📄 config.rs
│   │   │       ├── 📄 funcs.rs
│   │   │       ├── 📄 lib.rs
│   │   │       ├── 📄 lifetimes.rs
│   │   │       ├── 📄 module_trait.rs
│   │   │       ├── 📄 names.rs
│   │   │       ├── 📁 types
│   │   │       │   ├── 📄 error.rs
│   │   │       │   ├── 📄 flags.rs
│   │   │       │   ├── 📄 handle.rs
│   │   │       │   ├── 📄 mod.rs
│   │   │       │   ├── 📄 record.rs
│   │   │       │   └── 📄 variant.rs
│   │   │       └── 📄 wasmtime.rs
│   │   ├── 📁 macro
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 LICENSE
│   │   │   ├── 📄 build.rs
│   │   │   └── 📁 src
│   │   │       └── 📄 lib.rs
│   │   ├── 📁 src
│   │   │   ├── 📄 error.rs
│   │   │   ├── 📄 guest_type.rs
│   │   │   ├── 📄 lib.rs
│   │   │   └── 📄 region.rs
│   │   ├── 📁 test-helpers
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 LICENSE
│   │   │   ├── 📁 examples
│   │   │   │   └── 📄 tracing.rs
│   │   │   └── 📁 src
│   │   │       └── 📄 lib.rs
│   │   └── 📁 tests
│   │       ├── 📄 atoms.rs
│   │       ├── 📄 atoms.witx
│   │       ├── 📄 atoms_async.rs
│   │       ├── 📄 errno.witx
│   │       ├── 📄 errors.rs
│   │       ├── 📄 excuse.witx
│   │       ├── 📄 flags.rs
│   │       ├── 📄 flags.witx
│   │       ├── 📄 handles.rs
│   │       ├── 📄 handles.witx
│   │       ├── 📄 ints.rs
│   │       ├── 📄 ints.witx
│   │       ├── 📄 keywords.rs
│   │       ├── 📄 keywords_union.witx
│   │       ├── 📄 lists.rs
│   │       ├── 📄 lists.witx
│   │       ├── 📄 pointers.rs
│   │       ├── 📄 pointers.witx
│   │       ├── 📄 records.rs
│   │       ├── 📄 records.witx
│   │       ├── 📄 strings.rs
│   │       ├── 📄 strings.witx
│   │       ├── 📄 tracing.rs
│   │       ├── 📄 typenames.witx
│   │       ├── 📄 variant.rs
│   │       ├── 📄 variant.witx
│   │       ├── 📄 wasi.rs
│   │       ├── 📄 wasi.witx
│   │       ├── 📄 wasmtime_async.rs
│   │       ├── 📄 wasmtime_integration.rs
│   │       └── 📄 wasmtime_sync.rs
│   ├── 📁 winch
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 LICENSE
│   │   └── 📁 src
│   │       ├── 📄 builder.rs
│   │       ├── 📄 compiler.rs
│   │       └── 📄 lib.rs
│   ├── 📁 wit-bindgen
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 config.rs
│   │       ├── 📄 lib.rs
│   │       ├── 📄 rust.rs
│   │       ├── 📄 source.rs
│   │       └── 📄 types.rs
│   └── 📁 wmemcheck
│       ├── 📄 Cargo.toml
│       └── 📁 src
│           └── 📄 lib.rs
├── 📄 deny.toml
├── 📁 docs
│   ├── 📄 SUMMARY.md
│   ├── 📄 WASI-api.md
│   ├── 📄 WASI-capabilities.md
│   ├── 📄 WASI-documents.md
│   ├── 📄 WASI-intro.md
│   ├── 📄 WASI-overview.md
│   ├── 📄 WASI-tutorial.md
│   ├── 📁 assemblyscript-hello-world
│   │   ├── 📄 README.md
│   │   ├── 📄 asconfig.json
│   │   ├── 📄 package.json
│   │   ├── 📄 tsconfig.json
│   │   └── 📄 wasi-hello.ts
│   ├── 📁 assemblyscript_demo
│   │   ├── 📄 README.md
│   │   ├── 📄 asconfig.json
│   │   ├── 📄 package.json
│   │   ├── 📄 tsconfig.json
│   │   └── 📄 wasi-demo.ts
│   ├── 📁 assets
│   │   ├── 📄 perf-annotate-fib.png
│   │   ├── 📄 perf-report-fib.png
│   │   └── 📄 vtune-gui-fib.png
│   ├── 📄 book.toml
│   ├── 📄 cli-cache.md
│   ├── 📄 cli-install.md
│   ├── 📄 cli-logging.md
│   ├── 📄 cli-options.md
│   ├── 📄 cli.md
│   ├── 📄 contributing-architecture.md
│   ├── 📄 contributing-building.md
│   ├── 📄 contributing-ci.md
│   ├── 📄 contributing-coc.md
│   ├── 📄 contributing-code-review.md
│   ├── 📄 contributing-coding-guidelines.md
│   ├── 📄 contributing-conditional-compilation.md
│   ├── 📄 contributing-cross-compiling.md
│   ├── 📄 contributing-development-process.md
│   ├── 📄 contributing-fuzzing.md
│   ├── 📄 contributing-governance.md
│   ├── 📄 contributing-implementing-wasm-proposals.md
│   ├── 📄 contributing-maintainer-guidelines.md
│   ├── 📄 contributing-reducing-test-cases.md
│   ├── 📄 contributing-release-process.md
│   ├── 📄 contributing-rfc-process.md
│   ├── 📄 contributing-testing.md
│   ├── 📄 contributing.md
│   ├── 📁 css
│   │   └── 📄 langtabs.css
│   ├── 📄 examples-anyref.md
│   ├── 📄 examples-async.md
│   ├── 📄 examples-core-dumps.md
│   ├── 📄 examples-coredump.md
│   ├── 📄 examples-debugging-core-dumps.md
│   ├── 📄 examples-debugging-native-debugger.md
│   ├── 📄 examples-debugging.md
│   ├── 📄 examples-deterministic-wasm-execution.md
│   ├── 📄 examples-externref.md
│   ├── 📄 examples-fast-compilation.md
│   ├── 📄 examples-fast-execution.md
│   ├── 📄 examples-fast-instantiation.md
│   ├── 📄 examples-gcd.md
│   ├── 📄 examples-hello-world.md
│   ├── 📄 examples-interrupting-wasm.md
│   ├── 📄 examples-linking.md
│   ├── 📄 examples-memory.md
│   ├── 📄 examples-minimal.md
│   ├── 📄 examples-mpk.md
│   ├── 📄 examples-multi-value.md
│   ├── 📄 examples-multimemory.md
│   ├── 📄 examples-multithreaded-embedding.md
│   ├── 📄 examples-pre-compiling-wasm.md
│   ├── 📄 examples-profiling-guest.md
│   ├── 📄 examples-profiling-perf.md
│   ├── 📄 examples-profiling-samply.md
│   ├── 📄 examples-profiling-vtune.md
│   ├── 📄 examples-profiling.md
│   ├── 📄 examples-pulley.md
│   ├── 📄 examples-rust-wasip2.md
│   ├── 📄 examples-serialize.md
│   ├── 📄 examples-wasip1.md
│   ├── 📄 examples-wasip2.md
│   ├── 📄 introduction.md
│   ├── 📁 js
│   │   ├── 📄 index.js
│   │   ├── 📄 langtabs.js
│   │   ├── 📄 mermaid.min.11.6.0.js
│   │   └── 📄 moment.min.2.30.1.js
│   ├── 📄 lang.md
│   ├── 📄 security-disclosure.md
│   ├── 📄 security-vulnerability-runbook.md
│   ├── 📄 security-what-is-considered-a-security-vulnerability.md
│   ├── 📄 security.md
│   ├── 📄 stability-platform-support.md
│   ├── 📄 stability-release.md
│   ├── 📄 stability-tiers.md
│   ├── 📄 stability-wasm-proposals.md
│   ├── 📄 stability.md
│   ├── 📄 wasi-software-architecture.png
│   └── 📄 wmemcheck.md
├── 📁 examples
│   ├── 📄 CMakeLists.txt
│   ├── 📄 README.md
│   ├── 📄 anyref.c
│   ├── 📄 anyref.cc
│   ├── 📄 anyref.rs
│   ├── 📄 anyref.wat
│   ├── 📄 async.cpp
│   ├── 📄 async.wat
│   ├── 📁 component
│   │   ├── 📄 convert.wit
│   │   ├── 📄 main.rs
│   │   └── 📁 wasm
│   │       ├── 📄 Cargo.toml
│   │       └── 📄 guest.rs
│   ├── 📄 coredump.rs
│   ├── 📄 epochs.rs
│   ├── 📄 externref.c
│   ├── 📄 externref.cc
│   ├── 📄 externref.rs
│   ├── 📄 externref.wat
│   ├── 📄 fast_compilation.rs
│   ├── 📄 fast_execution.rs
│   ├── 📄 fast_instantiation.rs
│   ├── 📁 fib-debug
│   │   ├── 📄 main.c
│   │   ├── 📄 main.rs
│   │   └── 📁 wasm
│   │       ├── 📄 Cargo.toml
│   │       └── 📄 fib.rs
│   ├── 📄 fuel.c
│   ├── 📄 fuel.cc
│   ├── 📄 fuel.rs
│   ├── 📄 fuel.wat
│   ├── 📄 gcd.c
│   ├── 📄 gcd.cc
│   ├── 📄 gcd.rs
│   ├── 📄 gcd.wat
│   ├── 📄 hello.c
│   ├── 📄 hello.cc
│   ├── 📄 hello.rs
│   ├── 📄 hello.wat
│   ├── 📄 interrupt.c
│   ├── 📄 interrupt.cc
│   ├── 📄 interrupt.rs
│   ├── 📄 interrupt.wat
│   ├── 📄 linking.c
│   ├── 📄 linking.cc
│   ├── 📄 linking.rs
│   ├── 📄 linking1.wat
│   ├── 📄 linking2.wat
│   ├── 📄 memory.c
│   ├── 📄 memory.cc
│   ├── 📄 memory.rs
│   ├── 📄 memory.wat
│   ├── 📁 min-platform
│   │   ├── 📄 Cargo.toml
│   │   ├── 📄 README.md
│   │   ├── 📄 build.sh
│   │   ├── 📁 embedding
│   │   │   ├── 📄 Cargo.toml
│   │   │   ├── 📄 cbindgen.toml
│   │   │   ├── 📁 src
│   │   │   │   ├── 📄 allocator.rs
│   │   │   │   ├── 📄 lib.rs
│   │   │   │   ├── 📄 panic.rs
│   │   │   │   └── 📄 wasi.rs
│   │   │   ├── 📄 wasmtime-platform.c
│   │   │   └── 📄 wasmtime-platform.h
│   │   └── 📁 src
│   │       └── 📄 main.rs
│   ├── 📄 mpk-available.rs
│   ├── 📄 mpk.rs
│   ├── 📄 multi.c
│   ├── 📄 multi.cc
│   ├── 📄 multi.rs
│   ├── 📄 multi.wat
│   ├── 📄 multimemory.c
│   ├── 📄 multimemory.cc
│   ├── 📄 multimemory.rs
│   ├── 📄 multimemory.wat
│   ├── 📄 pre_compile.rs
│   ├── 📁 resource-component
│   │   ├── 📄 kv-store.wit
│   │   ├── 📄 main.rs
│   │   └── 📁 wasm
│   │       ├── 📄 Cargo.toml
│   │       └── 📄 guest_kvdb.rs
│   ├── 📄 run_pre_compiled.rs
│   ├── 📄 serialize.c
│   ├── 📄 serialize.cc
│   ├── 📄 serialize.rs
│   ├── 📄 threads.c
│   ├── 📄 threads.cc
│   ├── 📄 threads.rs
│   ├── 📄 threads.wat
│   ├── 📁 tokio
│   │   ├── 📄 main.rs
│   │   └── 📁 wasm
│   │       ├── 📄 Cargo.toml
│   │       └── 📄 tokio-wasi.rs
│   ├── 📁 wasip1
│   │   ├── 📄 main.c
│   │   ├── 📄 main.cc
│   │   └── 📄 main.rs
│   ├── 📁 wasip1-async
│   │   └── 📄 main.rs
│   ├── 📁 wasip2
│   │   └── 📄 main.rs
│   ├── 📁 wasip2-async
│   │   └── 📄 main.rs
│   └── 📁 wasm
│       ├── 📄 Cargo.toml
│       └── 📄 wasi.rs
├── 📁 fuzz
│   ├── 📄 Cargo.toml
│   ├── 📄 README.md
│   ├── 📄 build.rs
│   └── 📁 fuzz_targets
│       ├── 📄 call_async.rs
│       ├── 📄 compile.rs
│       ├── 📄 component_api.rs
│       ├── 📄 cranelift-fuzzgen.rs
│       ├── 📄 cranelift-icache.rs
│       ├── 📄 differential.rs
│       ├── 📄 instantiate-many.rs
│       ├── 📄 instantiate.rs
│       ├── 📄 misc.rs
│       ├── 📄 table_ops.rs
│       └── 📄 wast_tests.rs
├── 📁 pulley
│   ├── 📄 CONTRIBUTING.md
│   ├── 📄 Cargo.toml
│   ├── 📄 README.md
│   ├── 📁 examples
│   │   └── 📄 profiler-html.rs
│   ├── 📁 fuzz
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 lib.rs
│   │       └── 📄 roundtrip.rs
│   ├── 📁 macros
│   │   ├── 📄 Cargo.toml
│   │   └── 📁 src
│   │       ├── 📄 interp_disable_if_cfg.rs
│   │       └── 📄 lib.rs
│   ├── 📁 src
│   │   ├── 📄 decode.rs
│   │   ├── 📄 disas.rs
│   │   ├── 📄 encode.rs
│   │   ├── 📄 imms.rs
│   │   ├── 📁 interp
│   │   │   ├── 📄 debug.rs
│   │   │   ├── 📄 match_loop.rs
│   │   │   └── 📄 tail_loop.rs
│   │   ├── 📄 interp.rs
│   │   ├── 📄 lib.rs
│   │   ├── 📄 op.rs
│   │   ├── 📄 opcode.rs
│   │   ├── 📄 profile.rs
│   │   ├── 📄 profile_disabled.rs
│   │   └── 📄 regs.rs
│   └── 📁 tests
│       └── 📁 all
│           ├── 📄 disas.rs
│           ├── 📄 interp.rs
│           └── 📄 main.rs
├── 📄 rustfmt.toml
├── 📁 scripts
│   ├── 📄 format-all.sh
│   └── 📄 publish.rs
├── 📁 src
│   ├── 📁 bin
│   │   └── 📄 wasmtime.rs
│   ├── 📁 commands
│   │   ├── 📄 compile.rs
│   │   ├── 📄 config.rs
│   │   ├── 📄 explore.rs
│   │   ├── 📄 objdump.rs
│   │   ├── 📄 run.rs
│   │   ├── 📄 serve.rs
│   │   ├── 📄 settings.rs
│   │   └── 📄 wast.rs
│   ├── 📄 commands.rs
│   ├── 📄 common.rs
│   └── 📄 lib.rs
├── 📁 supply-chain
│   ├── 📄 README.md
│   ├── 📄 audits.toml
│   ├── 📄 config.toml
│   └── 📄 imports.lock
├── 📁 tests
│   ├── 📁 all
│   │   ├── 📄 arrays.rs
│   │   ├── 📄 async_functions.rs
│   │   ├── 📄 call_hook.rs
│   │   ├── 📁 cli_tests
│   │   │   ├── 📄 bad-syntax.wat
│   │   │   ├── 📄 big_table.wat
│   │   │   ├── 📄 component-basic.wat
│   │   │   ├── 📄 coredump_smoketest.wat
│   │   │   ├── 📄 count-stdin.wat
│   │   │   ├── 📄 empty-component.wat
│   │   │   ├── 📄 empty-module.wat
│   │   │   ├── 📄 exit125_wasi_snapshot0.wat
│   │   │   ├── 📄 exit125_wasi_snapshot1.wat
│   │   │   ├── 📄 exit126_wasi_snapshot0.wat
│   │   │   ├── 📄 exit126_wasi_snapshot1.wat
│   │   │   ├── 📄 exit2_wasi_snapshot0.wat
│   │   │   ├── 📄 exit2_wasi_snapshot1.wat
│   │   │   ├── 📄 exit_with_saved_fprs.wat
│   │   │   ├── 📄 greeter_callable_command.wat
│   │   │   ├── 📄 greeter_command.wat
│   │   │   ├── 📄 greeter_reactor.wat
│   │   │   ├── 📄 hello_wasi_snapshot0.wat
│   │   │   ├── 📄 hello_wasi_snapshot1.wat
│   │   │   ├── 📄 iloop-invoke.wat
│   │   │   ├── 📄 iloop-start.wat
│   │   │   ├── 📄 issue-10353.wat
│   │   │   ├── 📄 loop-params.wat
│   │   │   ├── 📄 memory-grow-failure.wat
│   │   │   ├── 📄 minimal-command.wat
│   │   │   ├── 📄 minimal-reactor.wat
│   │   │   ├── 📄 numeric_args.wat
│   │   │   ├── 📄 print-arguments.wat
│   │   │   ├── 📄 print_env.wat
│   │   │   ├── 📄 rs2wasm-add-func.wat
│   │   │   ├── 📄 run
│   │   │   ├── 📄 simple.wat
│   │   │   ├── 📄 table-grow-failure.wat
│   │   │   ├── 📄 table-grow-failure2.wat
│   │   │   ├── 📄 threads.wat
│   │   │   ├── 📄 unreachable.wat
│   │   │   └── 📄 wasi_misaligned_pointer.wat
│   │   ├── 📄 cli_tests.rs
│   │   ├── 📄 code_too_large.rs
│   │   ├── 📁 component_model
│   │   │   ├── 📄 aot.rs
│   │   │   ├── 📄 async.rs
│   │   │   ├── 📁 bindgen
│   │   │   │   ├── 📄 ownership.rs
│   │   │   │   └── 📄 results.rs
│   │   │   ├── 📄 bindgen.rs
│   │   │   ├── 📄 call_hook.rs
│   │   │   ├── 📄 dynamic.rs
│   │   │   ├── 📄 func.rs
│   │   │   ├── 📄 import.rs
│   │   │   ├── 📄 instance.rs
│   │   │   ├── 📄 linker.rs
│   │   │   ├── 📄 macros.rs
│   │   │   ├── 📄 nested.rs
│   │   │   ├── 📄 post_return.rs
│   │   │   ├── 📄 resources.rs
│   │   │   └── 📄 strings.rs
│   │   ├── 📄 component_model.rs
│   │   ├── 📄 coredump.rs
│   │   ├── 📄 custom_code_memory.rs
│   │   ├── 📁 debug
│   │   │   ├── 📄 dump.rs
│   │   │   ├── 📄 gdb.rs
│   │   │   ├── 📄 lldb.rs
│   │   │   ├── 📄 mod.rs
│   │   │   ├── 📄 obj.rs
│   │   │   ├── 📄 satisfy_memory_import.wat
│   │   │   ├── 📄 simulate.rs
│   │   │   └── 📄 translate.rs
│   │   ├── 📄 defaults.rs
│   │   ├── 📄 epoch_interruption.rs
│   │   ├── 📄 exceptions.rs
│   │   ├── 📄 exnrefs.rs
│   │   ├── 📄 externals.rs
│   │   ├── 📄 fuel.rs
│   │   ├── 📄 fuel.wast
│   │   ├── 📄 func.rs
│   │   ├── 📄 funcref.rs
│   │   ├── 📄 gc.rs
│   │   ├── 📄 globals.rs
│   │   ├── 📄 host_funcs.rs
│   │   ├── 📄 i31ref.rs
│   │   ├── 📄 iloop.rs
│   │   ├── 📄 import_calling_export.rs
│   │   ├── 📄 import_indexes.rs
│   │   ├── 📄 instance.rs
│   │   ├── 📄 invoke_func_via_table.rs
│   │   ├── 📄 limits.rs
│   │   ├── 📄 linker.rs
│   │   ├── 📄 main.rs
│   │   ├── 📄 memory.rs
│   │   ├── 📄 memory_creator.rs
│   │   ├── 📄 module.rs
│   │   ├── 📄 module_serialize.rs
│   │   ├── 📄 name.rs
│   │   ├── 📄 noextern.rs
│   │   ├── 📄 piped_tests.rs
│   │   ├── 📄 pooling_allocator.rs
│   │   ├── 📄 pulley.rs
│   │   ├── 📄 pulley_provenance_test.wat
│   │   ├── 📄 pulley_provenance_test_async_component.wat
│   │   ├── 📄 pulley_provenance_test_component.wat
│   │   ├── 📄 relocs.rs
│   │   ├── 📄 stack_creator.rs
│   │   ├── 📄 stack_overflow.rs
│   │   ├── 📄 store.rs
│   │   ├── 📄 structs.rs
│   │   ├── 📄 table.rs
│   │   ├── 📄 tags.rs
│   │   ├── 📄 threads.rs
│   │   ├── 📄 traps.rs
│   │   ├── 📄 types.rs
│   │   ├── 📄 wait_notify.rs
│   │   └── 📄 winch_engine_features.rs
│   ├── 📁 component-model
│   ├── 📄 disable_host_trap_handlers.rs
│   ├── 📁 disas
│   │   ├── 📄 aarch64-entry-trampoline.wat
│   │   ├── 📄 aarch64-extr.wat
│   │   ├── 📄 aarch64-relaxed-simd.wat
│   │   ├── 📄 aarch64-wide-arithmetic.wat
│   │   ├── 📄 arith.wat
│   │   ├── 📄 basic-wat-test.wat
│   │   ├── 📄 br_table.wat
│   │   ├── 📄 byteswap.wat
│   │   ├── 📄 call-indirect.wat
│   │   ├── 📄 call-simd.wat
│   │   ├── 📄 call.wat
│   │   ├── 📁 component-model
│   │   │   ├── 📄 direct-adapter-calls-inlining.wat
│   │   │   ├── 📄 direct-adapter-calls-x64.wat
│   │   │   ├── 📄 direct-adapter-calls.wat
│   │   │   ├── 📄 enum.wat
│   │   │   ├── 📄 exported-module-makes-adapters-indirect.wat
│   │   │   ├── 📄 inlining-bug.wat
│   │   │   ├── 📄 inlining-fuzz-bug.wat
│   │   │   ├── 📄 issue-11458.wat
│   │   │   └── 📄 multiple-instantiations-makes-adapters-indirect.wat
│   │   ├── 📄 conditional-traps.wat
│   │   ├── 📄 dead-code.wat
│   │   ├── 📄 duplicate-function-types.wat
│   │   ├── 📄 duplicate-loads-dynamic-memory.wat
│   │   ├── 📄 duplicate-loads-static-memory.wat
│   │   ├── 📄 dynamic-memory-no-spectre-access-same-index-different-offsets.wat
│   │   ├── 📄 dynamic-memory-yes-spectre-access-same-index-different-offsets.wat
│   │   ├── 📄 epoch-interruption-x86.wat
│   │   ├── 📄 epoch-interruption.wat
│   │   ├── 📄 exceptions.wat
│   │   ├── 📄 f32-load.wat
│   │   ├── 📄 f32-store.wat
│   │   ├── 📄 f64-load.wat
│   │   ├── 📄 f64-store.wat
│   │   ├── 📄 fac-multi-value.wat
│   │   ├── 📄 fibonacci.wat
│   │   ├── 📄 fixed-size-memory.wat
│   │   ├── 📁 gc
│   │   │   ├── 📁 drc
│   │   │   │   ├── 📄 array-fill.wat
│   │   │   │   ├── 📄 array-get-s.wat
│   │   │   │   ├── 📄 array-get-u.wat
│   │   │   │   ├── 📄 array-get.wat
│   │   │   │   ├── 📄 array-len.wat
│   │   │   │   ├── 📄 array-new-fixed-of-gc-refs.wat
│   │   │   │   ├── 📄 array-new-fixed.wat
│   │   │   │   ├── 📄 array-new.wat
│   │   │   │   ├── 📄 array-set.wat
│   │   │   │   ├── 📄 br-on-cast-fail.wat
│   │   │   │   ├── 📄 br-on-cast.wat
│   │   │   │   ├── 📄 call-indirect-and-subtyping.wat
│   │   │   │   ├── 📄 externref-globals.wat
│   │   │   │   ├── 📄 funcref-in-gc-heap-get.wat
│   │   │   │   ├── 📄 funcref-in-gc-heap-new.wat
│   │   │   │   ├── 📄 funcref-in-gc-heap-set.wat
│   │   │   │   ├── 📄 i31ref-globals.wat
│   │   │   │   ├── 📄 multiple-array-get.wat
│   │   │   │   ├── 📄 multiple-struct-get.wat
│   │   │   │   ├── 📄 ref-cast.wat
│   │   │   │   ├── 📄 ref-is-null.wat
│   │   │   │   ├── 📄 ref-test-any.wat
│   │   │   │   ├── 📄 ref-test-array.wat
│   │   │   │   ├── 📄 ref-test-concrete-func-type.wat
│   │   │   │   ├── 📄 ref-test-concrete-type.wat
│   │   │   │   ├── 📄 ref-test-eq.wat
│   │   │   │   ├── 📄 ref-test-i31.wat
│   │   │   │   ├── 📄 ref-test-none.wat
│   │   │   │   ├── 📄 ref-test-struct.wat
│   │   │   │   ├── 📄 struct-get.wat
│   │   │   │   ├── 📄 struct-new-default.wat
│   │   │   │   ├── 📄 struct-new.wat
│   │   │   │   └── 📄 struct-set.wat
│   │   │   ├── 📁 null
│   │   │   │   ├── 📄 array-fill.wat
│   │   │   │   ├── 📄 array-get-s.wat
│   │   │   │   ├── 📄 array-get-u.wat
│   │   │   │   ├── 📄 array-get.wat
│   │   │   │   ├── 📄 array-len.wat
│   │   │   │   ├── 📄 array-new-fixed-of-gc-refs.wat
│   │   │   │   ├── 📄 array-new-fixed.wat
│   │   │   │   ├── 📄 array-new.wat
│   │   │   │   ├── 📄 array-set.wat
│   │   │   │   ├── 📄 br-on-cast-fail.wat
│   │   │   │   ├── 📄 br-on-cast.wat
│   │   │   │   ├── 📄 call-indirect-and-subtyping.wat
│   │   │   │   ├── 📄 externref-globals.wat
│   │   │   │   ├── 📄 funcref-in-gc-heap-get.wat
│   │   │   │   ├── 📄 funcref-in-gc-heap-new.wat
│   │   │   │   ├── 📄 funcref-in-gc-heap-set.wat
│   │   │   │   ├── 📄 i31ref-globals.wat
│   │   │   │   ├── 📄 multiple-array-get.wat
│   │   │   │   ├── 📄 multiple-struct-get.wat
│   │   │   │   ├── 📄 ref-cast.wat
│   │   │   │   ├── 📄 ref-is-null.wat
│   │   │   │   ├── 📄 ref-test-any.wat
│   │   │   │   ├── 📄 ref-test-array.wat
│   │   │   │   ├── 📄 ref-test-concrete-func-type.wat
│   │   │   │   ├── 📄 ref-test-concrete-type.wat
│   │   │   │   ├── 📄 ref-test-eq.wat
│   │   │   │   ├── 📄 ref-test-i31.wat
│   │   │   │   ├── 📄 ref-test-none.wat
│   │   │   │   ├── 📄 ref-test-struct.wat
│   │   │   │   ├── 📄 struct-get.wat
│   │   │   │   ├── 📄 struct-new-default.wat
│   │   │   │   ├── 📄 struct-new.wat
│   │   │   │   ├── 📄 struct-set.wat
│   │   │   │   └── 📄 v128-fields.wat
│   │   │   ├── 📄 struct-new-default.wat
│   │   │   ├── 📄 struct-new-stack-map.wat
│   │   │   └── 📄 struct-new.wat
│   │   ├── 📄 globals.wat
│   │   ├── 📄 i128-cmp.wat
│   │   ├── 📄 i32-load.wat
│   │   ├── 📄 i32-load16-s.wat
│   │   ├── 📄 i32-load16-u.wat
│   │   ├── 📄 i32-load8-s.wat
│   │   ├── 📄 i32-load8-u.wat
│   │   ├── 📄 i32-not-x64.wat
│   │   ├── 📄 i32-store.wat
│   │   ├── 📄 i32-store16.wat
│   │   ├── 📄 i32-store8.wat
│   │   ├── 📄 i64-load.wat
│   │   ├── 📄 i64-load16-s.wat
│   │   ├── 📄 i64-load16-u.wat
│   │   ├── 📄 i64-load8-s.wat
│   │   ├── 📄 i64-load8-u.wat
│   │   ├── 📄 i64-store.wat
│   │   ├── 📄 i64-store16.wat
│   │   ├── 📄 i64-store32.wat
│   │   ├── 📄 i64-store8.wat
│   │   ├── 📄 icall-loop.wat
│   │   ├── 📄 icall-simd.wat
│   │   ├── 📄 icall.wat
│   │   ├── 📄 if-reachability-translation-0.wat
│   │   ├── 📄 if-reachability-translation-1.wat
│   │   ├── 📄 if-reachability-translation-2.wat
│   │   ├── 📄 if-reachability-translation-3.wat
│   │   ├── 📄 if-reachability-translation-4.wat
│   │   ├── 📄 if-reachability-translation-5.wat
│   │   ├── 📄 if-reachability-translation-6.wat
│   │   ├── 📄 if-unreachable-else-params-2.wat
│   │   ├── 📄 if-unreachable-else-params.wat
│   │   ├── 📄 indirect-call-no-caching.wat
│   │   ├── 📄 issue-10929-v128-icmp-egraphs.wat
│   │   ├── 📄 issue-5696.wat
│   │   ├── 📁 load-store
│   │   │   ├── 📁 aarch64
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   └── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📄 make-load-store-tests.sh
│   │   │   ├── 📁 riscv64
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   └── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   ├── 📁 s390x
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │   │   ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │   │   └── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │   └── 📁 x64
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_dynamic_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i32_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_no_spectre_i8_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0x1000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i32_access_0xffff0000_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0_offset.wat
│   │   │       ├── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0x1000_offset.wat
│   │   │       └── 📄 load_store_static_kind_i64_index_0xffffffff_guard_yes_spectre_i8_access_0xffff0000_offset.wat
│   │   ├── 📄 many-return-values.wat
│   │   ├── 📄 memory-min-max-same.wat
│   │   ├── 📄 memory.wat
│   │   ├── 📄 multi-0.wat
│   │   ├── 📄 multi-1.wat
│   │   ├── 📄 multi-10.wat
│   │   ├── 📄 multi-11.wat
│   │   ├── 📄 multi-12.wat
│   │   ├── 📄 multi-13.wat
│   │   ├── 📄 multi-14.wat
│   │   ├── 📄 multi-15.wat
│   │   ├── 📄 multi-16.wat
│   │   ├── 📄 multi-17.wat
│   │   ├── 📄 multi-2.wat
│   │   ├── 📄 multi-3.wat
│   │   ├── 📄 multi-4.wat
│   │   ├── 📄 multi-5.wat
│   │   ├── 📄 multi-6.wat
│   │   ├── 📄 multi-7.wat
│   │   ├── 📄 multi-8.wat
│   │   ├── 📄 multi-9.wat
│   │   ├── 📄 non-fixed-size-memory.wat
│   │   ├── 📄 nullref.wat
│   │   ├── 📄 passive-data.wat
│   │   ├── 📄 pcc-imported-memory.wat
│   │   ├── 📄 pcc-insertlane-x64-avx.wat
│   │   ├── 📄 pcc-insertlane-x64.wat
│   │   ├── 📄 pr2303.wat
│   │   ├── 📄 pr2559.wat
│   │   ├── 📁 pulley
│   │   │   ├── 📄 br_table.wat
│   │   │   ├── 📄 call.wat
│   │   │   ├── 📄 coremark-1.wat
│   │   │   ├── 📄 epoch-simple.wat
│   │   │   ├── 📄 fib.wat
│   │   │   ├── 📁 i32_add
│   │   │   │   └── 📄 const.wat
│   │   │   ├── 📄 madd.wat
│   │   │   ├── 📄 memory-inbounds.wat
│   │   │   ├── 📄 pulley32_memory32.wat
│   │   │   └── 📄 pulley64_memory32.wat
│   │   ├── 📄 pulley-entry-trampoline.wat
│   │   ├── 📄 readonly-funcrefs.wat
│   │   ├── 📄 readonly-heap-base-pointer1.wat
│   │   ├── 📄 readonly-heap-base-pointer2.wat
│   │   ├── 📄 readonly-heap-base-pointer3.wat
│   │   ├── 📄 ref-func-0.wat
│   │   ├── 📄 riscv64-component-builtins-asm.wat
│   │   ├── 📄 riscv64-component-builtins.wat
│   │   ├── 📄 riscv64-entry-trampoline.wat
│   │   ├── 📄 riscv64-wide-arithmetic.wat
│   │   ├── 📄 riscv64-zbb.wat
│   │   ├── 📄 riscv64-zbs.wat
│   │   ├── 📄 s390x-entry-trampoline.wat
│   │   ├── 📄 s390x-wide-arithmetic.wat
│   │   ├── 📄 select.wat
│   │   ├── 📄 simd-store.wat
│   │   ├── 📄 simd.wat
│   │   ├── 📄 simple.wat
│   │   ├── 📁 stack-switching
│   │   │   ├── 📄 resume-suspend-data-passing.wat
│   │   │   ├── 📄 resume-suspend.wat
│   │   │   └── 📄 symmetric-switch.wat
│   │   ├── 📄 sub-global-x64.wat
│   │   ├── 📄 sub-global.wat
│   │   ├── 📄 table-copy.wat
│   │   ├── 📄 table-get-fixed-size.wat
│   │   ├── 📄 table-get.wat
│   │   ├── 📄 table-set-fixed-size.wat
│   │   ├── 📄 table-set.wat
│   │   ├── 📄 trunc.wat
│   │   ├── 📄 trunc32.wat
│   │   ├── 📄 try-table-unreachable.wat
│   │   ├── 📄 typed-funcrefs-eager-init.wat
│   │   ├── 📄 typed-funcrefs.wat
│   │   ├── 📄 unreachable_code.wat
│   │   ├── 📁 winch
│   │   │   ├── 📁 aarch64
│   │   │   │   ├── 📁 br
│   │   │   │   │   ├── 📄 as_br_if_cond.wat
│   │   │   │   │   ├── 📄 as_br_value.wat
│   │   │   │   │   ├── 📄 as_if_cond.wat
│   │   │   │   │   ├── 📄 as_if_else.wat
│   │   │   │   │   ├── 📄 as_if_then.wat
│   │   │   │   │   ├── 📄 as_loop_first.wat
│   │   │   │   │   └── 📄 br_jump.wat
│   │   │   │   ├── 📁 br_if
│   │   │   │   │   ├── 📄 as_br_if_cond.wat
│   │   │   │   │   ├── 📄 as_br_value.wat
│   │   │   │   │   ├── 📄 as_if_cond.wat
│   │   │   │   │   └── 📄 as_local_set_value.wat
│   │   │   │   ├── 📁 br_table
│   │   │   │   │   ├── 📄 large.wat
│   │   │   │   │   └── 📄 nested_br_table_loop_block.wat
│   │   │   │   ├── 📁 call
│   │   │   │   │   ├── 📄 multi.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 recursive.wat
│   │   │   │   │   ├── 📄 reg_on_stack.wat
│   │   │   │   │   └── 📄 simple.wat
│   │   │   │   ├── 📁 call_indirect
│   │   │   │   │   ├── 📄 call_indirect.wat
│   │   │   │   │   └── 📄 local_arg.wat
│   │   │   │   ├── 📁 f32_abs
│   │   │   │   │   ├── 📄 f32_abs_const.wat
│   │   │   │   │   └── 📄 f32_abs_param.wat
│   │   │   │   ├── 📁 f32_add
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_ceil
│   │   │   │   │   ├── 📄 f32_ceil_const.wat
│   │   │   │   │   └── 📄 f32_ceil_param.wat
│   │   │   │   ├── 📁 f32_convert_i32_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f32_convert_i32_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f32_convert_i64_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f32_convert_i64_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f32_copysign
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_demote_f64
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_div
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_eq
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_floor
│   │   │   │   │   ├── 📄 f32_floor_const.wat
│   │   │   │   │   └── 📄 f32_floor_param.wat
│   │   │   │   ├── 📁 f32_ge
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_gt
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_le
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_lt
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_max
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_min
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_mul
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_ne
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_nearest
│   │   │   │   │   ├── 📄 f32_nearest_const.wat
│   │   │   │   │   └── 📄 f32_nearest_param.wat
│   │   │   │   ├── 📁 f32_neg
│   │   │   │   │   ├── 📄 f32_neg_const.wat
│   │   │   │   │   └── 📄 f32_neg_param.wat
│   │   │   │   ├── 📁 f32_reinterpret_i32
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 ret_int.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f32_sqrt
│   │   │   │   │   ├── 📄 f32_sqrt_const.wat
│   │   │   │   │   └── 📄 f32_sqrt_param.wat
│   │   │   │   ├── 📁 f32_sub
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f32_trunc
│   │   │   │   │   ├── 📄 f32_trunc_const.wat
│   │   │   │   │   └── 📄 f32_trunc_param.wat
│   │   │   │   ├── 📁 f64_abs
│   │   │   │   │   ├── 📄 f64_abs_const.wat
│   │   │   │   │   └── 📄 f64_abs_param.wat
│   │   │   │   ├── 📁 f64_add
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_ceil
│   │   │   │   │   ├── 📄 f64_ceil_const.wat
│   │   │   │   │   └── 📄 f64_ceil_param.wat
│   │   │   │   ├── 📁 f64_convert_i32_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f64_convert_i32_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f64_convert_i64_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f64_convert_i64_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f64_copysign
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_div
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_eq
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_floor
│   │   │   │   │   ├── 📄 f64_floor_const.wat
│   │   │   │   │   └── 📄 f64_floor_param.wat
│   │   │   │   ├── 📁 f64_ge
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_gt
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_le
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_lt
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_max
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_min
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_mul
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_ne
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_nearest
│   │   │   │   │   ├── 📄 f64_nearest_const.wat
│   │   │   │   │   └── 📄 f64_nearest_param.wat
│   │   │   │   ├── 📁 f64_neg
│   │   │   │   │   ├── 📄 f64_neg_const.wat
│   │   │   │   │   └── 📄 f64_neg_param.wat
│   │   │   │   ├── 📁 f64_promote_f32
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_reinterpret_i64
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 ret_int.wat
│   │   │   │   │   └── 📄 spilled.wat
│   │   │   │   ├── 📁 f64_sqrt
│   │   │   │   │   ├── 📄 f64_sqrt_const.wat
│   │   │   │   │   └── 📄 f64_sqrt_param.wat
│   │   │   │   ├── 📁 f64_sub
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 f64_trunc
│   │   │   │   │   ├── 📄 f64_trunc_const.wat
│   │   │   │   │   └── 📄 f64_trunc_param.wat
│   │   │   │   ├── 📁 i32_add
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 max.wat
│   │   │   │   │   ├── 📄 max_one.wat
│   │   │   │   │   ├── 📄 mixed.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 unsigned_with_zero.wat
│   │   │   │   ├── 📁 i32_and
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_clz
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_ctz
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_divs
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 overflow.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i32_divu
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i32_eq
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_extend_16_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_extend_8_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_ge_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_ge_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_gt_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_gt_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_le_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_le_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_lt_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_lt_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_mul
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 max.wat
│   │   │   │   │   ├── 📄 max_one.wat
│   │   │   │   │   ├── 📄 mixed.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 unsigned_with_zero.wat
│   │   │   │   ├── 📁 i32_ne
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_or
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_popcnt
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   └── 📄 reg.wat
│   │   │   │   ├── 📁 i32_reinterpret_f32
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 ret_float.wat
│   │   │   │   ├── 📁 i32_rems
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 overflow.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i32_remu
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i32_rotl
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_rotr
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_shl
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_shr_s
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_shr_u
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_sub
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 max.wat
│   │   │   │   │   ├── 📄 max_one.wat
│   │   │   │   │   ├── 📄 mixed.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 unsigned_with_zero.wat
│   │   │   │   ├── 📁 i32_trunc_f32_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_trunc_f32_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_trunc_f64_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_trunc_f64_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_wrap_i64
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i32_xor
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_add
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 max.wat
│   │   │   │   │   ├── 📄 max_one.wat
│   │   │   │   │   ├── 📄 mixed.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 unsigned_with_zero.wat
│   │   │   │   ├── 📁 i64_and
│   │   │   │   │   ├── 📄 32_const.wat
│   │   │   │   │   ├── 📄 64_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_clz
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_ctz
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_divs
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 overflow.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i64_divu
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i64_eq
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_extend_16_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_extend_32_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_extend_8_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_extend_i32_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_extend_i32_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_ge_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_ge_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_gt_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_gt_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_le_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_le_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_lt_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_lt_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_mul
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 max.wat
│   │   │   │   │   ├── 📄 max_one.wat
│   │   │   │   │   ├── 📄 mixed.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 unsigned_with_zero.wat
│   │   │   │   ├── 📁 i64_ne
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_or
│   │   │   │   │   ├── 📄 32_const.wat
│   │   │   │   │   ├── 📄 64_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_popcnt
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   └── 📄 reg.wat
│   │   │   │   ├── 📁 i64_reinterpret_f64
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 ret_float.wat
│   │   │   │   ├── 📁 i64_rems
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 overflow.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i64_remu
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 one_zero.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 zero_zero.wat
│   │   │   │   ├── 📁 i64_rotl
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_rotr
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_shl
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_shr_s
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_shr_u
│   │   │   │   │   ├── 📄 16_const.wat
│   │   │   │   │   ├── 📄 8_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_sub
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   ├── 📄 max.wat
│   │   │   │   │   ├── 📄 max_one.wat
│   │   │   │   │   ├── 📄 mixed.wat
│   │   │   │   │   ├── 📄 params.wat
│   │   │   │   │   ├── 📄 signed.wat
│   │   │   │   │   └── 📄 unsigned_with_zero.wat
│   │   │   │   ├── 📁 i64_trunc_f32_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_trunc_f32_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_trunc_f64_s
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_trunc_f64_u
│   │   │   │   │   ├── 📄 const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 i64_xor
│   │   │   │   │   ├── 📄 32_const.wat
│   │   │   │   │   ├── 📄 64_const.wat
│   │   │   │   │   ├── 📄 locals.wat
│   │   │   │   │   └── 📄 params.wat
│   │   │   │   ├── 📁 load
│   │   │   │   │   ├── 📄 dynamic_heap.wat
│   │   │   │   │   ├── 📄 f32.wat
│   │   │   │   │   ├── 📄 f64.wat
│   │   │   │   │   ├── 📄 i32.wat
│   │   │   │   │   └── 📄 i64.wat
│   │   │   │   ├── 📁 nop
│   │   │   │   │   └── 📄 nop.wat
│   │   │   │   ├── 📁 params
│   │   │   │   │   ├── 📄 400_params.wat
│   │   │   │   │   └── 📄 multi_values.wat
│   │   │   │   └── 📁 store
│   │   │   │       ├── 📄 dynamic_heap.wat
│   │   │   │       ├── 📄 f32.wat
│   │   │   │       ├── 📄 f64.wat
│   │   │   │       ├── 📄 i32.wat
│   │   │   │       └── 📄 i64.wat
│   │   │   └── 📁 x64
│   │   │       ├── 📁 atomic
│   │   │       │   ├── 📁 fence
│   │   │       │   │   └── 📄 fence.wat
│   │   │       │   ├── 📁 load
│   │   │       │   │   ├── 📄 i32_atomic_load.wat
│   │   │       │   │   ├── 📄 i32_atomic_load16_u.wat
│   │   │       │   │   ├── 📄 i32_atomic_load8_u.wat
│   │   │       │   │   ├── 📄 i64_atomic_load.wat
│   │   │       │   │   ├── 📄 i64_atomic_load16_u.wat
│   │   │       │   │   ├── 📄 i64_atomic_load32_u.wat
│   │   │       │   │   └── 📄 i64_atomic_load8_u.wat
│   │   │       │   ├── 📁 notify
│   │   │       │   │   ├── 📄 notify.wat
│   │   │       │   │   └── 📄 notify_offset.wat
│   │   │       │   ├── 📁 rmw
│   │   │       │   │   ├── 📁 add
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw16_addu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw8_addu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw_add.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw16_addu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw32_addu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw8_addu.wat
│   │   │       │   │   │   └── 📄 i64_atomic_rmw_add.wat
│   │   │       │   │   ├── 📁 and
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw16_andu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw8_andu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw_and.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw16_andu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw32_andu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw8_andu.wat
│   │   │       │   │   │   └── 📄 i64_atomic_rmw_and.wat
│   │   │       │   │   ├── 📁 cmpxchg
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw16_cmpxchgu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw8_cmpxchgu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw_cmpxchg.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw16_cmpxchgu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw32_cmpxchgu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw8_cmpxchgu.wat
│   │   │       │   │   │   └── 📄 i64_atomic_rmw_cmpxchg.wat
│   │   │       │   │   ├── 📁 or
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw16_oru.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw8_oru.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw_or.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw16_oru.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw32_oru.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw8_oru.wat
│   │   │       │   │   │   └── 📄 i64_atomic_rmw_or.wat
│   │   │       │   │   ├── 📁 sub
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw16_subu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw8_subu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw_sub.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw16_subu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw32_subu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw8_subu.wat
│   │   │       │   │   │   └── 📄 i64_atomic_rmw_sub.wat
│   │   │       │   │   ├── 📁 xchg
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw16_xchgu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw8_xchgu.wat
│   │   │       │   │   │   ├── 📄 i32_atomic_rmw_xchg.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw16_xchgu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw32_xchgu.wat
│   │   │       │   │   │   ├── 📄 i64_atomic_rmw8_xchgu.wat
│   │   │       │   │   │   └── 📄 i64_atomic_rmw_xchg.wat
│   │   │       │   │   └── 📁 xor
│   │   │       │   │       ├── 📄 i32_atomic_rmw16_xoru.wat
│   │   │       │   │       ├── 📄 i32_atomic_rmw8_xoru.wat
│   │   │       │   │       ├── 📄 i32_atomic_rmw_xor.wat
│   │   │       │   │       ├── 📄 i64_atomic_rmw16_xoru.wat
│   │   │       │   │       ├── 📄 i64_atomic_rmw32_xoru.wat
│   │   │       │   │       ├── 📄 i64_atomic_rmw8_xoru.wat
│   │   │       │   │       └── 📄 i64_atomic_rmw_xor.wat
│   │   │       │   ├── 📁 store
│   │   │       │   │   ├── 📄 i32_atomic_store.wat
│   │   │       │   │   ├── 📄 i32_atomic_store16.wat
│   │   │       │   │   ├── 📄 i32_atomic_store8.wat
│   │   │       │   │   ├── 📄 i64_atomic_store.wat
│   │   │       │   │   ├── 📄 i64_atomic_store16.wat
│   │   │       │   │   ├── 📄 i64_atomic_store32.wat
│   │   │       │   │   └── 📄 i64_atomic_store8.wat
│   │   │       │   └── 📁 wait
│   │   │       │       ├── 📄 wait32.wat
│   │   │       │       ├── 📄 wait32_offset.wat
│   │   │       │       ├── 📄 wait64.wat
│   │   │       │       └── 📄 wait64_offset.wat
│   │   │       ├── 📁 block
│   │   │       │   ├── 📄 as_if_cond.wat
│   │   │       │   ├── 📄 as_if_else.wat
│   │   │       │   ├── 📄 as_if_then.wat
│   │   │       │   ├── 📄 deep.wat
│   │   │       │   ├── 📄 empty.wat
│   │   │       │   ├── 📄 get_and_set.wat
│   │   │       │   ├── 📄 get_and_tee.wat
│   │   │       │   ├── 📄 issue-10613.wat
│   │   │       │   ├── 📄 nested.wat
│   │   │       │   ├── 📄 singular.wat
│   │   │       │   └── 📄 with_local_float.wat
│   │   │       ├── 📁 br
│   │   │       │   ├── 📄 as_block_first.wat
│   │   │       │   ├── 📄 as_block_last.wat
│   │   │       │   ├── 📄 as_block_mid.wat
│   │   │       │   ├── 📄 as_block_value.wat
│   │   │       │   ├── 📄 as_br_if_cond.wat
│   │   │       │   ├── 📄 as_br_value.wat
│   │   │       │   ├── 📄 as_call_all.wat
│   │   │       │   ├── 📄 as_call_first.wat
│   │   │       │   ├── 📄 as_call_last.wat
│   │   │       │   ├── 📄 as_call_mid.wat
│   │   │       │   ├── 📄 as_if_cond.wat
│   │   │       │   ├── 📄 as_if_else.wat
│   │   │       │   ├── 📄 as_if_then.wat
│   │   │       │   ├── 📄 as_loop_first.wat
│   │   │       │   ├── 📄 as_loop_last.wat
│   │   │       │   ├── 📄 as_loop_mid.wat
│   │   │       │   └── 📄 br_jump.wat
│   │   │       ├── 📁 br_if
│   │   │       │   ├── 📄 as_block_last.wat
│   │   │       │   ├── 📄 as_block_last_value.wat
│   │   │       │   ├── 📄 as_br_if_cond.wat
│   │   │       │   ├── 📄 as_br_value.wat
│   │   │       │   ├── 📄 as_call_first.wat
│   │   │       │   ├── 📄 as_call_last.wat
│   │   │       │   ├── 📄 as_call_mid.wat
│   │   │       │   ├── 📄 as_if_cond.wat
│   │   │       │   ├── 📄 as_if_else.wat
│   │   │       │   ├── 📄 as_if_then.wat
│   │   │       │   ├── 📄 as_local_set_value.wat
│   │   │       │   ├── 📄 as_loop_last.wat
│   │   │       │   ├── 📄 save_state_before_br_emission.wat
│   │   │       │   └── 📄 with_machine_stack_entry.wat
│   │   │       ├── 📁 br_table
│   │   │       │   ├── 📄 ensure_sp_state.wat
│   │   │       │   ├── 📄 large.wat
│   │   │       │   ├── 📄 nested_br_table_loop_block.wat
│   │   │       │   ├── 📄 stack_handling.wat
│   │   │       │   └── 📄 use-innermost-frame.wat
│   │   │       ├── 📁 call
│   │   │       │   ├── 📄 multi.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 recursive.wat
│   │   │       │   ├── 📄 reg_on_stack.wat
│   │   │       │   └── 📄 simple.wat
│   │   │       ├── 📁 call_indirect
│   │   │       │   ├── 📄 call_indirect.wat
│   │   │       │   └── 📄 local_arg.wat
│   │   │       ├── 📁 epoch
│   │   │       │   ├── 📄 func.wat
│   │   │       │   └── 📄 loop.wat
│   │   │       ├── 📁 f32_abs
│   │   │       │   ├── 📄 f32_abs_const.wat
│   │   │       │   └── 📄 f32_abs_param.wat
│   │   │       ├── 📁 f32_add
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_ceil
│   │   │       │   ├── 📄 f32_ceil_const_sse41.wat
│   │   │       │   ├── 📄 f32_ceil_param.wat
│   │   │       │   └── 📄 f32_ceil_param_sse41.wat
│   │   │       ├── 📁 f32_const
│   │   │       │   ├── 📄 call_id.wat
│   │   │       │   └── 📄 id.wat
│   │   │       ├── 📁 f32_convert_i32_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f32_convert_i32_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f32_convert_i64_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f32_convert_i64_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f32_copysign
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_demote_f64
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f32_div
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_eq
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_floor
│   │   │       │   ├── 📄 f32_floor_const_sse41.wat
│   │   │       │   ├── 📄 f32_floor_param.wat
│   │   │       │   └── 📄 f32_floor_param_sse41.wat
│   │   │       ├── 📁 f32_ge
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_gt
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_le
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_lt
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_max
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_min
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_mul
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_ne
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_nearest
│   │   │       │   ├── 📄 f32_floor_const_sse41.wat
│   │   │       │   ├── 📄 f32_floor_param_sse41.wat
│   │   │       │   └── 📄 f32_nearest_param.wat
│   │   │       ├── 📁 f32_neg
│   │   │       │   ├── 📄 f32_neg_const.wat
│   │   │       │   └── 📄 f32_neg_param.wat
│   │   │       ├── 📁 f32_reinterpret_i32
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 ret_int.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f32_sqrt
│   │   │       │   ├── 📄 f32_sqrt_const.wat
│   │   │       │   └── 📄 f32_sqrt_param.wat
│   │   │       ├── 📁 f32_sub
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f32_trunc
│   │   │       │   ├── 📄 f32_trunc_const_sse41.wat
│   │   │       │   ├── 📄 f32_trunc_param.wat
│   │   │       │   └── 📄 f32_trunc_param_sse41.wat
│   │   │       ├── 📁 f32x4_abs
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_add
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_ceil
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_convert_i32x4_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_convert_i32x4_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_demote_f64x2_zero
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_div
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_eq
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_extract_lane
│   │   │       │   ├── 📄 first_lane_avx.wat
│   │   │       │   └── 📄 second_lane_avx.wat
│   │   │       ├── 📁 f32x4_floor
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_ge
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_gt
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_le
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_lt
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_max
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_min
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_mul
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_ne
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_nearest
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_neg
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_pmax
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_pmin
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_replace_lane
│   │   │       │   ├── 📄 const_avx.wat
│   │   │       │   └── 📄 param_avx.wat
│   │   │       ├── 📁 f32x4_splat
│   │   │       │   ├── 📄 const_avx2.wat
│   │   │       │   └── 📄 params_avx2.wat
│   │   │       ├── 📁 f32x4_sqrt
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_sub
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f32x4_trunc
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64_abs
│   │   │       │   ├── 📄 f64_abs_const.wat
│   │   │       │   └── 📄 f64_abs_param.wat
│   │   │       ├── 📁 f64_add
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_ceil
│   │   │       │   ├── 📄 f64_ceil_const_sse41.wat
│   │   │       │   ├── 📄 f64_ceil_param.wat
│   │   │       │   └── 📄 f64_ceil_param_sse41.wat
│   │   │       ├── 📁 f64_const
│   │   │       │   ├── 📄 call_id.wat
│   │   │       │   └── 📄 id.wat
│   │   │       ├── 📁 f64_convert_i32_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f64_convert_i32_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f64_convert_i64_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f64_convert_i64_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f64_copysign
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_div
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_eq
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_floor
│   │   │       │   ├── 📄 f64_floor_const_sse41.wat
│   │   │       │   ├── 📄 f64_floor_param.wat
│   │   │       │   └── 📄 f64_floor_param_sse41.wat
│   │   │       ├── 📁 f64_ge
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_gt
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_le
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_lt
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_max
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_min
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_mul
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_ne
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_nearest
│   │   │       │   ├── 📄 f64_nearest_const_sse41.wat
│   │   │       │   ├── 📄 f64_nearest_param.wat
│   │   │       │   └── 📄 f64_nearest_param_sse41.wat
│   │   │       ├── 📁 f64_neg
│   │   │       │   ├── 📄 f64_neg_const.wat
│   │   │       │   └── 📄 f64_neg_param.wat
│   │   │       ├── 📁 f64_promote_f32
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f64_reinterpret_i64
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 ret_int.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 f64_sqrt
│   │   │       │   ├── 📄 f64_sqrt_const.wat
│   │   │       │   └── 📄 f64_sqrt_param.wat
│   │   │       ├── 📁 f64_sub
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 f64_trunc
│   │   │       │   ├── 📄 f64_trunc_const_sse41.wat
│   │   │       │   ├── 📄 f64_trunc_param.wat
│   │   │       │   └── 📄 f64_trunc_param_sse41.wat
│   │   │       ├── 📁 f64x2_abs
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_add
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_ceil
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_convert_low_i32x4_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_convert_low_i32x4_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_div
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_eq
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_extract_lane
│   │   │       │   ├── 📄 first_lane_avx.wat
│   │   │       │   └── 📄 second_lane_avx.wat
│   │   │       ├── 📁 f64x2_floor
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_ge
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_gt
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_le
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_lt
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_max
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_min
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_mul
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_ne
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_nearest
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_neg
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_pmax
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_pmin
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_promote_low_f32x4
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_replace_lane
│   │   │       │   ├── 📄 const_lane0_avx.wat
│   │   │       │   ├── 📄 const_lane1_avx.wat
│   │   │       │   ├── 📄 param_lane0_avx.wat
│   │   │       │   └── 📄 param_lane1_avx.wat
│   │   │       ├── 📁 f64x2_splat
│   │   │       │   ├── 📄 const_avx.wat
│   │   │       │   └── 📄 param_avx.wat
│   │   │       ├── 📁 f64x2_sqrt
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_sub
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 f64x2_trunc
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 fuel
│   │   │       │   ├── 📄 call.wat
│   │   │       │   ├── 📄 func.wat
│   │   │       │   └── 📄 loop.wat
│   │   │       ├── 📁 i16x8
│   │   │       │   ├── 📁 add
│   │   │       │   │   ├── 📄 add.wat
│   │   │       │   │   ├── 📄 add_sat_s.wat
│   │   │       │   │   └── 📄 add_sat_u.wat
│   │   │       │   ├── 📁 extadd
│   │   │       │   │   ├── 📄 extadd_s.wat
│   │   │       │   │   └── 📄 extadd_u.wat
│   │   │       │   ├── 📁 extmul
│   │   │       │   │   ├── 📄 high_s.wat
│   │   │       │   │   ├── 📄 high_u.wat
│   │   │       │   │   ├── 📄 low_s.wat
│   │   │       │   │   └── 📄 low_u.wat
│   │   │       │   ├── 📁 extract_lane_s
│   │   │       │   │   └── 📄 const_avx.wat
│   │   │       │   ├── 📁 extract_lane_u
│   │   │       │   │   └── 📄 const.wat
│   │   │       │   ├── 📁 max
│   │   │       │   │   ├── 📄 max_s.wat
│   │   │       │   │   └── 📄 max_u.wat
│   │   │       │   ├── 📁 min
│   │   │       │   │   ├── 📄 min_s.wat
│   │   │       │   │   └── 📄 min_u.wat
│   │   │       │   ├── 📁 mul
│   │   │       │   │   └── 📄 mul.wat
│   │   │       │   ├── 📁 neg
│   │   │       │   │   └── 📄 neg.wat
│   │   │       │   ├── 📁 replace_lane
│   │   │       │   │   ├── 📄 const_avx.wat
│   │   │       │   │   └── 📄 param_avx.wat
│   │   │       │   ├── 📁 shift
│   │   │       │   │   ├── 📄 shl.wat
│   │   │       │   │   ├── 📄 shr_s.wat
│   │   │       │   │   └── 📄 shr_u.wat
│   │   │       │   ├── 📁 splat
│   │   │       │   │   ├── 📄 const_avx2.wat
│   │   │       │   │   └── 📄 param_avx2.wat
│   │   │       │   └── 📁 sub
│   │   │       │       ├── 📄 sub.wat
│   │   │       │       ├── 📄 sub_sat_s.wat
│   │   │       │       └── 📄 sub_sat_u.wat
│   │   │       ├── 📁 i16x8_abs
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_all_true
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_avgr_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_bitmask
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_eq
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_extend_high_i8x16_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_extend_high_i8x16_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_extend_low_i8x16_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_extend_low_i8x16_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_ge_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_ge_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_gt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_gt_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_le_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_le_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_lt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_lt_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_narrow_i32x4_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_narrow_i32x4_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_ne
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i16x8_q15mulr_sat_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32_add
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 max.wat
│   │   │       │   ├── 📄 max_one.wat
│   │   │       │   ├── 📄 mixed.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 unsigned_with_zero.wat
│   │   │       ├── 📁 i32_and
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_clz
│   │   │       │   ├── 📄 lzcnt_const.wat
│   │   │       │   ├── 📄 lzcnt_local.wat
│   │   │       │   ├── 📄 lzcnt_param.wat
│   │   │       │   ├── 📄 no_lzcnt_const.wat
│   │   │       │   ├── 📄 no_lzcnt_local.wat
│   │   │       │   └── 📄 no_lzcnt_param.wat
│   │   │       ├── 📁 i32_ctz
│   │   │       │   ├── 📄 bmi1_const.wat
│   │   │       │   ├── 📄 bmi1_local.wat
│   │   │       │   ├── 📄 bmi1_param.wat
│   │   │       │   ├── 📄 no_bmi1_const.wat
│   │   │       │   ├── 📄 no_bmi1_local.wat
│   │   │       │   └── 📄 no_bmi1_param.wat
│   │   │       ├── 📁 i32_divs
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 overflow.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i32_divu
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i32_eq
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_eqz
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 local.wat
│   │   │       │   └── 📄 param.wat
│   │   │       ├── 📁 i32_extend_16_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_extend_8_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_ge_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_ge_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_gt_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_gt_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_le_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_le_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_lt_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_lt_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_mul
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 max.wat
│   │   │       │   ├── 📄 max_one.wat
│   │   │       │   ├── 📄 mixed.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 unsigned_with_zero.wat
│   │   │       ├── 📁 i32_ne
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_or
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_popcnt
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 fallback.wat
│   │   │       │   ├── 📄 no_sse42.wat
│   │   │       │   └── 📄 reg.wat
│   │   │       ├── 📁 i32_reinterpret_f32
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 ret_float.wat
│   │   │       ├── 📁 i32_rems
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 overflow.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i32_remu
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i32_rotl
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_rotr
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_shl
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_shr_s
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_shr_u
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_sub
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 max.wat
│   │   │       │   ├── 📄 max_one.wat
│   │   │       │   ├── 📄 mixed.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 unsigned_with_zero.wat
│   │   │       ├── 📁 i32_trunc_f32_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_trunc_f32_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_trunc_f64_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_trunc_f64_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32_wrap_i64
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 i32_xor
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i32x4
│   │   │       │   ├── 📁 add
│   │   │       │   │   └── 📄 add.wat
│   │   │       │   ├── 📁 extadd
│   │   │       │   │   ├── 📄 extadd_s.wat
│   │   │       │   │   └── 📄 extadd_u.wat
│   │   │       │   ├── 📁 extmul
│   │   │       │   │   ├── 📄 high_s.wat
│   │   │       │   │   ├── 📄 high_u.wat
│   │   │       │   │   ├── 📄 low_s.wat
│   │   │       │   │   └── 📄 low_u.wat
│   │   │       │   ├── 📁 extract_lane
│   │   │       │   │   └── 📄 const_avx.wat
│   │   │       │   ├── 📁 max
│   │   │       │   │   ├── 📄 max_s.wat
│   │   │       │   │   └── 📄 max_u.wat
│   │   │       │   ├── 📁 min
│   │   │       │   │   ├── 📄 min_s.wat
│   │   │       │   │   └── 📄 min_u.wat
│   │   │       │   ├── 📁 mul
│   │   │       │   │   └── 📄 mul.wat
│   │   │       │   ├── 📁 neg
│   │   │       │   │   └── 📄 neg.wat
│   │   │       │   ├── 📁 replace_lane
│   │   │       │   │   ├── 📄 const_avx.wat
│   │   │       │   │   └── 📄 param_avx.wat
│   │   │       │   ├── 📁 shift
│   │   │       │   │   ├── 📄 shl.wat
│   │   │       │   │   ├── 📄 shr_s.wat
│   │   │       │   │   └── 📄 shr_u.wat
│   │   │       │   ├── 📁 splat
│   │   │       │   │   ├── 📄 const_avx2.wat
│   │   │       │   │   └── 📄 param_avx2.wat
│   │   │       │   └── 📁 sub
│   │   │       │       └── 📄 sub.wat
│   │   │       ├── 📁 i32x4_abs
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_all_true
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_bitmask
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_dot_i16x8_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_eq
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_extend_high_i16x8_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_extend_high_i16x8_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_extend_low_i16x8_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_extend_low_i16x8_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_ge_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_ge_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_gt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_gt_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_le_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_le_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_lt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_lt_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_ne
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_trunc_sat_f32x4_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_trunc_sat_f32x4_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_trunc_sat_f64x2_s_zero
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i32x4_trunc_sat_f64x2_u_zero
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64_add
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 max.wat
│   │   │       │   ├── 📄 max_one.wat
│   │   │       │   ├── 📄 mixed.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 unsigned_with_zero.wat
│   │   │       ├── 📁 i64_and
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_clz
│   │   │       │   ├── 📄 lzcnt_const.wat
│   │   │       │   ├── 📄 lzcnt_local.wat
│   │   │       │   ├── 📄 lzcnt_param.wat
│   │   │       │   ├── 📄 no_lzcnt_const.wat
│   │   │       │   ├── 📄 no_lzcnt_local.wat
│   │   │       │   └── 📄 no_lzcnt_param.wat
│   │   │       ├── 📁 i64_ctz
│   │   │       │   ├── 📄 bmi1_const.wat
│   │   │       │   ├── 📄 bmi1_local.wat
│   │   │       │   ├── 📄 bmi1_param.wat
│   │   │       │   ├── 📄 no_bmi1_const.wat
│   │   │       │   ├── 📄 no_bmi1_local.wat
│   │   │       │   └── 📄 no_bmi1_param.wat
│   │   │       ├── 📁 i64_divs
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 overflow.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i64_divu
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i64_eq
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_eqz
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 local.wat
│   │   │       │   ├── 📄 param.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 i64_extend_16_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_extend_32_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_extend_8_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_extend_i32_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 i64_extend_i32_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📁 i64_ge_s
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_ge_u
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_gt_s
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_gt_u
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_le_s
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_le_u
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_lt_s
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_lt_u
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_mul
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 max.wat
│   │   │       │   ├── 📄 max_one.wat
│   │   │       │   ├── 📄 mixed.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 unsigned_with_zero.wat
│   │   │       ├── 📁 i64_ne
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_or
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_popcnt
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 fallback.wat
│   │   │       │   ├── 📄 no_sse42.wat
│   │   │       │   └── 📄 reg.wat
│   │   │       ├── 📁 i64_reinterpret_f64
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 ret_float.wat
│   │   │       ├── 📁 i64_rems
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 overflow.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i64_remu
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 one_zero.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 zero_zero.wat
│   │   │       ├── 📁 i64_rotl
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_rotr
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_shl
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_shr_s
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_shr_u
│   │   │       │   ├── 📄 16_const.wat
│   │   │       │   ├── 📄 8_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_sub
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   ├── 📄 max.wat
│   │   │       │   ├── 📄 max_one.wat
│   │   │       │   ├── 📄 mixed.wat
│   │   │       │   ├── 📄 params.wat
│   │   │       │   ├── 📄 signed.wat
│   │   │       │   └── 📄 unsigned_with_zero.wat
│   │   │       ├── 📁 i64_trunc_f32_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_trunc_f32_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_trunc_f64_s
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_trunc_f64_u
│   │   │       │   ├── 📄 const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64_xor
│   │   │       │   ├── 📄 32_const.wat
│   │   │       │   ├── 📄 64_const.wat
│   │   │       │   ├── 📄 locals.wat
│   │   │       │   └── 📄 params.wat
│   │   │       ├── 📁 i64x2
│   │   │       │   ├── 📁 add
│   │   │       │   │   └── 📄 add.wat
│   │   │       │   ├── 📁 extmul
│   │   │       │   │   ├── 📄 high_s.wat
│   │   │       │   │   ├── 📄 high_u.wat
│   │   │       │   │   ├── 📄 low_s.wat
│   │   │       │   │   └── 📄 low_u.wat
│   │   │       │   ├── 📁 extract_lane
│   │   │       │   │   └── 📄 const.wat
│   │   │       │   ├── 📁 mul
│   │   │       │   │   ├── 📄 mul.wat
│   │   │       │   │   └── 📄 mul_fallback.wat
│   │   │       │   ├── 📁 neg
│   │   │       │   │   └── 📄 neg.wat
│   │   │       │   ├── 📁 replace_lane
│   │   │       │   │   ├── 📄 const_avx.wat
│   │   │       │   │   └── 📄 param_avx.wat
│   │   │       │   ├── 📁 shift
│   │   │       │   │   ├── 📄 shl.wat
│   │   │       │   │   ├── 📄 shr_s.wat
│   │   │       │   │   └── 📄 shr_u.wat
│   │   │       │   ├── 📁 splat
│   │   │       │   │   ├── 📄 const_avx.wat
│   │   │       │   │   └── 📄 param_avx.wat
│   │   │       │   └── 📁 sub
│   │   │       │       └── 📄 sub.wat
│   │   │       ├── 📁 i64x2_abs
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_all_true
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_bitmask
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_eq
│   │   │       │   └── 📄 const.wat
│   │   │       ├── 📁 i64x2_extend_high_i32x4_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_extend_high_i32x4_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_extend_low_i32x4_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_extend_low_i32x4_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_ge_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_gt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_le_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_lt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i64x2_ne
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16
│   │   │       │   ├── 📁 add
│   │   │       │   │   ├── 📄 add.wat
│   │   │       │   │   ├── 📄 add_sat_s.wat
│   │   │       │   │   └── 📄 add_sat_u.wat
│   │   │       │   ├── 📁 extract_lane_s
│   │   │       │   │   └── 📄 const_avx.wat
│   │   │       │   ├── 📁 extract_lane_u
│   │   │       │   │   └── 📄 const_avx.wat
│   │   │       │   ├── 📁 max
│   │   │       │   │   ├── 📄 max_s.wat
│   │   │       │   │   └── 📄 max_u.wat
│   │   │       │   ├── 📁 min
│   │   │       │   │   ├── 📄 min_s.wat
│   │   │       │   │   └── 📄 min_u.wat
│   │   │       │   ├── 📁 neg
│   │   │       │   │   └── 📄 neg.wat
│   │   │       │   ├── 📁 replace_lane
│   │   │       │   │   ├── 📄 const_avx.wat
│   │   │       │   │   └── 📄 param_avx.wat
│   │   │       │   ├── 📁 shift
│   │   │       │   │   ├── 📄 shl.wat
│   │   │       │   │   ├── 📄 shr_s.wat
│   │   │       │   │   └── 📄 shr_u.wat
│   │   │       │   ├── 📁 shuffle
│   │   │       │   │   └── 📄 const_avx.wat
│   │   │       │   ├── 📁 splat
│   │   │       │   │   ├── 📄 const_avx2.wat
│   │   │       │   │   └── 📄 param_avx2.wat
│   │   │       │   ├── 📁 sub
│   │   │       │   │   ├── 📄 sub.wat
│   │   │       │   │   ├── 📄 sub_sat_s.wat
│   │   │       │   │   └── 📄 sub_sat_u.wat
│   │   │       │   └── 📁 swizzle
│   │   │       │       └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_abs
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_all_true
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_avgr_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_bitmask
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_eq
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_ge_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_ge_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_gt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_gt_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_le_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_le_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_lt_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_lt_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_narrow_i16x8_s
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_narrow_i16x8_u
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_ne
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 i8x16_popcnt
│   │   │       │   └── 📄 const_avx.wat
│   │   │       ├── 📁 if
│   │   │       │   ├── 📄 as_binop.wat
│   │   │       │   ├── 📄 as_br_if_last.wat
│   │   │       │   ├── 📄 as_if_cond.wat
│   │   │       │   ├── 📄 as_testop.wat
│   │   │       │   ├── 📄 break_value.wat
│   │   │       │   ├── 📄 nested.wat
│   │   │       │   ├── 📄 reachability.wat
│   │   │       │   └── 📄 singular.wat
│   │   │       ├── 📁 load
│   │   │       │   ├── 📄 f32.wat
│   │   │       │   ├── 📄 f64.wat
│   │   │       │   ├── 📄 grow_load.wat
│   │   │       │   ├── 📄 i32.wat
│   │   │       │   ├── 📄 i64.wat
│   │   │       │   ├── 📄 v128.wat
│   │   │       │   ├── 📄 v128_load16_splat_avx2.wat
│   │   │       │   ├── 📄 v128_load16x4_s_avx.wat
│   │   │       │   ├── 📄 v128_load16x4_u_avx.wat
│   │   │       │   ├── 📄 v128_load32_splat_avx2.wat
│   │   │       │   ├── 📄 v128_load32_zero_avx.wat
│   │   │       │   ├── 📄 v128_load32x2_s_avx.wat
│   │   │       │   ├── 📄 v128_load32x2_s_oob_avx.wat
│   │   │       │   ├── 📄 v128_load32x2_u_avx.wat
│   │   │       │   ├── 📄 v128_load32x2_u_oob_avx.wat
│   │   │       │   ├── 📄 v128_load64_splat_avx.wat
│   │   │       │   ├── 📄 v128_load64_zero_avx.wat
│   │   │       │   ├── 📄 v128_load8_splat_avx2.wat
│   │   │       │   ├── 📄 v128_load8x8_s_avx.wat
│   │   │       │   └── 📄 v128_load8x8_u_avx.wat
│   │   │       ├── 📁 local
│   │   │       │   ├── 📄 latent.wat
│   │   │       │   ├── 📄 materialized.wat
│   │   │       │   └── 📄 v128_multivalue.wat
│   │   │       ├── 📁 loop
│   │   │       │   ├── 📄 as_binary_operand.wat
│   │   │       │   ├── 📄 as_br_if_first.wat
│   │   │       │   ├── 📄 as_br_if_last.wat
│   │   │       │   ├── 📄 as_br_value.wat
│   │   │       │   ├── 📄 as_call_value.wat
│   │   │       │   ├── 📄 as_if_condition.wat
│   │   │       │   ├── 📄 as_if_else.wat
│   │   │       │   ├── 📄 as_if_then.wat
│   │   │       │   ├── 📄 as_local_set_value.wat
│   │   │       │   ├── 📄 as_test_operand.wat
│   │   │       │   ├── 📄 as_unary_operand.wat
│   │   │       │   ├── 📄 break_inner.wat
│   │   │       │   ├── 📄 cont_inner.wat
│   │   │       │   ├── 📄 deep.wat
│   │   │       │   ├── 📄 effects.wat
│   │   │       │   ├── 📄 empty.wat
│   │   │       │   ├── 📄 for.wat
│   │   │       │   ├── 📄 multi.wat
│   │   │       │   ├── 📄 nested.wat
│   │   │       │   ├── 📄 singular.wat
│   │   │       │   └── 📄 while.wat
│   │   │       ├── 📁 nop
│   │   │       │   └── 📄 nop.wat
│   │   │       ├── 📁 return
│   │   │       │   ├── 📄 as_block_first.wat
│   │   │       │   ├── 📄 as_block_last.wat
│   │   │       │   ├── 📄 as_block_mid.wat
│   │   │       │   ├── 📄 as_block_value.wat
│   │   │       │   ├── 📄 as_br_if_cond.wat
│   │   │       │   ├── 📄 as_br_value.wat
│   │   │       │   ├── 📄 as_call_fist.wat
│   │   │       │   ├── 📄 as_call_last.wat
│   │   │       │   ├── 📄 as_call_mid.wat
│   │   │       │   ├── 📄 as_func_first.wat
│   │   │       │   ├── 📄 as_func_last.wat
│   │   │       │   ├── 📄 as_func_mid.wat
│   │   │       │   ├── 📄 as_func_value.wat
│   │   │       │   ├── 📄 as_if_cond.wat
│   │   │       │   ├── 📄 as_if_else.wat
│   │   │       │   ├── 📄 as_if_then.wat
│   │   │       │   ├── 📄 as_loop_first.wat
│   │   │       │   ├── 📄 as_loop_last.wat
│   │   │       │   ├── 📄 as_loop_mid.wat
│   │   │       │   ├── 📄 as_return_value.wat
│   │   │       │   ├── 📄 nullary.wat
│   │   │       │   ├── 📄 type_i32.wat
│   │   │       │   └── 📄 type_i64_value.wat
│   │   │       ├── 📁 select
│   │   │       │   ├── 📄 f32.wat
│   │   │       │   ├── 📄 f64.wat
│   │   │       │   ├── 📄 i32.wat
│   │   │       │   └── 📄 i64.wat
│   │   │       ├── 📁 store
│   │   │       │   ├── 📄 f32.wat
│   │   │       │   ├── 📄 f64.wat
│   │   │       │   ├── 📄 i32.wat
│   │   │       │   ├── 📄 i64.wat
│   │   │       │   ├── 📄 oob.wat
│   │   │       │   └── 📄 v128.wat
│   │   │       ├── 📁 table
│   │   │       │   ├── 📄 fill.wat
│   │   │       │   ├── 📄 get.wat
│   │   │       │   ├── 📄 grow.wat
│   │   │       │   ├── 📄 init_copy_drop.wat
│   │   │       │   ├── 📄 set.wat
│   │   │       │   └── 📄 size.wat
│   │   │       ├── 📁 unreachable
│   │   │       │   ├── 📄 as_block_broke.wat
│   │   │       │   ├── 📄 as_block_first.wat
│   │   │       │   ├── 📄 as_block_last.wat
│   │   │       │   ├── 📄 as_block_mid.wat
│   │   │       │   ├── 📄 as_block_value.wat
│   │   │       │   ├── 📄 as_br_if_cond.wat
│   │   │       │   ├── 📄 as_br_value.wat
│   │   │       │   ├── 📄 as_call_first.wat
│   │   │       │   ├── 📄 as_call_last.wat
│   │   │       │   ├── 📄 as_call_mid.wat
│   │   │       │   ├── 📄 as_func_first.wat
│   │   │       │   ├── 📄 as_func_last.wat
│   │   │       │   ├── 📄 as_func_mid.wat
│   │   │       │   ├── 📄 as_func_value.wat
│   │   │       │   ├── 📄 as_if_cond.wat
│   │   │       │   ├── 📄 as_if_else.wat
│   │   │       │   ├── 📄 as_if_then.wat
│   │   │       │   ├── 📄 as_if_then_no_else.wat
│   │   │       │   ├── 📄 as_loop_broke.wat
│   │   │       │   ├── 📄 as_loop_first.wat
│   │   │       │   ├── 📄 as_loop_last.wat
│   │   │       │   ├── 📄 as_loop_mid.wat
│   │   │       │   ├── 📄 as_return_value.wat
│   │   │       │   ├── 📄 type_i32.wat
│   │   │       │   ├── 📄 type_i64.wat
│   │   │       │   ├── 📄 with_spilled_local.wat
│   │   │       │   └── 📄 with_spilled_local_in_if.wat
│   │   │       ├── 📁 v128_const
│   │   │       │   ├── 📄 call_id.wat
│   │   │       │   ├── 📄 id.wat
│   │   │       │   ├── 📄 multivalue.wat
│   │   │       │   └── 📄 spilled.wat
│   │   │       ├── 📄 v128_mixed_sig.wat
│   │   │       └── 📁 v128_ops
│   │   │           ├── 📄 and.wat
│   │   │           ├── 📄 andnot.wat
│   │   │           ├── 📄 any_true.wat
│   │   │           ├── 📄 bitselect.wat
│   │   │           ├── 📁 load_lane
│   │   │           │   ├── 📄 load16.wat
│   │   │           │   ├── 📄 load32.wat
│   │   │           │   ├── 📄 load64.wat
│   │   │           │   ├── 📄 load8.wat
│   │   │           │   └── 📄 zero_max_memory.wat
│   │   │           ├── 📄 not.wat
│   │   │           ├── 📄 or.wat
│   │   │           ├── 📁 store_lane
│   │   │           │   ├── 📄 store16.wat
│   │   │           │   ├── 📄 store32.wat
│   │   │           │   ├── 📄 store64.wat
│   │   │           │   └── 📄 store8.wat
│   │   │           └── 📄 xor.wat
│   │   ├── 📄 x64-bit-and-condition.wat
│   │   ├── 📄 x64-bmi1.wat
│   │   ├── 📄 x64-bmi2.wat
│   │   ├── 📄 x64-entry-trampoline.wat
│   │   ├── 📄 x64-mul16-negative.wat
│   │   ├── 📄 x64-pmin.wat
│   │   ├── 📄 x64-relaxed-simd-deterministic.wat
│   │   ├── 📄 x64-relaxed-simd.wat
│   │   ├── 📄 x64-shld.wat
│   │   ├── 📄 x64-simd-round-without-sse41.wat
│   │   ├── 📄 x64-simd-test-and-branch.wat
│   │   ├── 📄 x64-simple-load.wat
│   │   ├── 📄 x64-sse-no-fold-unaligned-load.wat
│   │   ├── 📄 x64-store-imm.wat
│   │   ├── 📄 x64-vector-patterns.wat
│   │   └── 📄 x64-wide-arithmetic.wat
│   ├── 📄 disas.rs
│   ├── 📁 misc_testsuite
│   │   ├── 📄 add.wast
│   │   ├── 📄 bit-and-conditions.wast
│   │   ├── 📄 br-table-fuzzbug.wast
│   │   ├── 📄 call_indirect.wast
│   │   ├── 📁 component-model
│   │   │   ├── 📄 adapter.wast
│   │   │   ├── 📄 aliasing.wast
│   │   │   ├── 📄 fused.wast
│   │   │   ├── 📄 import.wast
│   │   │   ├── 📄 instance.wast
│   │   │   ├── 📄 linking.wast
│   │   │   ├── 📄 modules.wast
│   │   │   ├── 📄 nested.wast
│   │   │   ├── 📄 resources.wast
│   │   │   ├── 📄 simple.wast
│   │   │   ├── 📄 strings.wast
│   │   │   ├── 📄 tags.wast
│   │   │   └── 📄 types.wast
│   │   ├── 📁 component-model-async
│   │   │   ├── 📄 backpressure-deadlock.wast
│   │   │   ├── 📄 backpressure-overflow.wast
│   │   │   ├── 📄 error-context.wast
│   │   │   ├── 📄 fused.wast
│   │   │   ├── 📄 future-cancel-read-dropped.wast
│   │   │   ├── 📄 future-cancel-write-completed.wast
│   │   │   ├── 📄 future-cancel-write-dropped.wast
│   │   │   ├── 📄 future-read.wast
│   │   │   ├── 📄 futures-must-write.wast
│   │   │   ├── 📄 futures.wast
│   │   │   ├── 📄 lift.wast
│   │   │   ├── 📄 lower.wast
│   │   │   ├── 📄 partial-stream-copies.wast
│   │   │   ├── 📄 streams.wast
│   │   │   ├── 📄 subtask-wait.wast
│   │   │   ├── 📄 sync-streams.wast
│   │   │   ├── 📄 task-builtins.wast
│   │   │   ├── 📄 trap-if-done.wast
│   │   │   ├── 📄 trap-in-post-return.wast
│   │   │   ├── 📄 wait-forever.wast
│   │   │   └── 📄 wait-forever2.wast
│   │   ├── 📁 component-model-gc
│   │   │   └── 📄 empty.wast
│   │   ├── 📄 control-flow.wast
│   │   ├── 📁 custom-page-sizes
│   │   │   ├── 📄 custom-page-sizes-invalid.wast
│   │   │   └── 📄 custom-page-sizes.wast
│   │   ├── 📄 div-rem.wast
│   │   ├── 📄 elem-ref-null.wast
│   │   ├── 📄 elem_drop.wast
│   │   ├── 📄 embenchen_fannkuch.wast
│   │   ├── 📄 embenchen_fasta.wast
│   │   ├── 📄 embenchen_ifs.wast
│   │   ├── 📄 embenchen_primes.wast
│   │   ├── 📄 empty.wast
│   │   ├── 📄 export-large-signature.wast
│   │   ├── 📄 externref-id-function.wast
│   │   ├── 📄 externref-segment.wast
│   │   ├── 📄 externref-table-dropped-segment-issue-8281.wast
│   │   ├── 📄 fib.wast
│   │   ├── 📄 float-round-doesnt-load-too-much.wast
│   │   ├── 📄 func-400-params.wast
│   │   ├── 📁 function-references
│   │   │   ├── 📄 call_indirect.wast
│   │   │   ├── 📄 instance.wast
│   │   │   ├── 📄 table_fill.wast
│   │   │   ├── 📄 table_get.wast
│   │   │   ├── 📄 table_grow.wast
│   │   │   └── 📄 table_set.wast
│   │   ├── 📁 gc
│   │   │   ├── 📄 alloc-v128-struct.wast
│   │   │   ├── 📄 anyref_that_is_i31_barriers.wast
│   │   │   ├── 📄 array-alloc-too-large.wast
│   │   │   ├── 📄 array-init-data.wast
│   │   │   ├── 📄 array-new-data.wast
│   │   │   ├── 📄 array-new-elem.wast
│   │   │   ├── 📄 array-types.wast
│   │   │   ├── 📄 arrays-of-different-types.wast
│   │   │   ├── 📄 externrefs-can-be-i31refs.wast
│   │   │   ├── 📄 func-refs-in-gc-heap.wast
│   │   │   ├── 📄 fuzz-segfault.wast
│   │   │   ├── 📄 i31ref-of-global-initializers.wast
│   │   │   ├── 📄 i31ref-tables.wast
│   │   │   ├── 📄 issue-10171.wast
│   │   │   ├── 📄 issue-10182.wast
│   │   │   ├── 📄 issue-10353.wast
│   │   │   ├── 📄 issue-10397.wast
│   │   │   ├── 📄 issue-10459.wast
│   │   │   ├── 📄 issue-10467.wast
│   │   │   ├── 📄 more-rec-groups-than-types.wast
│   │   │   ├── 📄 null-i31ref.wast
│   │   │   ├── 📄 rec-group-funcs.wast
│   │   │   ├── 📄 ref-test.wast
│   │   │   ├── 📄 struct-instructions.wast
│   │   │   └── 📄 struct-types.wast
│   │   ├── 📄 imported-memory-copy.wast
│   │   ├── 📄 int-to-float-splat.wast
│   │   ├── 📄 issue11561.wast
│   │   ├── 📄 issue11563.wat
│   │   ├── 📄 issue1809.wast
│   │   ├── 📄 issue4840.wast
│   │   ├── 📄 issue4857.wast
│   │   ├── 📄 issue4890.wast
│   │   ├── 📄 issue6562.wast
│   │   ├── 📄 issue694.wast
│   │   ├── 📄 linking-errors.wast
│   │   ├── 📄 many-results-with-exceptions.wast
│   │   ├── 📄 many-results.wast
│   │   ├── 📄 many-return-values.wast
│   │   ├── 📄 many_table_gets_lead_to_gc.wast
│   │   ├── 📄 memory-combos.wast
│   │   ├── 📄 memory-copy.wast
│   │   ├── 📁 memory64
│   │   │   ├── 📄 bounds.wast
│   │   │   ├── 📄 codegen.wast
│   │   │   ├── 📄 linking-errors.wast
│   │   │   ├── 📄 linking.wast
│   │   │   ├── 📄 more-than-4gb.wast
│   │   │   ├── 📄 multi-memory.wast
│   │   │   ├── 📄 offsets.wast
│   │   │   ├── 📄 simd.wast
│   │   │   └── 📄 threads.wast
│   │   ├── 📄 misc_traps.wast
│   │   ├── 📄 mul16-negative.wast
│   │   ├── 📁 multi-memory
│   │   │   └── 📄 simple.wast
│   │   ├── 📄 mutable_externref_globals.wast
│   │   ├── 📄 no-mixup-stack-maps.wast
│   │   ├── 📄 no-panic-on-invalid.wast
│   │   ├── 📄 no-panic.wast
│   │   ├── 📄 partial-init-memory-segment.wast
│   │   ├── 📄 partial-init-table-segment.wast
│   │   ├── 📄 rs2wasm-add-func.wast
│   │   ├── 📄 rust_fannkuch.wast
│   │   ├── 📁 shared-everything-threads
│   │   │   └── 📄 flags.wast
│   │   ├── 📁 simd
│   │   │   ├── 📄 almost-extmul.wast
│   │   │   ├── 📄 canonicalize-nan.wast
│   │   │   ├── 📄 cvt-from-uint.wast
│   │   │   ├── 📄 edge-of-memory.wast
│   │   │   ├── 📄 interesting-float-splat.wast
│   │   │   ├── 📄 issue4807.wast
│   │   │   ├── 📄 issue6725-no-egraph-panic.wast
│   │   │   ├── 📄 issue_3173_select_v128.wast
│   │   │   ├── 📄 issue_3327_bnot_lowering.wast
│   │   │   ├── 📄 load_splat_out_of_bounds.wast
│   │   │   ├── 📄 replace-lane-preserve.wast
│   │   │   ├── 📄 spillslot-size-fuzzbug.wast
│   │   │   ├── 📄 sse-cannot-fold-unaligned-loads.wast
│   │   │   ├── 📄 unaligned-load.wast
│   │   │   └── 📄 v128-select.wast
│   │   ├── 📄 simple-unreachable.wast
│   │   ├── 📄 simple_ref_is_null.wast
│   │   ├── 📄 sink-float-but-dont-trap.wast
│   │   ├── 📄 stack-args-exceptions.wast
│   │   ├── 📄 stack_overflow.wast
│   │   ├── 📄 table_copy.wast
│   │   ├── 📄 table_copy_on_imported_tables.wast
│   │   ├── 📄 table_grow_with_funcref.wast
│   │   ├── 📁 tail-call
│   │   │   └── 📄 loop-across-modules.wast
│   │   ├── 📁 threads
│   │   │   ├── 📄 LB.wast
│   │   │   ├── 📄 LB_atomic.wast
│   │   │   ├── 📄 MP.wast
│   │   │   ├── 📄 MP_atomic.wast
│   │   │   ├── 📄 MP_wait.wast
│   │   │   ├── 📄 SB.wast
│   │   │   ├── 📄 SB_atomic.wast
│   │   │   ├── 📄 atomics_notify.wast
│   │   │   ├── 📄 atomics_wait_address.wast
│   │   │   ├── 📄 load-store-alignment.wast
│   │   │   └── 📄 wait_notify.wast
│   │   ├── 📄 traps-skip-catch-all.wast
│   │   ├── 📄 wide-arithmetic.wast
│   │   └── 📁 winch
│   │       ├── 📄 br_table.wast
│   │       ├── 📄 float-comparison.wast
│   │       ├── 📄 fuel_stack_alignment.wat
│   │       ├── 📄 global.wast
│   │       ├── 📄 imported_globals_fuzzbug.wast
│   │       ├── 📄 issue-10331.wast
│   │       ├── 📄 issue-10357.wast
│   │       ├── 📄 issue-10460.wast
│   │       ├── 📄 issue-10613.wast
│   │       ├── 📄 issue-10751.wast
│   │       ├── 📄 issue-424666628.wast
│   │       ├── 📄 misc.wast
│   │       ├── 📄 oob.wast
│   │       ├── 📄 replace_lane.wast
│   │       ├── 📄 select.wast
│   │       ├── 📄 simd_multivalue.wast
│   │       ├── 📄 table_fill.wast
│   │       ├── 📄 table_get.wast
│   │       ├── 📄 table_grow.wast
│   │       ├── 📄 table_set.wast
│   │       ├── 📄 use-innermost-frame.wast
│   │       └── 📄 v128_load_lane_invalid_address.wast
│   ├── 📄 pcc_memory.rs
│   ├── 📄 rlimited-memory.rs
│   ├── 📁 spec_testsuite
│   ├── 📄 wasi.rs
│   ├── 📁 wasi_testsuite
│   │   ├── 📁 wasi-common
│   │   └── 📁 wasi-threads
│   └── 📄 wast.rs
└── 📁 winch
    ├── 📄 README.md
    └── 📁 codegen
        ├── 📄 Cargo.toml
        ├── 📄 LICENSE
        ├── 📄 build.rs
        └── 📁 src
            ├── 📁 abi
            │   ├── 📄 local.rs
            │   └── 📄 mod.rs
            ├── 📁 codegen
            │   ├── 📄 bounds.rs
            │   ├── 📄 builtin.rs
            │   ├── 📄 call.rs
            │   ├── 📄 context.rs
            │   ├── 📄 control.rs
            │   ├── 📄 env.rs
            │   ├── 📄 error.rs
            │   ├── 📄 mod.rs
            │   └── 📄 phase.rs
            ├── 📄 constant_pool.rs
            ├── 📁 frame
            │   └── 📄 mod.rs
            ├── 📁 isa
            │   ├── 📁 aarch64
            │   │   ├── 📄 abi.rs
            │   │   ├── 📄 address.rs
            │   │   ├── 📄 asm.rs
            │   │   ├── 📄 masm.rs
            │   │   ├── 📄 mod.rs
            │   │   └── 📄 regs.rs
            │   ├── 📄 mod.rs
            │   ├── 📄 reg.rs
            │   └── 📁 x64
            │       ├── 📄 abi.rs
            │       ├── 📄 address.rs
            │       ├── 📄 asm.rs
            │       ├── 📄 masm.rs
            │       ├── 📄 mod.rs
            │       └── 📄 regs.rs
            ├── 📄 lib.rs
            ├── 📄 masm.rs
            ├── 📄 regalloc.rs
            ├── 📄 regset.rs
            ├── 📄 stack.rs
            └── 📄 visitor.rs

--- Fuzz Build Log ---
+ for f in $fuzz_targets
++ basename /src/wasmtime/fuzz/fuzz_targets/wast_tests
+ src_name=wast_tests
+ dst_name=wast_tests
+ cp /src/wasmtime/target/x86_64-unknown-linux-gnu/release/wast_tests /out/wast_tests
+ [[ -f /src/wast_tests.options ]]
+ cp /src/default.options /out/wast_tests.options
+ build wasm-tools wasm-tools- '' target --features wasmtime
+ project=wasm-tools
+ shift
+ fuzzer_prefix=wasm-tools-
+ shift
+ fuzz_targets=
+ shift
+ fuzz_target_path=target
+ shift
+ PROJECT_DIR=/src/wasm-tools
+ cd /src/wasm-tools
++ cargo metadata --no-deps --format-version 1
++ jq -r .workspace_root
+ crate_src_abspath=/src/wasm-tools
++ find . -name '*.rs'
++ cut -d/ -f2
++ uniq
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src'
+ read i
+ cd /src/wasm-tools/fuzz
+ cargo fuzz build --sanitizer none --strip-dead-code -O --debug-assertions --features wasmtime
[1m[32m    Updating[0m crates.io index
[1m[32m    Updating[0m git repository `https://github.com/bytecodealliance/wit-bindgen`
[1m[32m    Updating[0m git submodule `https://github.com/WebAssembly/wasi-cli`
[1m[32m    Updating[0m git submodule `https://github.com/WebAssembly/wasi-clocks`
[1m[32m    Updating[0m git submodule `https://github.com/WebAssembly/wasi-filesystem`
[1m[32m    Updating[0m git submodule `https://github.com/WebAssembly/wasi-http`
[1m[32m    Updating[0m git submodule `https://github.com/WebAssembly/wasi-io`
[1m[32m Downloading[0m crates ...
[1m[32m  Downloaded[0m colorchoice v1.0.4
[1m[32m  Downloaded[0m derive_arbitrary v1.4.1
[1m[32m  Downloaded[0m cranelift-frontend v0.121.1
[1m[32m  Downloaded[0m autocfg v1.5.0
[1m[32m  Downloaded[0m anyhow v1.0.98
[1m[32m  Downloaded[0m equivalent v1.0.2
[1m[32m  Downloaded[0m cranelift-bforest v0.121.1
[1m[32m  Downloaded[0m instant v0.1.13
[1m[32m  Downloaded[0m anstream v0.6.19
[1m[32m  Downloaded[0m allocator-api2 v0.2.21
[1m[32m  Downloaded[0m ahash v0.8.12
[1m[32m  Downloaded[0m cranelift-assembler-x64-meta v0.121.1
[1m[32m  Downloaded[0m errno v0.3.13
[1m[32m  Downloaded[0m crc32fast v1.4.2
[1m[32m  Downloaded[0m foldhash v0.1.5
[1m[32m  Downloaded[0m anstyle v1.0.11
[1m[32m  Downloaded[0m cfg-if v1.0.1
[1m[32m  Downloaded[0m env_logger v0.11.8
[1m[32m  Downloaded[0m addr2line v0.24.2
[1m[32m  Downloaded[0m jobserver v0.1.33
[1m[32m  Downloaded[0m indexmap v1.9.3
[1m[32m  Downloaded[0m getrandom v0.3.3
[1m[32m  Downloaded[0m embedded-io v0.6.1
[1m[32m  Downloaded[0m env_filter v0.1.3
[1m[32m  Downloaded[0m either v1.15.0
[1m[32m  Downloaded[0m anstyle-query v1.1.3
[1m[32m  Downloaded[0m itoa v1.0.15
[1m[32m  Downloaded[0m cobs v0.3.0
[1m[32m  Downloaded[0m leb128 v0.2.5
[1m[32m  Downloaded[0m anstyle-parse v0.2.7
[1m[32m  Downloaded[0m flagset v0.4.7
[1m[32m  Downloaded[0m cranelift-native v0.121.1
[1m[32m  Downloaded[0m cranelift-assembler-x64 v0.121.1
[1m[32m  Downloaded[0m bitflags v2.9.1
[1m[32m  Downloaded[0m cranelift-srcgen v0.121.1
[1m[32m  Downloaded[0m cranelift-control v0.121.1
[1m[32m  Downloaded[0m cranelift-entity v0.121.1
[1m[32m  Downloaded[0m cranelift-codegen-shared v0.121.1
[1m[32m  Downloaded[0m postcard v1.1.2
[1m[32m  Downloaded[0m utf8parse v0.2.2
[1m[32m  Downloaded[0m cranelift-bitset v0.121.1
[1m[32m  Downloaded[0m ppv-lite86 v0.2.21
[1m[32m  Downloaded[0m ryu v1.0.20
[1m[32m  Downloaded[0m target-lexicon v0.13.2
[1m[32m  Downloaded[0m version_check v0.9.5
[1m[32m  Downloaded[0m smallvec v1.15.1
[1m[32m  Downloaded[0m wasmprinter v0.233.0
[1m[32m  Downloaded[0m unicode-ident v1.0.18
[1m[32m  Downloaded[0m once_cell v1.21.3
[1m[32m  Downloaded[0m proc-macro2 v1.0.95
[1m[32m  Downloaded[0m unicode-xid v0.2.6
[1m[32m  Downloaded[0m tempfile v3.20.0
[1m[32m  Downloaded[0m wasmtime-jit-icache-coherence v34.0.1
[1m[32m  Downloaded[0m wasmtime-component-util v34.0.1
[1m[32m  Downloaded[0m aho-corasick v1.1.3
[1m[32m  Downloaded[0m wasm-metadata v0.214.0
[1m[32m  Downloaded[0m semver v1.0.26
[1m[32m  Downloaded[0m wasmtime-asm-macros v34.0.1
[1m[32m  Downloaded[0m pulley-macros v34.0.1
[1m[32m  Downloaded[0m serde v1.0.222
[1m[32m  Downloaded[0m quote v1.0.40
[1m[32m  Downloaded[0m wasmtime-fiber v34.0.1
[1m[32m  Downloaded[0m wasm-encoder v0.214.0
[1m[32m  Downloaded[0m serde_derive v1.0.222
[1m[32m  Downloaded[0m serde_core v1.0.222
[1m[32m  Downloaded[0m cc v1.2.29
[1m[32m  Downloaded[0m wasmtime-winch v34.0.1
[1m[32m  Downloaded[0m wasmtime-slab v34.0.1
[1m[32m  Downloaded[0m wasmtime-wit-bindgen v34.0.1
[1m[32m  Downloaded[0m wasmtime-versioned-export-macros v34.0.1
[1m[32m  Downloaded[0m jiff v0.2.15
[1m[32m  Downloaded[0m linux-raw-sys v0.4.15
[1m[32m  Downloaded[0m encoding_rs v0.8.35
[1m[32m  Downloaded[0m wasmtime-math v34.0.1
[1m[32m  Downloaded[0m linux-raw-sys v0.9.4
[1m[32m  Downloaded[0m indexmap v2.10.0
[1m[32m  Downloaded[0m hashbrown v0.15.4
[1m[32m  Downloaded[0m bumpalo v3.19.0
[1m[32m  Downloaded[0m libfuzzer-sys v0.4.10
[1m[32m  Downloaded[0m libm v0.2.15
[1m[32m  Downloaded[0m hashbrown v0.14.5
[1m[32m  Downloaded[0m libc v0.2.174
[1m[32m  Downloaded[0m cranelift-codegen v0.121.1
[1m[32m  Downloaded[0m cranelift-isle v0.121.1
[1m[32m  Downloaded[0m rustix v1.0.7
[1m[32m  Downloaded[0m cranelift-codegen-meta v0.121.1
[1m[32m  Downloaded[0m syn v2.0.104
[1m[32m  Downloaded[0m regalloc2 v0.12.2
[1m[32m  Downloaded[0m regex-automata v0.4.9
[1m[32m  Downloaded[0m regex v1.11.1
[1m[32m  Downloaded[0m rand v0.9.1
[1m[32m  Downloaded[0m object v0.36.7
[1m[32m  Downloaded[0m rustix v0.38.44
[1m[32m  Downloaded[0m wasmparser v0.214.0
[1m[32m  Downloaded[0m unicode-width v0.2.1
[1m[32m  Downloaded[0m regex-syntax v0.8.5
[1m[32m  Downloaded[0m wasmtime-component-macro v34.0.1
[1m[32m  Downloaded[0m pulley-interpreter v34.0.1
[1m[32m  Downloaded[0m memchr v2.7.5
[1m[32m  Downloaded[0m wasm-encoder v0.233.0
[1m[32m  Downloaded[0m wasmtime-cranelift v34.0.1
[1m[32m  Downloaded[0m wasmtime-environ v34.0.1
[1m[32m  Downloaded[0m wasmparser v0.233.0
[1m[32m  Downloaded[0m wasmtime v34.0.1
[1m[32m  Downloaded[0m spdx v0.10.8
[1m[32m  Downloaded[0m winch-codegen v34.0.1
[1m[32m  Downloaded[0m wit-component v0.214.0
[1m[32m  Downloaded[0m wit-parser v0.214.0
[1m[32m  Downloaded[0m wit-parser v0.233.0
[1m[32m  Downloaded[0m zerocopy v0.8.26
[1m[32m   Compiling[0m proc-macro2 v1.0.95
[1m[32m   Compiling[0m unicode-ident v1.0.18
[1m[32m   Compiling[0m serde_core v1.0.222
[1m[32m   Compiling[0m serde v1.0.222
[1m[32m   Compiling[0m foldhash v0.1.5
[1m[32m   Compiling[0m bitflags v2.9.1
[1m[32m   Compiling[0m equivalent v1.0.2
[1m[32m   Compiling[0m cfg-if v1.0.1
[1m[32m   Compiling[0m semver v1.0.26
[1m[32m   Compiling[0m anyhow v1.0.98
[1m[32m   Compiling[0m libc v0.2.174
[1m[32m   Compiling[0m memchr v2.7.5
[1m[32m   Compiling[0m log v0.4.27
[1m[32m   Compiling[0m serde_json v1.0.140
[1m[32m   Compiling[0m zerocopy v0.8.26
[1m[32m   Compiling[0m hashbrown v0.15.4
[1m[32m   Compiling[0m wasmparser v0.239.0 (/src/wasm-tools/crates/wasmparser)
[1m[32m   Compiling[0m leb128fmt v0.1.0
[1m[32m   Compiling[0m cranelift-srcgen v0.121.1
[1m[32m   Compiling[0m cranelift-assembler-x64-meta v0.121.1
[1m[32m   Compiling[0m allocator-api2 v0.2.21
[1m[32m   Compiling[0m once_cell v1.21.3
[1m[32m   Compiling[0m cranelift-bitset v0.121.1
[1m[32m   Compiling[0m version_check v0.9.5
[1m[32m   Compiling[0m libm v0.2.15
[1m[32m   Compiling[0m cranelift-isle v0.121.1
[1m[32m   Compiling[0m wasm-encoder v0.239.0 (/src/wasm-tools/crates/wasm-encoder)
[1m[32m   Compiling[0m bumpalo v3.19.0
[1m[32m   Compiling[0m ahash v0.8.12
[1m[32m   Compiling[0m cranelift-codegen-shared v0.121.1
[1m[32m   Compiling[0m thiserror v2.0.12
[1m[32m   Compiling[0m target-lexicon v0.13.2
[1m[32m   Compiling[0m cranelift-assembler-x64 v0.121.1
[1m[32m   Compiling[0m ryu v1.0.20
[1m[32m   Compiling[0m shlex v1.3.0
[1m[32m   Compiling[0m itoa v1.0.15
[1m[32m   Compiling[0m getrandom v0.3.3
[1m[32m   Compiling[0m wasmparser v0.233.0
[1m[32m   Compiling[0m rustc-hash v2.1.1
[1m[32m   Compiling[0m id-arena v2.2.1
[1m[32m   Compiling[0m unicode-xid v0.2.6
[1m[32m   Compiling[0m autocfg v1.5.0
[1m[32m   Compiling[0m quote v1.0.40
[1m[32m   Compiling[0m termcolor v1.4.1
[1m[32m   Compiling[0m syn v2.0.104
[1m[32m   Compiling[0m jobserver v0.1.33
[1m[32m   Compiling[0m wasm-encoder v0.233.0
[1m[32m   Compiling[0m object v0.36.7
[1m[32m   Compiling[0m cc v1.2.29
[1m[32m   Compiling[0m indexmap v1.9.3
[1m[32m   Compiling[0m aho-corasick v1.1.3
[1m[32m   Compiling[0m crc32fast v1.4.2
[1m[32m   Compiling[0m rustix v0.38.44
[1m[32m   Compiling[0m wasmtime-math v34.0.1
[1m[32m   Compiling[0m unicode-width v0.2.1
[1m[32m   Compiling[0m regex-syntax v0.8.5
[1m[32m   Compiling[0m rustix v1.0.7
[1m[32m   Compiling[0m rand_core v0.9.3
[1m[32m   Compiling[0m wasmtime-component-macro v34.0.1
[1m[32m   Compiling[0m either v1.15.0
[1m[32m   Compiling[0m leb128 v0.2.5
[1m[32m   Compiling[0m ppv-lite86 v0.2.21
[1m[32m   Compiling[0m linux-raw-sys v0.9.4
[1m[32m   Compiling[0m linux-raw-sys v0.4.15
[1m[32m   Compiling[0m hashbrown v0.12.3
[1m[32m   Compiling[0m hashbrown v0.14.5
[1m[32m   Compiling[0m utf8parse v0.2.2
[1m[32m   Compiling[0m heck v0.5.0
[1m[32m   Compiling[0m wasmtime-component-util v34.0.1
[1m[32m   Compiling[0m anstyle-parse v0.2.7
[1m[32m   Compiling[0m rand_chacha v0.9.0
[1m[32m   Compiling[0m itertools v0.14.0
[1m[32m   Compiling[0m regex-automata v0.4.9
[1m[32m   Compiling[0m indexmap v2.10.0
[1m[32m   Compiling[0m libfuzzer-sys v0.4.10
[1m[32m   Compiling[0m instant v0.1.13
[1m[32m   Compiling[0m anstyle-query v1.1.3
[1m[32m   Compiling[0m symbolic_expressions v5.0.3
[1m[32m   Compiling[0m colorchoice v1.0.4
[1m[32m   Compiling[0m anstyle v1.0.11
[1m[32m   Compiling[0m is_terminal_polyfill v1.70.1
[1m[32m   Compiling[0m anstream v0.6.19
[1m[32m   Compiling[0m rand v0.9.1
[1m[32m   Compiling[0m wasmtime-jit-icache-coherence v34.0.1
[1m[32m   Compiling[0m wasmtime-asm-macros v34.0.1
[1m[32m   Compiling[0m encoding_rs v0.8.35
[1m[32m   Compiling[0m jiff v0.2.15
[1m[32m   Compiling[0m fastrand v2.3.0
[1m[32m   Compiling[0m wasmtime-slab v34.0.1
[1m[32m   Compiling[0m flagset v0.4.7
[1m[32m   Compiling[0m memfd v0.6.4
[1m[32m   Compiling[0m tempfile v3.20.0
[1m[32m   Compiling[0m serde_derive v1.0.222
[1m[32m   Compiling[0m pulley-macros v34.0.1
[1m[32m   Compiling[0m derive_arbitrary v1.4.1
[1m[32m   Compiling[0m thiserror-impl v2.0.12
[1m[32m   Compiling[0m wasmtime-versioned-export-macros v34.0.1
[1m[32m   Compiling[0m pulley-interpreter v34.0.1
[1m[32m   Compiling[0m wasmtime v34.0.1
[1m[32m   Compiling[0m regex v1.11.1
[1m[32m   Compiling[0m env_filter v0.1.3
[1m[32m   Compiling[0m arbitrary v1.4.1
[1m[32m   Compiling[0m cobs v0.3.0
[1m[32m   Compiling[0m cranelift-control v0.121.1
[1m[32m   Compiling[0m cranelift-codegen-meta v0.121.1
[1m[32m   Compiling[0m wit-parser v0.233.0
[1m[32m   Compiling[0m env_logger v0.11.8
[1m[32m   Compiling[0m smallvec v1.15.1
[1m[32m   Compiling[0m postcard v1.1.2
[1m[32m   Compiling[0m cranelift-entity v0.121.1
[1m[32m   Compiling[0m regalloc2 v0.12.2
[1m[32m   Compiling[0m spdx v0.10.8
[1m[32m   Compiling[0m cranelift-bforest v0.121.1
[1m[32m   Compiling[0m gimli v0.31.1
[1m[32m   Compiling[0m wasmparser v0.214.0
[1m[32m   Compiling[0m egg v0.6.0
[1m[32m   Compiling[0m cranelift-codegen v0.121.1
[1m[32m   Compiling[0m wasmtime-wit-bindgen v34.0.1
[1m[32m   Compiling[0m wasm-encoder v0.214.0
[1m[32m   Compiling[0m wit-parser v0.214.0
[1m[32m   Compiling[0m wasmprinter v0.233.0
[1m[32m   Compiling[0m wit-parser v0.239.0 (/src/wasm-tools/crates/wit-parser)
[1m[32m   Compiling[0m wasm-metadata v0.214.0
[1m[32m   Compiling[0m wast v239.0.0 (/src/wasm-tools/crates/wast)
[1m[32m   Compiling[0m wasm-metadata v0.239.0 (/src/wasm-tools/crates/wasm-metadata)
[1m[32m   Compiling[0m wasmtime-environ v34.0.1
[1m[32m   Compiling[0m wit-component v0.214.0
[1m[32m   Compiling[0m wasm-mutate v0.239.0 (/src/wasm-tools/crates/wasm-mutate)
[1m[32m   Compiling[0m wasm-smith v0.239.0 (/src/wasm-tools/crates/wasm-smith)
[1m[32m   Compiling[0m wasmprinter v0.239.0 (/src/wasm-tools/crates/wasmprinter)
[1m[32m   Compiling[0m wat v1.239.0 (/src/wasm-tools/crates/wat)
[1m[32m   Compiling[0m wit-component v0.239.0 (/src/wasm-tools/crates/wit-component)
[1m[32m   Compiling[0m wit-smith v0.239.0 (/src/wasm-tools/crates/wit-smith)
[1m[32m   Compiling[0m cranelift-frontend v0.121.1
[1m[32m   Compiling[0m cranelift-native v0.121.1
[1m[32m   Compiling[0m wasmtime-cranelift v34.0.1
[1m[32m   Compiling[0m wasm-tools-fuzz v0.0.0 (/src/wasm-tools/fuzz)
[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 6m 09s
+ FUZZ_TARGET_OUTPUT_DIR=/src/wasm-tools/target/x86_64-unknown-linux-gnu/release
+ '[' x = x ']'
+ fuzz_targets='/src/wasm-tools/fuzz/fuzz_targets/*.rs'
+ for f in $fuzz_targets
++ basename /src/wasm-tools/fuzz/fuzz_targets/run
+ src_name=run
+ dst_name=wasm-tools-run
+ cp /src/wasm-tools/target/x86_64-unknown-linux-gnu/release/run /out/wasm-tools-run
+ [[ -f /src/wasm-tools-run.options ]]
+ cp /src/default.options /out/wasm-tools-run.options
+ build regalloc2 regalloc2- ion_checker fuzz/target
+ project=regalloc2
+ shift
+ fuzzer_prefix=regalloc2-
+ shift
+ fuzz_targets=ion_checker
+ shift
+ fuzz_target_path=fuzz/target
+ shift
+ PROJECT_DIR=/src/regalloc2
+ cd /src/regalloc2
++ cargo metadata --no-deps --format-version 1
++ jq -r .workspace_root
+ crate_src_abspath=/src/regalloc2
++ find . -name '*.rs'
++ cut -d/ -f2
++ uniq
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src --remap-path-prefix regalloc2-tool=/src/regalloc2/regalloc2-tool'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src --remap-path-prefix regalloc2-tool=/src/regalloc2/regalloc2-tool'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src --remap-path-prefix regalloc2-tool=/src/regalloc2/regalloc2-tool --remap-path-prefix fuzz=/src/regalloc2/fuzz'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src --remap-path-prefix regalloc2-tool=/src/regalloc2/regalloc2-tool --remap-path-prefix fuzz=/src/regalloc2/fuzz'
+ read i
+ export 'RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src --remap-path-prefix regalloc2-tool=/src/regalloc2/regalloc2-tool --remap-path-prefix fuzz=/src/regalloc2/fuzz --remap-path-prefix src=/src/regalloc2/src'
+ RUSTFLAGS='--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers --remap-path-prefix build.rs=/src/wasmtime/build.rs --remap-path-prefix cranelift=/src/wasmtime/cranelift --remap-path-prefix examples=/src/wasmtime/examples --remap-path-prefix crates=/src/wasmtime/crates --remap-path-prefix tests=/src/wasmtime/tests --remap-path-prefix fuzz=/src/wasmtime/fuzz --remap-path-prefix ci=/src/wasmtime/ci --remap-path-prefix benches=/src/wasmtime/benches --remap-path-prefix pulley=/src/wasmtime/pulley --remap-path-prefix winch=/src/wasmtime/winch --remap-path-prefix src=/src/wasmtime/src --remap-path-prefix scripts=/src/wasmtime/scripts --remap-path-prefix build.rs=/src/wasm-tools/build.rs --remap-path-prefix examples=/src/wasm-tools/examples --remap-path-prefix crates=/src/wasm-tools/crates --remap-path-prefix tests=/src/wasm-tools/tests --remap-path-prefix fuzz=/src/wasm-tools/fuzz --remap-path-prefix ci=/src/wasm-tools/ci --remap-path-prefix playground=/src/wasm-tools/playground --remap-path-prefix src=/src/wasm-tools/src --remap-path-prefix regalloc2-tool=/src/regalloc2/regalloc2-tool --remap-path-prefix fuzz=/src/regalloc2/fuzz --remap-path-prefix src=/src/regalloc2/src'
+ read i
+ cd /src/regalloc2/fuzz
+ cargo fuzz build --sanitizer none --strip-dead-code -O --debug-assertions
[1m[32m    Updating[0m crates.io index
[1m[32m     Locking[0m 37 packages to latest compatible versions
[1m[36m      Adding[0m env_logger v0.8.4 [1m[33m(available: v0.11.8)[0m
[1m[32m Downloading[0m crates ...
[1m[32m  Downloaded[0m atty v0.2.14
[1m[32m  Downloaded[0m log v0.4.28
[1m[32m  Downloaded[0m humantime v2.3.0
[1m[32m  Downloaded[0m arbitrary v1.4.2
[1m[32m  Downloaded[0m env_logger v0.8.4
[1m[32m  Downloaded[0m arbtest v0.3.2
[1m[32m  Downloaded[0m jobserver v0.1.34
[1m[32m  Downloaded[0m find-msvc-tools v0.1.2
[1m[32m  Downloaded[0m regex-syntax v0.8.6
[1m[32m  Downloaded[0m libc v0.2.176
[1m[32m  Downloaded[0m memchr v2.7.6
[1m[32m  Downloaded[0m hashbrown v0.15.5
[1m[32m  Downloaded[0m cc v1.2.39
[1m[32m  Downloaded[0m regex v1.11.3
[1m[32m  Downloaded[0m regex-automata v0.4.11
[1m[32m   Compiling[0m libc v0.2.176
[1m[32m   Compiling[0m memchr v2.7.6
[1m[32m   Compiling[0m find-msvc-tools v0.1.2
[1m[32m   Compiling[0m shlex v1.3.0
[1m[32m   Compiling[0m regex-syntax v0.8.6
[1m[32m   Compiling[0m arbitrary v1.4.2
[1m[32m   Compiling[0m allocator-api2 v0.2.21
[1m[32m   Compiling[0m log v0.4.28
[1m[32m   Compiling[0m humantime v2.3.0
[1m[32m   Compiling[0m termcolor v1.4.1
[1m[32m   Compiling[0m hashbrown v0.15.5
[1m[32m   Compiling[0m smallvec v1.15.1
[1m[32m   Compiling[0m rustc-hash v2.1.1
[1m[32m   Compiling[0m bumpalo v3.19.0
[1m[32m   Compiling[0m aho-corasick v1.1.3
[1m[32m   Compiling[0m arbtest v0.3.2
[1m[32m   Compiling[0m regalloc2 v0.13.2 (/src/regalloc2)
[1m[32m   Compiling[0m jobserver v0.1.34
[1m[32m   Compiling[0m atty v0.2.14
[1m[32m   Compiling[0m cc v1.2.39
[1m[32m   Compiling[0m regex-automata v0.4.11
[1m[32m   Compiling[0m libfuzzer-sys v0.4.10
[1m[32m   Compiling[0m regex v1.11.3
[1m[32m   Compiling[0m env_logger v0.8.4
[1m[32m   Compiling[0m regalloc2-fuzz v0.0.0 (/src/regalloc2/fuzz)
[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 50.65s
+ FUZZ_TARGET_OUTPUT_DIR=/src/regalloc2/fuzz/target/x86_64-unknown-linux-gnu/release
+ '[' xion_checker = x ']'
+ for f in $fuzz_targets
++ basename ion_checker
+ src_name=ion_checker
+ dst_name=regalloc2-ion_checker
+ cp /src/regalloc2/fuzz/target/x86_64-unknown-linux-gnu/release/ion_checker /out/regalloc2-ion_checker
cp: cannot stat '/src/regalloc2/fuzz/target/x86_64-unknown-linux-gnu/release/ion_checker': No such file or directory
ERROR:__main__:Building fuzzers failed.
